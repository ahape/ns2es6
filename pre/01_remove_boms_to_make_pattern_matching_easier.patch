diff --git a/ts/Admin/DataCustomization/Classes/expressionvalidator.ts b/ts/Admin/DataCustomization/Classes/expressionvalidator.ts
index 3c2b9da..b6c6dbf 100644
--- a/ts/Admin/DataCustomization/Classes/expressionvalidator.ts
+++ b/ts/Admin/DataCustomization/Classes/expressionvalidator.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Classes {
+namespace Brightmetrics.Admin.DataCustomization.Classes {
     const placeholderNum = 1.337;
     const endsWithIllegalRx = /[\+\-\/\*\(]$/g;
     const forEachRx = /\d+(\.\d+)?|[^\d]/g;
diff --git a/ts/Admin/DataCustomization/Enums/customtype.ts b/ts/Admin/DataCustomization/Enums/customtype.ts
index f5ebf70..7544dbe 100644
--- a/ts/Admin/DataCustomization/Enums/customtype.ts
+++ b/ts/Admin/DataCustomization/Enums/customtype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Enums {
+namespace Brightmetrics.Admin.DataCustomization.Enums {
     export enum CustomType {
         CalculatedField = "Custom Calculated Field",
         DetailDimension = "Custom Detail Dimension",
diff --git a/ts/Admin/DataCustomization/Enums/operationtype.ts b/ts/Admin/DataCustomization/Enums/operationtype.ts
index 98fbb91..54973b1 100644
--- a/ts/Admin/DataCustomization/Enums/operationtype.ts
+++ b/ts/Admin/DataCustomization/Enums/operationtype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Enums {
+namespace Brightmetrics.Admin.DataCustomization.Enums {
     export enum OperationType {
         Divide = "/",
         GroupEnd = ")",
diff --git a/ts/Admin/DataCustomization/Enums/view.ts b/ts/Admin/DataCustomization/Enums/view.ts
index ae9998f..fb3552c 100644
--- a/ts/Admin/DataCustomization/Enums/view.ts
+++ b/ts/Admin/DataCustomization/Enums/view.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Enums {
+namespace Brightmetrics.Admin.DataCustomization.Enums {
     export enum View {
         AllItems = "all-items",
         CustomCalculatedFieldEditor = "ccf-editor",
diff --git a/ts/Admin/DataCustomization/Interfaces/IView.ts b/ts/Admin/DataCustomization/Interfaces/IView.ts
index 5e6c384..5af27e1 100644
--- a/ts/Admin/DataCustomization/Interfaces/IView.ts
+++ b/ts/Admin/DataCustomization/Interfaces/IView.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface IView {
         templateId: string;
     }
diff --git a/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfielddata.ts b/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfielddata.ts
index 1f0b780..cf575f2 100644
--- a/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfielddata.ts
+++ b/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfielddata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface ICustomCalculatedFieldData {
         id?: number;
         name: string;
diff --git a/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfieldextended.ts b/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfieldextended.ts
index cf0498c..e1c717f 100644
--- a/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfieldextended.ts
+++ b/ts/Admin/DataCustomization/Interfaces/icustomcalculatedfieldextended.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface ICustomCalculatedFieldExtended extends
         Brightmetrics.Interfaces.ICustomCalculatedField
     {
diff --git a/ts/Admin/DataCustomization/Interfaces/icustomdetaildimensionextended.ts b/ts/Admin/DataCustomization/Interfaces/icustomdetaildimensionextended.ts
index f0ad483..d3d4d62 100644
--- a/ts/Admin/DataCustomization/Interfaces/icustomdetaildimensionextended.ts
+++ b/ts/Admin/DataCustomization/Interfaces/icustomdetaildimensionextended.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface ICustomDetailDimensionExtended extends
         Brightmetrics.Interfaces.ICustomDetailDimension
     {
diff --git a/ts/Admin/DataCustomization/Interfaces/iexpressionmodel.ts b/ts/Admin/DataCustomization/Interfaces/iexpressionmodel.ts
index bbc23a8..35034eb 100644
--- a/ts/Admin/DataCustomization/Interfaces/iexpressionmodel.ts
+++ b/ts/Admin/DataCustomization/Interfaces/iexpressionmodel.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface IExpressionModel {
         calculation: {
             asCostPerMinute: boolean;
diff --git a/ts/Admin/DataCustomization/Interfaces/igrouprowprops.ts b/ts/Admin/DataCustomization/Interfaces/igrouprowprops.ts
index b14c221..2c2697a 100644
--- a/ts/Admin/DataCustomization/Interfaces/igrouprowprops.ts
+++ b/ts/Admin/DataCustomization/Interfaces/igrouprowprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface IGroupRowProps {
         description: string;
         customItem: Types.CustomItem;
diff --git a/ts/Admin/DataCustomization/Interfaces/ioperand.ts b/ts/Admin/DataCustomization/Interfaces/ioperand.ts
index 6d986f8..0c89482 100644
--- a/ts/Admin/DataCustomization/Interfaces/ioperand.ts
+++ b/ts/Admin/DataCustomization/Interfaces/ioperand.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface IOperand {
         displayName: string;
         factIndex: number;
diff --git a/ts/Admin/DataCustomization/Interfaces/iungroupeddata.ts b/ts/Admin/DataCustomization/Interfaces/iungroupeddata.ts
index cfcd982..3c04dd9 100644
--- a/ts/Admin/DataCustomization/Interfaces/iungroupeddata.ts
+++ b/ts/Admin/DataCustomization/Interfaces/iungroupeddata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Interfaces {
+namespace Brightmetrics.Admin.DataCustomization.Interfaces {
     export interface IUngroupedData {
         outerGroupName: string;
         innerGroupName: string;
diff --git a/ts/Admin/DataCustomization/Types/customitem.ts b/ts/Admin/DataCustomization/Types/customitem.ts
index 9b0ec62..91df144 100644
--- a/ts/Admin/DataCustomization/Types/customitem.ts
+++ b/ts/Admin/DataCustomization/Types/customitem.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.Types {
+namespace Brightmetrics.Admin.DataCustomization.Types {
     export type CustomItem = Brightmetrics.Interfaces.ICustomCalculatedField |
         Brightmetrics.Interfaces.ICustomDetailDimension;
 }
diff --git a/ts/Admin/DataCustomization/ViewModels/allitemsview.ts b/ts/Admin/DataCustomization/ViewModels/allitemsview.ts
index 615bbc9..df63941 100644
--- a/ts/Admin/DataCustomization/ViewModels/allitemsview.ts
+++ b/ts/Admin/DataCustomization/ViewModels/allitemsview.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     interface IGroupedData {
         name: string;
         innerGroups: Array<{
diff --git a/ts/Admin/DataCustomization/ViewModels/ccfcalculationview.ts b/ts/Admin/DataCustomization/ViewModels/ccfcalculationview.ts
index a97db4c..f040c8d 100644
--- a/ts/Admin/DataCustomization/ViewModels/ccfcalculationview.ts
+++ b/ts/Admin/DataCustomization/ViewModels/ccfcalculationview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../MultipleSelect/ViewModels/multipleselectdialog.ts" />
+/// <reference path="../../../MultipleSelect/ViewModels/multipleselectdialog.ts" />
 /// <reference path="../../../enums/datatype.ts" />
 
 namespace Brightmetrics.Admin.DataCustomization.ViewModels {
diff --git a/ts/Admin/DataCustomization/ViewModels/ccfeditorview.ts b/ts/Admin/DataCustomization/ViewModels/ccfeditorview.ts
index 04182a4..a5928e0 100644
--- a/ts/Admin/DataCustomization/ViewModels/ccfeditorview.ts
+++ b/ts/Admin/DataCustomization/ViewModels/ccfeditorview.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     import BIs = Brightmetrics.Interfaces;
 
     type FactLike = BIs.IFact | BIs.ICalculatedField | BIs.ICustomCalculatedField;
diff --git a/ts/Admin/DataCustomization/ViewModels/cddeditorview.ts b/ts/Admin/DataCustomization/ViewModels/cddeditorview.ts
index 6c2bbcf..f38c83a 100644
--- a/ts/Admin/DataCustomization/ViewModels/cddeditorview.ts
+++ b/ts/Admin/DataCustomization/ViewModels/cddeditorview.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     import BIs = Brightmetrics.Interfaces;
 
     function getPrimaryDS(dsList: BIs.IDataSource[], cdd: BIs.ICustomDetailDimension)
diff --git a/ts/Admin/DataCustomization/ViewModels/customitemusagedialog.ts b/ts/Admin/DataCustomization/ViewModels/customitemusagedialog.ts
index 0e8794e..a612cb1 100644
--- a/ts/Admin/DataCustomization/ViewModels/customitemusagedialog.ts
+++ b/ts/Admin/DataCustomization/ViewModels/customitemusagedialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     interface IEntity {
         userEmail: string;
         userFirstName: string;
diff --git a/ts/Admin/DataCustomization/ViewModels/grouprow.ts b/ts/Admin/DataCustomization/ViewModels/grouprow.ts
index e104df8..331d9b9 100644
--- a/ts/Admin/DataCustomization/ViewModels/grouprow.ts
+++ b/ts/Admin/DataCustomization/ViewModels/grouprow.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     export class GroupRow extends Brightmetrics.ViewModel {
         public name: string;
         public description: string;
diff --git a/ts/Admin/DataCustomization/ViewModels/innergroup.ts b/ts/Admin/DataCustomization/ViewModels/innergroup.ts
index 6dc03bc..efc04cd 100644
--- a/ts/Admin/DataCustomization/ViewModels/innergroup.ts
+++ b/ts/Admin/DataCustomization/ViewModels/innergroup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     interface IInnerGroupProps {
         name: string;
         rows: Interfaces.IGroupRowProps[];
diff --git a/ts/Admin/DataCustomization/ViewModels/outergroup.ts b/ts/Admin/DataCustomization/ViewModels/outergroup.ts
index fe8665a..dfcdf44 100644
--- a/ts/Admin/DataCustomization/ViewModels/outergroup.ts
+++ b/ts/Admin/DataCustomization/ViewModels/outergroup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     interface IOuterGroupProps {
         name: string;
         innerGroups: Array<{
diff --git a/ts/Admin/DataCustomization/ViewModels/pageview.ts b/ts/Admin/DataCustomization/ViewModels/pageview.ts
index 7086cdd..f4860af 100644
--- a/ts/Admin/DataCustomization/ViewModels/pageview.ts
+++ b/ts/Admin/DataCustomization/ViewModels/pageview.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.DataCustomization.ViewModels {
+namespace Brightmetrics.Admin.DataCustomization.ViewModels {
     import BIs = Brightmetrics.Interfaces;
 
     function getDSGFromDSI(dsiId: number): BIs.IDataSourceGroup | undefined {
diff --git a/ts/Admin/Enterprise/ViewModels/auditlogreport.ts b/ts/Admin/Enterprise/ViewModels/auditlogreport.ts
index 7bf202c..428164e 100644
--- a/ts/Admin/Enterprise/ViewModels/auditlogreport.ts
+++ b/ts/Admin/Enterprise/ViewModels/auditlogreport.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../enums/datatype.ts" />
+/// <reference path="../../../enums/datatype.ts" />
 namespace Brightmetrics.Admin.Enterprise.ViewModels {
     import BRIs = Brightmetrics.Reports.Interfaces;
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Admin/Interfaces/ilinkssettings.ts b/ts/Admin/Interfaces/ilinkssettings.ts
index e22668d..b5e38f1 100644
--- a/ts/Admin/Interfaces/ilinkssettings.ts
+++ b/ts/Admin/Interfaces/ilinkssettings.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.Interfaces{
+namespace Brightmetrics.Admin.Interfaces{
     export interface ILinkSettings{
         name: string;
         tabId: string;
diff --git a/ts/Admin/Interfaces/iolduserpermission.ts b/ts/Admin/Interfaces/iolduserpermission.ts
index d3e3e35..8b300c6 100644
--- a/ts/Admin/Interfaces/iolduserpermission.ts
+++ b/ts/Admin/Interfaces/iolduserpermission.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.Interfaces {
+namespace Brightmetrics.Admin.Interfaces {
     export interface IOldUserPermission {
         emailAddress: KnockoutObservable<string>;
         name: KnockoutComputed<string>;
diff --git a/ts/Admin/Interfaces/ireport.ts b/ts/Admin/Interfaces/ireport.ts
index fe84bc6..89b7657 100644
--- a/ts/Admin/Interfaces/ireport.ts
+++ b/ts/Admin/Interfaces/ireport.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.Interfaces {
+namespace Brightmetrics.Admin.Interfaces {
     export interface IReport {
         accessLevel: number;
         schedules: Brightmetrics.Interfaces.IReportSchedule[];
diff --git a/ts/Admin/ViewModels/dashboardmanagementlinksdialog.ts b/ts/Admin/ViewModels/dashboardmanagementlinksdialog.ts
index 6536bc6..083045c 100644
--- a/ts/Admin/ViewModels/dashboardmanagementlinksdialog.ts
+++ b/ts/Admin/ViewModels/dashboardmanagementlinksdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../utils.ts" />
+/// <reference path="../../utils.ts" />
 /// <reference path="../../viewmodels/dialog.ts" />
 
 namespace Brightmetrics.Admin.ViewModels {
diff --git a/ts/Admin/ViewModels/dashboardtickersetting.ts b/ts/Admin/ViewModels/dashboardtickersetting.ts
index 144bb2f..8f39bbd 100644
--- a/ts/Admin/ViewModels/dashboardtickersetting.ts
+++ b/ts/Admin/ViewModels/dashboardtickersetting.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../utils.ts" />
+/// <reference path="../../utils.ts" />
 /// <reference path="../../viewmodels/dialog.ts" />
 
 namespace Brightmetrics.Admin.ViewModels {
diff --git a/ts/Admin/ViewModels/linksettings.ts b/ts/Admin/ViewModels/linksettings.ts
index b5914cd..a44284c 100644
--- a/ts/Admin/ViewModels/linksettings.ts
+++ b/ts/Admin/ViewModels/linksettings.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../utils.ts" />
+/// <reference path="../../utils.ts" />
 /// <reference path="../interfaces/ilinkssettings.ts" />
 /// <reference path="../../interfaces/ikooption.ts" />
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/Admin/ViewModels/openidssoprovider.ts b/ts/Admin/ViewModels/openidssoprovider.ts
index c877c3a..1468a7a 100644
--- a/ts/Admin/ViewModels/openidssoprovider.ts
+++ b/ts/Admin/ViewModels/openidssoprovider.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="ssoprovider.ts" />
+/// <reference path="ssoprovider.ts" />
 
 namespace Brightmetrics.Admin.ViewModels{
     declare const defCompanyId: number;
diff --git a/ts/Admin/ViewModels/reportmanagement.ts b/ts/Admin/ViewModels/reportmanagement.ts
index bc188fd..f212fff 100644
--- a/ts/Admin/ViewModels/reportmanagement.ts
+++ b/ts/Admin/ViewModels/reportmanagement.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.ViewModels {
+namespace Brightmetrics.Admin.ViewModels {
     import BEs = Brightmetrics.Enums;
     import BIs = Brightmetrics.Interfaces;
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Admin/ViewModels/samlssoprovider.ts b/ts/Admin/ViewModels/samlssoprovider.ts
index 99b9408..7cbb18f 100644
--- a/ts/Admin/ViewModels/samlssoprovider.ts
+++ b/ts/Admin/ViewModels/samlssoprovider.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="ssoprovider.ts" />
+/// <reference path="ssoprovider.ts" />
 
 namespace Brightmetrics.Admin.ViewModels{
 
diff --git a/ts/Admin/ViewModels/schedulesmanagement.ts b/ts/Admin/ViewModels/schedulesmanagement.ts
index 43c1f95..346283b 100644
--- a/ts/Admin/ViewModels/schedulesmanagement.ts
+++ b/ts/Admin/ViewModels/schedulesmanagement.ts
@@ -1,4 +1,4 @@
-﻿﻿namespace Brightmetrics.Admin.ViewModels {
+namespace Brightmetrics.Admin.ViewModels {
     import BEs = Brightmetrics.Enums;
     import BIs = Brightmetrics.Interfaces;
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Admin/ViewModels/ssopageview.ts b/ts/Admin/ViewModels/ssopageview.ts
index 83ef616..a80d4f7 100644
--- a/ts/Admin/ViewModels/ssopageview.ts
+++ b/ts/Admin/ViewModels/ssopageview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/dialog.ts" />
+/// <reference path="../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Admin.ViewModels{
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Admin/ViewModels/ssoprovider.ts b/ts/Admin/ViewModels/ssoprovider.ts
index 450b227..b038295 100644
--- a/ts/Admin/ViewModels/ssoprovider.ts
+++ b/ts/Admin/ViewModels/ssoprovider.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.ViewModels{
+namespace Brightmetrics.Admin.ViewModels{
     declare const defCompanyId: number;
 
     interface IDomainSSO{
diff --git a/ts/Admin/VoiceAnalytics/Enums/view.ts b/ts/Admin/VoiceAnalytics/Enums/view.ts
index b678da7..ee2acff 100644
--- a/ts/Admin/VoiceAnalytics/Enums/view.ts
+++ b/ts/Admin/VoiceAnalytics/Enums/view.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.VoiceAnalytics.Enums {
+namespace Brightmetrics.Admin.VoiceAnalytics.Enums {
     export enum View {
         ManageProfiles = "ManageProfiles",
         ManageTagCategories = "ManageTagCategories",
diff --git a/ts/Admin/VoiceAnalytics/ViewModels/addrulesetdialog.ts b/ts/Admin/VoiceAnalytics/ViewModels/addrulesetdialog.ts
index 26d898a..a987233 100644
--- a/ts/Admin/VoiceAnalytics/ViewModels/addrulesetdialog.ts
+++ b/ts/Admin/VoiceAnalytics/ViewModels/addrulesetdialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.VoiceAnalytics.ViewModels {
+namespace Brightmetrics.Admin.VoiceAnalytics.ViewModels {
     import VAIs = Brightmetrics.VoiceAnalytics.Interfaces;
 
     interface IAddRuleSetDialogProps {
diff --git a/ts/Admin/VoiceAnalytics/ViewModels/pageview.ts b/ts/Admin/VoiceAnalytics/ViewModels/pageview.ts
index 17d4745..7708661 100644
--- a/ts/Admin/VoiceAnalytics/ViewModels/pageview.ts
+++ b/ts/Admin/VoiceAnalytics/ViewModels/pageview.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.VoiceAnalytics.ViewModels {
+namespace Brightmetrics.Admin.VoiceAnalytics.ViewModels {
     import VAIs = Brightmetrics.VoiceAnalytics.Interfaces;
 
     type GETProfilesResponse = {
diff --git a/ts/Admin/VoiceAnalytics/ViewModels/ruleset.ts b/ts/Admin/VoiceAnalytics/ViewModels/ruleset.ts
index b5c2423..45de789 100644
--- a/ts/Admin/VoiceAnalytics/ViewModels/ruleset.ts
+++ b/ts/Admin/VoiceAnalytics/ViewModels/ruleset.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../VoiceAnalytics/Enums/spokenby.ts" />
+/// <reference path="../../../VoiceAnalytics/Enums/spokenby.ts" />
 /// <reference path="../../../VoiceAnalytics/Enums/timing.ts" />
 
 namespace Brightmetrics.Admin.VoiceAnalytics.ViewModels {
diff --git a/ts/Admin/VoiceAnalytics/ViewModels/rulesets.ts b/ts/Admin/VoiceAnalytics/ViewModels/rulesets.ts
index dfae400..20f9868 100644
--- a/ts/Admin/VoiceAnalytics/ViewModels/rulesets.ts
+++ b/ts/Admin/VoiceAnalytics/ViewModels/rulesets.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Admin.VoiceAnalytics.ViewModels {
+namespace Brightmetrics.Admin.VoiceAnalytics.ViewModels {
     import MSVs = Brightmetrics.MultipleSelect.ViewModels;
     import VAIs = Brightmetrics.VoiceAnalytics.Interfaces;
     import Constants = Brightmetrics.Admin.VoiceAnalytics.Constants;
diff --git a/ts/AssignRoles/ViewModels/page.ts b/ts/AssignRoles/ViewModels/page.ts
index 63b3210..dd361d0 100644
--- a/ts/AssignRoles/ViewModels/page.ts
+++ b/ts/AssignRoles/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.AssignRoles.ViewModels {
     import IBrightRole = Brightmetrics.Interfaces.IBrightRole;
diff --git a/ts/AudioAlerts/Classes/alerter.ts b/ts/AudioAlerts/Classes/alerter.ts
index fef4e09..096c2ac 100644
--- a/ts/AudioAlerts/Classes/alerter.ts
+++ b/ts/AudioAlerts/Classes/alerter.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.AudioAlerts.Classes {
+namespace Brightmetrics.AudioAlerts.Classes {
     export class Alerter {
         private _queuedAlerts: Interfaces.IAlertObject[];
         /**
diff --git a/ts/AudioAlerts/Interfaces/ialertobject.ts b/ts/AudioAlerts/Interfaces/ialertobject.ts
index 8318ddb..5c76b7e 100644
--- a/ts/AudioAlerts/Interfaces/ialertobject.ts
+++ b/ts/AudioAlerts/Interfaces/ialertobject.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.AudioAlerts.Interfaces {
+namespace Brightmetrics.AudioAlerts.Interfaces {
     export interface IAlertObject {
         /** Alert ID */
         alertId: string;
diff --git a/ts/BindingHandlers/audioplayer.ts b/ts/BindingHandlers/audioplayer.ts
index 8f21e4c..00b5bb6 100644
--- a/ts/BindingHandlers/audioplayer.ts
+++ b/ts/BindingHandlers/audioplayer.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     const bindingHandler = {
         init(
             element: HTMLMediaElement,
diff --git a/ts/BindingHandlers/carousel.ts b/ts/BindingHandlers/carousel.ts
index bf9aa59..aabb795 100644
--- a/ts/BindingHandlers/carousel.ts
+++ b/ts/BindingHandlers/carousel.ts
@@ -1,4 +1,4 @@
-﻿ko.bindingHandlers.carousel = {
+ko.bindingHandlers.carousel = {
     init(element: HTMLElement) {
         $(element).css("width", 5000);
     },
diff --git a/ts/BindingHandlers/checkboxselect.ts b/ts/BindingHandlers/checkboxselect.ts
index 8abfeb6..26a2cc9 100644
--- a/ts/BindingHandlers/checkboxselect.ts
+++ b/ts/BindingHandlers/checkboxselect.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../utils.ts" />
+/// <reference path="../utils.ts" />
 
 namespace Brightmetrics {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/BindingHandlers/clusterize.ts b/ts/BindingHandlers/clusterize.ts
index 0329b6f..76d08d4 100644
--- a/ts/BindingHandlers/clusterize.ts
+++ b/ts/BindingHandlers/clusterize.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     const instanceElemDataKey = "clusterizeInstanceKey";
     const clusterizeInstances: JQuery.PlainObject<IClusterize> = {};
 
diff --git a/ts/BindingHandlers/datepicker.ts b/ts/BindingHandlers/datepicker.ts
index 7c9bd96..175ac06 100644
--- a/ts/BindingHandlers/datepicker.ts
+++ b/ts/BindingHandlers/datepicker.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodels/datepicker.ts" />
+/// <reference path="../viewmodels/datepicker.ts" />
 /// <reference path="../interfaces/idatepickeroptions.ts" />
 
 namespace Brightmetrics.ViewModels {
diff --git a/ts/BindingHandlers/fixedheader.ts b/ts/BindingHandlers/fixedheader.ts
index 4bca949..cd1992e 100644
--- a/ts/BindingHandlers/fixedheader.ts
+++ b/ts/BindingHandlers/fixedheader.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     function isIE() {
         // If Internet Explorer
         return navigator.userAgent.indexOf("MSIE ") > 0 ||
diff --git a/ts/BindingHandlers/innerhtml.ts b/ts/BindingHandlers/innerhtml.ts
index 70b3aa9..03c02f9 100644
--- a/ts/BindingHandlers/innerhtml.ts
+++ b/ts/BindingHandlers/innerhtml.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     /**
      * A no-frills html binding.
      *
diff --git a/ts/BindingHandlers/option.ts b/ts/BindingHandlers/option.ts
index 3fdbb0e..00fa14d 100644
--- a/ts/BindingHandlers/option.ts
+++ b/ts/BindingHandlers/option.ts
@@ -1,4 +1,4 @@
-﻿ko.bindingHandlers.option = {
+ko.bindingHandlers.option = {
     update(
         element: HTMLElement,
         valueAccessor: () => KnockoutObservable<string>) {
diff --git a/ts/BindingHandlers/options2.ts b/ts/BindingHandlers/options2.ts
index 1634286..852774a 100644
--- a/ts/BindingHandlers/options2.ts
+++ b/ts/BindingHandlers/options2.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     interface IOptionDataExtended extends Select2.OptionData {
         depth?: number;
         css?: { [className: string]: boolean };
diff --git a/ts/BindingHandlers/progressbar.ts b/ts/BindingHandlers/progressbar.ts
index d80ec06..0dc1571 100644
--- a/ts/BindingHandlers/progressbar.ts
+++ b/ts/BindingHandlers/progressbar.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     const MAX_DURATION = 5 * 60 * 1000;
     const PERCENTAGE_DURATION = 30 * 1000;
     const DEFAULT_RESET_FN = () => void(0);
diff --git a/ts/BindingHandlers/readonly.ts b/ts/BindingHandlers/readonly.ts
index 59923ef..88ef029 100644
--- a/ts/BindingHandlers/readonly.ts
+++ b/ts/BindingHandlers/readonly.ts
@@ -1,4 +1,4 @@
-﻿const eventNamespace = ".ko_readonly";
+const eventNamespace = ".ko_readonly";
 const disabledClass = "is-disabled";
 
 function gobbleEvent(event: JQuery.Event<HTMLElement, null>) {
diff --git a/ts/BindingHandlers/slider.ts b/ts/BindingHandlers/slider.ts
index 84558c2..fc66afb 100644
--- a/ts/BindingHandlers/slider.ts
+++ b/ts/BindingHandlers/slider.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     enum SliderChildCSSSelector {
         LeadingRail = ".c-audio-player__track-leading",
         TrailingRail = ".c-audio-player__track-trailing",
diff --git a/ts/BindingHandlers/steppedslider.ts b/ts/BindingHandlers/steppedslider.ts
index 487e042..e316b6c 100644
--- a/ts/BindingHandlers/steppedslider.ts
+++ b/ts/BindingHandlers/steppedslider.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     enum SteppedSliderChildCSSSelector {
         LeadingRail = ".c-stepped-slider__leading",
         TrailingRail = ".c-stepped-slider__trailing",
diff --git a/ts/BindingHandlers/stopbinding.ts b/ts/BindingHandlers/stopbinding.ts
index 1b8c81e..825cdd4 100644
--- a/ts/BindingHandlers/stopbinding.ts
+++ b/ts/BindingHandlers/stopbinding.ts
@@ -1,4 +1,4 @@
-﻿/**
+/**
  * Prevents current element and all child elements thereof from being bound to
  * by the current binding context.
  */
diff --git a/ts/BindingHandlers/time.ts b/ts/BindingHandlers/time.ts
index 0fb74fb..cd7e596 100644
--- a/ts/BindingHandlers/time.ts
+++ b/ts/BindingHandlers/time.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
 
     interface ITimeBindingProps {
         formatted: KnockoutObservable<string>;
diff --git a/ts/BindingHandlers/tooltip.ts b/ts/BindingHandlers/tooltip.ts
index cd719eb..dd9d5e0 100644
--- a/ts/BindingHandlers/tooltip.ts
+++ b/ts/BindingHandlers/tooltip.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../interfaces/irect.ts" />
+/// <reference path="../interfaces/irect.ts" />
 /// <reference path="../viewmodels/tooltip.ts" />
 
 namespace Brightmetrics {
diff --git a/ts/C2G/Enums/callrecordingauthtype.ts b/ts/C2G/Enums/callrecordingauthtype.ts
index 86e0209..e27d08f 100644
--- a/ts/C2G/Enums/callrecordingauthtype.ts
+++ b/ts/C2G/Enums/callrecordingauthtype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Enums {
+namespace Brightmetrics.C2G.Enums {
     export enum CallRecordingAuthType {
         None = "",
         Credentials = "credentials",
diff --git a/ts/C2G/Interfaces/ic2gchartcategoriesprops.ts b/ts/C2G/Interfaces/ic2gchartcategoriesprops.ts
index 8bf9554..161994c 100644
--- a/ts/C2G/Interfaces/ic2gchartcategoriesprops.ts
+++ b/ts/C2G/Interfaces/ic2gchartcategoriesprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GChartCategoriesProps {
         categories: IC2GChartCategoryProps[];
     }
diff --git a/ts/C2G/Interfaces/ic2gchartcategoryprops.ts b/ts/C2G/Interfaces/ic2gchartcategoryprops.ts
index d078596..f86c075 100644
--- a/ts/C2G/Interfaces/ic2gchartcategoryprops.ts
+++ b/ts/C2G/Interfaces/ic2gchartcategoryprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GChartCategoryProps {
         isActiveCategory: KnockoutComputed<boolean>;
         label: string;
diff --git a/ts/C2G/Interfaces/ic2gchartprops.ts b/ts/C2G/Interfaces/ic2gchartprops.ts
index 4681f9b..0d63f4f 100644
--- a/ts/C2G/Interfaces/ic2gchartprops.ts
+++ b/ts/C2G/Interfaces/ic2gchartprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GChartProps extends IXAxisProps {
         rows: IC2GChartRowProps[];
     }
diff --git a/ts/C2G/Interfaces/ic2gchartrowprops.ts b/ts/C2G/Interfaces/ic2gchartrowprops.ts
index f80eabd..acd5bb5 100644
--- a/ts/C2G/Interfaces/ic2gchartrowprops.ts
+++ b/ts/C2G/Interfaces/ic2gchartrowprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GChartRowProps {
         timeBlocks: IC2GChartTimeBlockProps[];
     }
diff --git a/ts/C2G/Interfaces/ic2gcharttimeblockprops.ts b/ts/C2G/Interfaces/ic2gcharttimeblockprops.ts
index c0edb74..49ffab3 100644
--- a/ts/C2G/Interfaces/ic2gcharttimeblockprops.ts
+++ b/ts/C2G/Interfaces/ic2gcharttimeblockprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GChartTimeBlockProps extends ViewModels.C2GChartTimeBlockBase.Props {
         start: Date;
         end: Date;
diff --git a/ts/C2G/Interfaces/ic2gcommandwarning.ts b/ts/C2G/Interfaces/ic2gcommandwarning.ts
index 3d227dd..218f896 100644
--- a/ts/C2G/Interfaces/ic2gcommandwarning.ts
+++ b/ts/C2G/Interfaces/ic2gcommandwarning.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GCommandWarning {
         iconUrl: string;
         message: string;
diff --git a/ts/C2G/Interfaces/ic2gheaderactionprops.ts b/ts/C2G/Interfaces/ic2gheaderactionprops.ts
index a85ed98..99271ef 100644
--- a/ts/C2G/Interfaces/ic2gheaderactionprops.ts
+++ b/ts/C2G/Interfaces/ic2gheaderactionprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GHeaderActionProps {
         doAction: () => void;
         isLoading: KnockoutComputed<boolean>;
diff --git a/ts/C2G/Interfaces/ic2gheaderlabelprops.ts b/ts/C2G/Interfaces/ic2gheaderlabelprops.ts
index dc24547..d0c40c6 100644
--- a/ts/C2G/Interfaces/ic2gheaderlabelprops.ts
+++ b/ts/C2G/Interfaces/ic2gheaderlabelprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GHeaderLabelProps {
         label: string;
     }
diff --git a/ts/C2G/Interfaces/ic2gheaderprops.ts b/ts/C2G/Interfaces/ic2gheaderprops.ts
index 45e855b..997068e 100644
--- a/ts/C2G/Interfaces/ic2gheaderprops.ts
+++ b/ts/C2G/Interfaces/ic2gheaderprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GHeaderProps extends
         IC2GHeaderLabelProps,
         IC2GHeaderActionProps,
diff --git a/ts/C2G/Interfaces/ic2gheaderwarningprops.ts b/ts/C2G/Interfaces/ic2gheaderwarningprops.ts
index ba588e4..8181736 100644
--- a/ts/C2G/Interfaces/ic2gheaderwarningprops.ts
+++ b/ts/C2G/Interfaces/ic2gheaderwarningprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GHeaderWarningProps {
         warnings?: IC2GCommandWarning[];
     }
diff --git a/ts/C2G/Interfaces/ic2gprops.ts b/ts/C2G/Interfaces/ic2gprops.ts
index f1aa30b..82416c6 100644
--- a/ts/C2G/Interfaces/ic2gprops.ts
+++ b/ts/C2G/Interfaces/ic2gprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GProps {
         handleClose: (c2g: ViewModels.C2G) => void;
         categories: ICategoryData[];
diff --git a/ts/C2G/Interfaces/ic2grecordingcredentialsprops.ts b/ts/C2G/Interfaces/ic2grecordingcredentialsprops.ts
index 293d48c..3a61ede 100644
--- a/ts/C2G/Interfaces/ic2grecordingcredentialsprops.ts
+++ b/ts/C2G/Interfaces/ic2grecordingcredentialsprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IRecordingCredentials {
         storageKey: string;
         recordingSupport: IRecordingSupport;
diff --git a/ts/C2G/Interfaces/ic2gtabcontentdetailsprops.ts b/ts/C2G/Interfaces/ic2gtabcontentdetailsprops.ts
index 92e7584..ec7fda0 100644
--- a/ts/C2G/Interfaces/ic2gtabcontentdetailsprops.ts
+++ b/ts/C2G/Interfaces/ic2gtabcontentdetailsprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GTabContentDetailsProps {
         data: JQuery.PlainObject;
         color: string;
diff --git a/ts/C2G/Interfaces/ic2gtabcontentprops.ts b/ts/C2G/Interfaces/ic2gtabcontentprops.ts
index 7077dce..33ebefe 100644
--- a/ts/C2G/Interfaces/ic2gtabcontentprops.ts
+++ b/ts/C2G/Interfaces/ic2gtabcontentprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GTabContentProps {
         tabIndex: KnockoutComputed<number>;
         detailsContent: KnockoutComputed<ViewModels.C2GTabContentViewDetails | null>;
diff --git a/ts/C2G/Interfaces/ic2gtabcontentrecordingsprops.ts b/ts/C2G/Interfaces/ic2gtabcontentrecordingsprops.ts
index 5d73107..a4301dd 100644
--- a/ts/C2G/Interfaces/ic2gtabcontentrecordingsprops.ts
+++ b/ts/C2G/Interfaces/ic2gtabcontentrecordingsprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IContentRecordingProps {
         id: number;
         recordItem: string;
diff --git a/ts/C2G/Interfaces/ic2gtabcontentteamactivityprops.ts b/ts/C2G/Interfaces/ic2gtabcontentteamactivityprops.ts
index d904f97..d8bfe8b 100644
--- a/ts/C2G/Interfaces/ic2gtabcontentteamactivityprops.ts
+++ b/ts/C2G/Interfaces/ic2gtabcontentteamactivityprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GTabContentViewTeamActivityProps extends
         ITACategoriesProps,
         ITALegendProps,
diff --git a/ts/C2G/Interfaces/ic2gtabprops.ts b/ts/C2G/Interfaces/ic2gtabprops.ts
index 87464a9..f92aa93 100644
--- a/ts/C2G/Interfaces/ic2gtabprops.ts
+++ b/ts/C2G/Interfaces/ic2gtabprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GTabProps {
         tabIndex: number;
         name: string;
diff --git a/ts/C2G/Interfaces/ic2gtabsprops.ts b/ts/C2G/Interfaces/ic2gtabsprops.ts
index 89de2c3..7bdb66e 100644
--- a/ts/C2G/Interfaces/ic2gtabsprops.ts
+++ b/ts/C2G/Interfaces/ic2gtabsprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IC2GTabsProps {
         tabs: IC2GTabProps[];
     }
diff --git a/ts/C2G/Interfaces/icategorydata.ts b/ts/C2G/Interfaces/icategorydata.ts
index 974f0c7..c69336f 100644
--- a/ts/C2G/Interfaces/icategorydata.ts
+++ b/ts/C2G/Interfaces/icategorydata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ICategoryData {
         category: string;
         timeBlocks: ITimeBlockData[];
diff --git a/ts/C2G/Interfaces/irecordingcontent.ts b/ts/C2G/Interfaces/irecordingcontent.ts
index 0ee3802..b75ca60 100644
--- a/ts/C2G/Interfaces/irecordingcontent.ts
+++ b/ts/C2G/Interfaces/irecordingcontent.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IRecordingContent {
         error: string | null;
         errorMessage: string | null;
diff --git a/ts/C2G/Interfaces/irecordingsupport.ts b/ts/C2G/Interfaces/irecordingsupport.ts
index 07774d3..61bdf5f 100644
--- a/ts/C2G/Interfaces/irecordingsupport.ts
+++ b/ts/C2G/Interfaces/irecordingsupport.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IRecordingSupport {
         authData: IRecordingSupporAuthData;
         authType: Enums.CallRecordingAuthType;
diff --git a/ts/C2G/Interfaces/irecordingsupportauthdata.ts b/ts/C2G/Interfaces/irecordingsupportauthdata.ts
index b33632a..a08b447 100644
--- a/ts/C2G/Interfaces/irecordingsupportauthdata.ts
+++ b/ts/C2G/Interfaces/irecordingsupportauthdata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IRecordingSupporAuthData {
         authType: Enums.CallRecordingAuthType;
         password: string;
diff --git a/ts/C2G/Interfaces/itacategoriesprops.ts b/ts/C2G/Interfaces/itacategoriesprops.ts
index 5d926de..8f53545 100644
--- a/ts/C2G/Interfaces/itacategoriesprops.ts
+++ b/ts/C2G/Interfaces/itacategoriesprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITACategoriesProps {
         categories: ITACategoryProps[];
     }
diff --git a/ts/C2G/Interfaces/itacategoryprops.ts b/ts/C2G/Interfaces/itacategoryprops.ts
index acf0f79..ee541ec 100644
--- a/ts/C2G/Interfaces/itacategoryprops.ts
+++ b/ts/C2G/Interfaces/itacategoryprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITACategoryProps {
         label: string;
         isTimeBlockCategory: KnockoutComputed<boolean>;
diff --git a/ts/C2G/Interfaces/itachartprops.ts b/ts/C2G/Interfaces/itachartprops.ts
index db3056a..ebf4960 100644
--- a/ts/C2G/Interfaces/itachartprops.ts
+++ b/ts/C2G/Interfaces/itachartprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITAChartProps {
         rows: ITAChartRowProps[];
         xAxis: IXAxisProps;
diff --git a/ts/C2G/Interfaces/itachartrowprops.ts b/ts/C2G/Interfaces/itachartrowprops.ts
index 0cb9d4f..c06431f 100644
--- a/ts/C2G/Interfaces/itachartrowprops.ts
+++ b/ts/C2G/Interfaces/itachartrowprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITAChartRowProps {
         timeBlocks: ITAChartTimeBlockProps[];
     }
diff --git a/ts/C2G/Interfaces/itacharttimeblockprops.ts b/ts/C2G/Interfaces/itacharttimeblockprops.ts
index 05ba5ee..9c5c3f2 100644
--- a/ts/C2G/Interfaces/itacharttimeblockprops.ts
+++ b/ts/C2G/Interfaces/itacharttimeblockprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITAChartTimeBlockProps {
         start: Date;
         end: Date;
diff --git a/ts/C2G/Interfaces/italegenditemprops.ts b/ts/C2G/Interfaces/italegenditemprops.ts
index f85a455..10a17ef 100644
--- a/ts/C2G/Interfaces/italegenditemprops.ts
+++ b/ts/C2G/Interfaces/italegenditemprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITALegendItemProps {
         groupLabel: string;
         groupType: number;
diff --git a/ts/C2G/Interfaces/italegendprops.ts b/ts/C2G/Interfaces/italegendprops.ts
index bb1e1e2..4f377c9 100644
--- a/ts/C2G/Interfaces/italegendprops.ts
+++ b/ts/C2G/Interfaces/italegendprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITALegendProps {
         legendItems: Interfaces.ITALegendItemProps[];
     }
diff --git a/ts/C2G/Interfaces/itimeblockdata.ts b/ts/C2G/Interfaces/itimeblockdata.ts
index 799cd0c..ac6f6b7 100644
--- a/ts/C2G/Interfaces/itimeblockdata.ts
+++ b/ts/C2G/Interfaces/itimeblockdata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface ITimeBlockData {
         id: string;
         start: Date;
diff --git a/ts/C2G/Interfaces/ixaxisprops.ts b/ts/C2G/Interfaces/ixaxisprops.ts
index 2d6b5e0..96ccd41 100644
--- a/ts/C2G/Interfaces/ixaxisprops.ts
+++ b/ts/C2G/Interfaces/ixaxisprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.Interfaces {
+namespace Brightmetrics.C2G.Interfaces {
     export interface IXAxisProps {
         start: Date;
         end: Date;
diff --git a/ts/C2G/ViewModels/c2g.ts b/ts/C2G/ViewModels/c2g.ts
index d5dffb3..5252297 100644
--- a/ts/C2G/ViewModels/c2g.ts
+++ b/ts/C2G/ViewModels/c2g.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../constants.ts" />
 
 namespace Brightmetrics.C2G.ViewModels {
diff --git a/ts/C2G/ViewModels/c2gchart.ts b/ts/C2G/ViewModels/c2gchart.ts
index 24b96ea..92ef488 100644
--- a/ts/C2G/ViewModels/c2gchart.ts
+++ b/ts/C2G/ViewModels/c2gchart.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GChart extends ViewModel {
         // In charge of putting up the tick lines -- logic should be congruent
         // with the logic from XAxis class.
diff --git a/ts/C2G/ViewModels/c2gchartcategories.ts b/ts/C2G/ViewModels/c2gchartcategories.ts
index f5cef53..05cbc5a 100644
--- a/ts/C2G/ViewModels/c2gchartcategories.ts
+++ b/ts/C2G/ViewModels/c2gchartcategories.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GChartCategories extends ViewModel {
         public categories: C2GChartCategory[];
 
diff --git a/ts/C2G/ViewModels/c2gchartcategory.ts b/ts/C2G/ViewModels/c2gchartcategory.ts
index db52f50..b7edbb9 100644
--- a/ts/C2G/ViewModels/c2gchartcategory.ts
+++ b/ts/C2G/ViewModels/c2gchartcategory.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GChartCategory extends ViewModel {
         public isActiveCategory: KnockoutComputed<boolean>;
         public label: string;
diff --git a/ts/C2G/ViewModels/c2gchartrow.ts b/ts/C2G/ViewModels/c2gchartrow.ts
index ca7d69f..20e17c2 100644
--- a/ts/C2G/ViewModels/c2gchartrow.ts
+++ b/ts/C2G/ViewModels/c2gchartrow.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GChartRow extends ViewModel {
         public timeBlocks: C2GChartTimeBlock[];
 
diff --git a/ts/C2G/ViewModels/c2gcharttimeblock.ts b/ts/C2G/ViewModels/c2gcharttimeblock.ts
index e80c6b3..24d7e83 100644
--- a/ts/C2G/ViewModels/c2gcharttimeblock.ts
+++ b/ts/C2G/ViewModels/c2gcharttimeblock.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="c2gcharttimeblockbase.ts" />
+/// <reference path="c2gcharttimeblockbase.ts" />
 namespace Brightmetrics.C2G.ViewModels {
     export class C2GChartTimeBlock extends C2GChartTimeBlockBase {
         public isActive: KnockoutComputed<boolean>;
diff --git a/ts/C2G/ViewModels/c2gheader.ts b/ts/C2G/ViewModels/c2gheader.ts
index de0b659..25cc0b6 100644
--- a/ts/C2G/ViewModels/c2gheader.ts
+++ b/ts/C2G/ViewModels/c2gheader.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GHeader extends ViewModel {
         public label: C2GHeaderLabel;
         public action: C2GHeaderAction;
diff --git a/ts/C2G/ViewModels/c2gheaderaction.ts b/ts/C2G/ViewModels/c2gheaderaction.ts
index a9aed17..34c4f54 100644
--- a/ts/C2G/ViewModels/c2gheaderaction.ts
+++ b/ts/C2G/ViewModels/c2gheaderaction.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GHeaderAction extends ViewModel {
         public isLoading: KnockoutComputed<boolean>;
 
diff --git a/ts/C2G/ViewModels/c2gheaderlabel.ts b/ts/C2G/ViewModels/c2gheaderlabel.ts
index 700f3b6..0b2a7e1 100644
--- a/ts/C2G/ViewModels/c2gheaderlabel.ts
+++ b/ts/C2G/ViewModels/c2gheaderlabel.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GHeaderLabel extends ViewModel {
         public label: string;
 
diff --git a/ts/C2G/ViewModels/c2gheaderwarnings.ts b/ts/C2G/ViewModels/c2gheaderwarnings.ts
index d24f4f3..7b39b85 100644
--- a/ts/C2G/ViewModels/c2gheaderwarnings.ts
+++ b/ts/C2G/ViewModels/c2gheaderwarnings.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GHeaderWarnings extends ViewModel {
         public hasWarnings: KnockoutComputed<boolean>;
         public warnings?: Interfaces.IC2GCommandWarning[];
diff --git a/ts/C2G/ViewModels/c2gtab.ts b/ts/C2G/ViewModels/c2gtab.ts
index 39af982..8a7a278 100644
--- a/ts/C2G/ViewModels/c2gtab.ts
+++ b/ts/C2G/ViewModels/c2gtab.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GTab extends ViewModel {
         public tabIndex: number;
         public name: string;
diff --git a/ts/C2G/ViewModels/c2gtabcontent.ts b/ts/C2G/ViewModels/c2gtabcontent.ts
index 3c26273..a6cf93d 100644
--- a/ts/C2G/ViewModels/c2gtabcontent.ts
+++ b/ts/C2G/ViewModels/c2gtabcontent.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     enum ERecordingSystemStatus {
         authenticationRequired = "authentication-required",
         loadingContent = "loading-content",
diff --git a/ts/C2G/ViewModels/c2gtabcontentdetails.ts b/ts/C2G/ViewModels/c2gtabcontentdetails.ts
index 10e3706..a5b5634 100644
--- a/ts/C2G/ViewModels/c2gtabcontentdetails.ts
+++ b/ts/C2G/ViewModels/c2gtabcontentdetails.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     interface IRowHelper {
         click?: () => void;
         html: string;
diff --git a/ts/C2G/ViewModels/c2gtabcontentrecordings.ts b/ts/C2G/ViewModels/c2gtabcontentrecordings.ts
index bf1e56e..05b09f2 100644
--- a/ts/C2G/ViewModels/c2gtabcontentrecordings.ts
+++ b/ts/C2G/ViewModels/c2gtabcontentrecordings.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../MediaPlayer/ViewModels/audioplayer.ts" />
+/// <reference path="../../MediaPlayer/ViewModels/audioplayer.ts" />
 /// <reference path="../../Utils.ts" />
 /// <reference path="../Enums/callrecordingauthtype.ts" />
 
diff --git a/ts/C2G/ViewModels/c2gtabcontentteamactivity.ts b/ts/C2G/ViewModels/c2gtabcontentteamactivity.ts
index fa0d43d..e11363f 100644
--- a/ts/C2G/ViewModels/c2gtabcontentteamactivity.ts
+++ b/ts/C2G/ViewModels/c2gtabcontentteamactivity.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GTabContentViewTeamActivity extends ViewModel {
         public categories: TACategories;
         public chart: TAChart;
diff --git a/ts/C2G/ViewModels/c2gtabs.ts b/ts/C2G/ViewModels/c2gtabs.ts
index 8db1f2b..f3df8d9 100644
--- a/ts/C2G/ViewModels/c2gtabs.ts
+++ b/ts/C2G/ViewModels/c2gtabs.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class C2GTabs extends ViewModel {
         public tabs: C2GTab[];
 
diff --git a/ts/C2G/ViewModels/recordingcredentials.ts b/ts/C2G/ViewModels/recordingcredentials.ts
index fcd0952..d3f17a7 100644
--- a/ts/C2G/ViewModels/recordingcredentials.ts
+++ b/ts/C2G/ViewModels/recordingcredentials.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     declare const defCompanyId: number;
 
     const authOrigin = "https://auth.brightmetrics.com";
diff --git a/ts/C2G/ViewModels/tacategories.ts b/ts/C2G/ViewModels/tacategories.ts
index 7e594de..e7fcc94 100644
--- a/ts/C2G/ViewModels/tacategories.ts
+++ b/ts/C2G/ViewModels/tacategories.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class TACategories extends ViewModel {
         public categories: TACategory[];
 
diff --git a/ts/C2G/ViewModels/tacategory.ts b/ts/C2G/ViewModels/tacategory.ts
index 956d0dd..8b4c132 100644
--- a/ts/C2G/ViewModels/tacategory.ts
+++ b/ts/C2G/ViewModels/tacategory.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class TACategory extends ViewModel {
         public label: string;
         public isTimeBlockCategory: KnockoutComputed<boolean>;
diff --git a/ts/C2G/ViewModels/tachart.ts b/ts/C2G/ViewModels/tachart.ts
index 693a63e..3e84c3e 100644
--- a/ts/C2G/ViewModels/tachart.ts
+++ b/ts/C2G/ViewModels/tachart.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class TAChart extends ViewModel {
         public rows: TAChartRow[];
         public xAxis: XAxis;
diff --git a/ts/C2G/ViewModels/tachartrow.ts b/ts/C2G/ViewModels/tachartrow.ts
index 44f0320..4724070 100644
--- a/ts/C2G/ViewModels/tachartrow.ts
+++ b/ts/C2G/ViewModels/tachartrow.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class TAChartRow extends ViewModel {
         public timeBlocks: TAChartTimeBlock[];
 
diff --git a/ts/C2G/ViewModels/tacharttimeblock.ts b/ts/C2G/ViewModels/tacharttimeblock.ts
index 3422c24..6c939b4 100644
--- a/ts/C2G/ViewModels/tacharttimeblock.ts
+++ b/ts/C2G/ViewModels/tacharttimeblock.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     const tooltipTemplate = _.template(`
 <table class='c-ta__table'>
     <tbody>
diff --git a/ts/C2G/ViewModels/talegend.ts b/ts/C2G/ViewModels/talegend.ts
index 2815e79..429b11c 100644
--- a/ts/C2G/ViewModels/talegend.ts
+++ b/ts/C2G/ViewModels/talegend.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class TALegend extends ViewModel {
         public legendItems: TALegendItem[];
 
diff --git a/ts/C2G/ViewModels/talegenditem.ts b/ts/C2G/ViewModels/talegenditem.ts
index 7e62c85..af69bce 100644
--- a/ts/C2G/ViewModels/talegenditem.ts
+++ b/ts/C2G/ViewModels/talegenditem.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     export class TALegendItem extends ViewModel {
         public label: string;
         public imgSrc: string;
diff --git a/ts/C2G/ViewModels/vatimeline.ts b/ts/C2G/ViewModels/vatimeline.ts
index f6fd9be..11d1a08 100644
--- a/ts/C2G/ViewModels/vatimeline.ts
+++ b/ts/C2G/ViewModels/vatimeline.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     interface IVATimelineProps {
         chartStart: Date;
         chartEnd: Date;
diff --git a/ts/C2G/ViewModels/vatimelineblock.ts b/ts/C2G/ViewModels/vatimelineblock.ts
index 1dd8917..a121723 100644
--- a/ts/C2G/ViewModels/vatimelineblock.ts
+++ b/ts/C2G/ViewModels/vatimelineblock.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     interface IProps extends C2GChartTimeBlockBase.Props {
         recordingStart: Date;
         recordingEnd: Date;
diff --git a/ts/C2G/ViewModels/xaxis.ts b/ts/C2G/ViewModels/xaxis.ts
index 96c0257..38dfa6e 100644
--- a/ts/C2G/ViewModels/xaxis.ts
+++ b/ts/C2G/ViewModels/xaxis.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.C2G.ViewModels {
+namespace Brightmetrics.C2G.ViewModels {
     // Used for both Team activity and C2G.
     export class XAxis extends ViewModel {
         public ticks: string[];
diff --git a/ts/CallFlow/ViewModels/callroutingdiagramviewlinkspreview.ts b/ts/CallFlow/ViewModels/callroutingdiagramviewlinkspreview.ts
index 007dee1..2c49ad4 100644
--- a/ts/CallFlow/ViewModels/callroutingdiagramviewlinkspreview.ts
+++ b/ts/CallFlow/ViewModels/callroutingdiagramviewlinkspreview.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodels/dialog.ts" />
diff --git a/ts/ChooseCompany/Interfaces/ichoosecompanyviewprops.ts b/ts/ChooseCompany/Interfaces/ichoosecompanyviewprops.ts
index 28aa481..e89da6f 100644
--- a/ts/ChooseCompany/Interfaces/ichoosecompanyviewprops.ts
+++ b/ts/ChooseCompany/Interfaces/ichoosecompanyviewprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ChooseCompany.Interfaces {
+namespace Brightmetrics.ChooseCompany.Interfaces {
     export interface IChooseCompanyViewProps {
         Companies: ICompanyItem[];
     }
diff --git a/ts/ChooseCompany/Interfaces/icompanyitem.ts b/ts/ChooseCompany/Interfaces/icompanyitem.ts
index 477979c..e7927fa 100644
--- a/ts/ChooseCompany/Interfaces/icompanyitem.ts
+++ b/ts/ChooseCompany/Interfaces/icompanyitem.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ChooseCompany.Interfaces {
+namespace Brightmetrics.ChooseCompany.Interfaces {
     export interface ICompanyItem {
         CompanyId: number;
         CompanyName: string;
diff --git a/ts/ChooseCompany/ViewModels/choosecompanyview.ts b/ts/ChooseCompany/ViewModels/choosecompanyview.ts
index 30eb1c1..e22b0df 100644
--- a/ts/ChooseCompany/ViewModels/choosecompanyview.ts
+++ b/ts/ChooseCompany/ViewModels/choosecompanyview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.ChooseCompany.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/ChooseCompany/ViewModels/page.ts b/ts/ChooseCompany/ViewModels/page.ts
index d89766d..cc5b1db 100644
--- a/ts/ChooseCompany/ViewModels/page.ts
+++ b/ts/ChooseCompany/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/pagebase.ts" />
+/// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.ChooseCompany.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Classes/scheduleentry.ts b/ts/Classes/scheduleentry.ts
index 8892c88..b5127f7 100644
--- a/ts/Classes/scheduleentry.ts
+++ b/ts/Classes/scheduleentry.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../utils.ts" />
+/// <reference path="../utils.ts" />
 /// <reference path="../constants.ts" />
 /// <reference path="../Enums/dataperspective.ts" />
 
diff --git a/ts/Dashboard/Classes/chartbox.ts b/ts/Dashboard/Classes/chartbox.ts
index 3e54ddc..3823f3e 100644
--- a/ts/Dashboard/Classes/chartbox.ts
+++ b/ts/Dashboard/Classes/chartbox.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Classes {
+namespace Brightmetrics.Dashboard.Classes {
     // TODO: Remove jQueryUI load-time dependency.
     if (!$.flowgrid) {
         ($ as any).flowgrid = { Box: _.noop as any };
diff --git a/ts/Dashboard/CreateDashboardWizard/createdashboarddialog.ts b/ts/Dashboard/CreateDashboardWizard/createdashboarddialog.ts
index 49b2611..9c45694 100644
--- a/ts/Dashboard/CreateDashboardWizard/createdashboarddialog.ts
+++ b/ts/Dashboard/CreateDashboardWizard/createdashboarddialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodels/dialog.ts" />
+/// <reference path="../../viewmodels/dialog.ts" />
 /// <reference path="../../utils.ts" />
 
 namespace Brightmetrics.Dashboard.CreateDashboardWizard.ViewModels {
diff --git a/ts/Dashboard/Enums/barchartlayout.ts b/ts/Dashboard/Enums/barchartlayout.ts
index 8f9a23e..55b1411 100644
--- a/ts/Dashboard/Enums/barchartlayout.ts
+++ b/ts/Dashboard/Enums/barchartlayout.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Enums {
     export enum BarChartLayout {
diff --git a/ts/Dashboard/Enums/chartfontsize.ts b/ts/Dashboard/Enums/chartfontsize.ts
index 66bebe3..16bb032 100644
--- a/ts/Dashboard/Enums/chartfontsize.ts
+++ b/ts/Dashboard/Enums/chartfontsize.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Enums {
+namespace Brightmetrics.Dashboard.Enums {
     export enum ChartFontSize {
         Small = "small",
         Normal = "normal",
diff --git a/ts/Dashboard/Enums/chartimgsettings.ts b/ts/Dashboard/Enums/chartimgsettings.ts
index 46eb0f7..2fa8616 100644
--- a/ts/Dashboard/Enums/chartimgsettings.ts
+++ b/ts/Dashboard/Enums/chartimgsettings.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Enums {
+namespace Brightmetrics.Dashboard.Enums {
     export enum ChartImgSettings {
         /** Fit to chart */
         Contain = "contain",
diff --git a/ts/Dashboard/Enums/charttype.ts b/ts/Dashboard/Enums/charttype.ts
index be3558c..8b57a3d 100644
--- a/ts/Dashboard/Enums/charttype.ts
+++ b/ts/Dashboard/Enums/charttype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 namespace Brightmetrics.Dashboard.Enums {
     export enum ChartType {
         Bar = "categorical",
diff --git a/ts/Dashboard/Enums/datatype.ts b/ts/Dashboard/Enums/datatype.ts
index 1d5429b..22919cc 100644
--- a/ts/Dashboard/Enums/datatype.ts
+++ b/ts/Dashboard/Enums/datatype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Enums {
+namespace Brightmetrics.Dashboard.Enums {
     export enum DataType {
         Historical = "historical",
         Realtime = "realtime",
diff --git a/ts/Dashboard/Enums/dataversion.ts b/ts/Dashboard/Enums/dataversion.ts
index 906851c..3f06dfa 100644
--- a/ts/Dashboard/Enums/dataversion.ts
+++ b/ts/Dashboard/Enums/dataversion.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Enums {
+namespace Brightmetrics.Dashboard.Enums {
     export enum DataVersion {
         NotSpecified = 0,
         PreClassic = 1,
diff --git a/ts/Dashboard/Enums/logactivityreason.ts b/ts/Dashboard/Enums/logactivityreason.ts
index e266335..911e036 100644
--- a/ts/Dashboard/Enums/logactivityreason.ts
+++ b/ts/Dashboard/Enums/logactivityreason.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Enums {
+namespace Brightmetrics.Dashboard.Enums {
     export enum LogActivityReason {
         InitiatedEditMode,
         SwitchedTabs,
diff --git a/ts/Dashboard/Enums/paststatereason.ts b/ts/Dashboard/Enums/paststatereason.ts
index 21c7330..8f5eb26 100644
--- a/ts/Dashboard/Enums/paststatereason.ts
+++ b/ts/Dashboard/Enums/paststatereason.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Enums {
+namespace Brightmetrics.Dashboard.Enums {
     export enum PastStateReason {
         ChartAdd = "chart:add",
         ChartRemove = "chart:remove",
diff --git a/ts/Dashboard/Enums/textchartlayout.ts b/ts/Dashboard/Enums/textchartlayout.ts
index 46ca43a..c5fcafc 100644
--- a/ts/Dashboard/Enums/textchartlayout.ts
+++ b/ts/Dashboard/Enums/textchartlayout.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Enums {
     export enum TextChartLayout {
diff --git a/ts/Dashboard/Enums/timedetail.ts b/ts/Dashboard/Enums/timedetail.ts
index b270afb..66aa5a3 100644
--- a/ts/Dashboard/Enums/timedetail.ts
+++ b/ts/Dashboard/Enums/timedetail.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Enums {
     export enum TimeDetail {
diff --git a/ts/Dashboard/Enums/valueorder.ts b/ts/Dashboard/Enums/valueorder.ts
index 9fd37f9..e897ec0 100644
--- a/ts/Dashboard/Enums/valueorder.ts
+++ b/ts/Dashboard/Enums/valueorder.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Enums {
     export enum ValueOrder {
diff --git a/ts/Dashboard/Interfaces/DTOs/ichart.ts b/ts/Dashboard/Interfaces/DTOs/ichart.ts
index 4db8a4c..7a6bbfd 100644
--- a/ts/Dashboard/Interfaces/DTOs/ichart.ts
+++ b/ts/Dashboard/Interfaces/DTOs/ichart.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     type LooseNumber = number | string;
 
     /**
diff --git a/ts/Dashboard/Interfaces/DTOs/ichartbox.ts b/ts/Dashboard/Interfaces/DTOs/ichartbox.ts
index cb14e16..8ae5588 100644
--- a/ts/Dashboard/Interfaces/DTOs/ichartbox.ts
+++ b/ts/Dashboard/Interfaces/DTOs/ichartbox.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     export interface IChartBox extends IFlowgridBox {
         /** The chart's ID */
         id: string;
diff --git a/ts/Dashboard/Interfaces/DTOs/ichartitem.ts b/ts/Dashboard/Interfaces/DTOs/ichartitem.ts
index 04753eb..2bba76b 100644
--- a/ts/Dashboard/Interfaces/DTOs/ichartitem.ts
+++ b/ts/Dashboard/Interfaces/DTOs/ichartitem.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     type LooseNumber = number | string;
 
     // tslint:disable-next-line
diff --git a/ts/Dashboard/Interfaces/DTOs/ichartitemstrict.ts b/ts/Dashboard/Interfaces/DTOs/ichartitemstrict.ts
index c6be2d5..23f0d84 100644
--- a/ts/Dashboard/Interfaces/DTOs/ichartitemstrict.ts
+++ b/ts/Dashboard/Interfaces/DTOs/ichartitemstrict.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     // tslint:disable-next-line
     type MapOfValueIndexTo<T> = {
         [valueIndex: string]: T;
diff --git a/ts/Dashboard/Interfaces/DTOs/ichartstrict.ts b/ts/Dashboard/Interfaces/DTOs/ichartstrict.ts
index adfece8..c73a0c6 100644
--- a/ts/Dashboard/Interfaces/DTOs/ichartstrict.ts
+++ b/ts/Dashboard/Interfaces/DTOs/ichartstrict.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     import BRIDs = Brightmetrics.Reports.Interfaces.DTOs;
 
     /**
diff --git a/ts/Dashboard/Interfaces/DTOs/iclocksettings.ts b/ts/Dashboard/Interfaces/DTOs/iclocksettings.ts
index fa6c162..600eaa9 100644
--- a/ts/Dashboard/Interfaces/DTOs/iclocksettings.ts
+++ b/ts/Dashboard/Interfaces/DTOs/iclocksettings.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     export interface IClockSettings {
         color: string;
         hour24: boolean;
diff --git a/ts/Dashboard/Interfaces/DTOs/icustomcolumngrouping.ts b/ts/Dashboard/Interfaces/DTOs/icustomcolumngrouping.ts
index 3dcf450..7fb3a86 100644
--- a/ts/Dashboard/Interfaces/DTOs/icustomcolumngrouping.ts
+++ b/ts/Dashboard/Interfaces/DTOs/icustomcolumngrouping.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     export interface ICustomColumnGrouping {
         id: string;
         /** Exclude from chart */
diff --git a/ts/Dashboard/Interfaces/DTOs/itextthreshold.ts b/ts/Dashboard/Interfaces/DTOs/itextthreshold.ts
index 4fc54bc..21b716a 100644
--- a/ts/Dashboard/Interfaces/DTOs/itextthreshold.ts
+++ b/ts/Dashboard/Interfaces/DTOs/itextthreshold.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     export interface ITextThreshold {
         color: string;
         hide: boolean;
diff --git a/ts/Dashboard/Interfaces/DTOs/itimeoffset.ts b/ts/Dashboard/Interfaces/DTOs/itimeoffset.ts
index 949bfda..5442afc 100644
--- a/ts/Dashboard/Interfaces/DTOs/itimeoffset.ts
+++ b/ts/Dashboard/Interfaces/DTOs/itimeoffset.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     export interface ITimeOffset {
         quantity: number;
         rangeType: "days" | "weeks" | "months" | "quarters" | "years";
diff --git a/ts/Dashboard/Interfaces/DTOs/ivaluethreshold.ts b/ts/Dashboard/Interfaces/DTOs/ivaluethreshold.ts
index dbeff14..e3f2fa8 100644
--- a/ts/Dashboard/Interfaces/DTOs/ivaluethreshold.ts
+++ b/ts/Dashboard/Interfaces/DTOs/ivaluethreshold.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces.DTOs {
+namespace Brightmetrics.Dashboard.Interfaces.DTOs {
     export interface IValueThreshold {
         directionOver: boolean;
         alert: number | null;
diff --git a/ts/Dashboard/Interfaces/ibarchartdataresponse.ts b/ts/Dashboard/Interfaces/ibarchartdataresponse.ts
index c8b1f68..feed9b3 100644
--- a/ts/Dashboard/Interfaces/ibarchartdataresponse.ts
+++ b/ts/Dashboard/Interfaces/ibarchartdataresponse.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="ibarchartdataseries.ts" />
diff --git a/ts/Dashboard/Interfaces/ibarchartdataseries.ts b/ts/Dashboard/Interfaces/ibarchartdataseries.ts
index 0f95a80..4a989ac 100644
--- a/ts/Dashboard/Interfaces/ibarchartdataseries.ts
+++ b/ts/Dashboard/Interfaces/ibarchartdataseries.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Interfaces {
     export interface IBarChartDataSeries {
diff --git a/ts/Dashboard/Interfaces/ichartcolormapping.ts b/ts/Dashboard/Interfaces/ichartcolormapping.ts
index 106ccf1..d8479f9 100644
--- a/ts/Dashboard/Interfaces/ichartcolormapping.ts
+++ b/ts/Dashboard/Interfaces/ichartcolormapping.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces {
+namespace Brightmetrics.Dashboard.Interfaces {
     export interface IChartColorMapping {
         color: string;
         exclude: string;
diff --git a/ts/Dashboard/Interfaces/ichartrenderer.ts b/ts/Dashboard/Interfaces/ichartrenderer.ts
index 5b41a1a..f87c994 100644
--- a/ts/Dashboard/Interfaces/ichartrenderer.ts
+++ b/ts/Dashboard/Interfaces/ichartrenderer.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../Interfaces/idisposable.ts" />
diff --git a/ts/Dashboard/Interfaces/ichartvalue.ts b/ts/Dashboard/Interfaces/ichartvalue.ts
index 33c93cc..72e347a 100644
--- a/ts/Dashboard/Interfaces/ichartvalue.ts
+++ b/ts/Dashboard/Interfaces/ichartvalue.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Interfaces {
 
diff --git a/ts/Dashboard/Interfaces/idashboardcontent.ts b/ts/Dashboard/Interfaces/idashboardcontent.ts
index 613a107..430d304 100644
--- a/ts/Dashboard/Interfaces/idashboardcontent.ts
+++ b/ts/Dashboard/Interfaces/idashboardcontent.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="itickersettings.ts" />
diff --git a/ts/Dashboard/Interfaces/idashboardtab.ts b/ts/Dashboard/Interfaces/idashboardtab.ts
index c3f0a73..f68c330 100644
--- a/ts/Dashboard/Interfaces/idashboardtab.ts
+++ b/ts/Dashboard/Interfaces/idashboardtab.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces {
+namespace Brightmetrics.Dashboard.Interfaces {
     export interface IDashboardTab {
         id: string;
         permissionLevel: number;
diff --git a/ts/Dashboard/Interfaces/idetailfact.ts b/ts/Dashboard/Interfaces/idetailfact.ts
index f94ed90..ff485c2 100644
--- a/ts/Dashboard/Interfaces/idetailfact.ts
+++ b/ts/Dashboard/Interfaces/idetailfact.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     /** Same fields as `IFact`, just diff value index */
diff --git a/ts/Dashboard/Interfaces/idrilldownfield.ts b/ts/Dashboard/Interfaces/idrilldownfield.ts
index efc9438..f6cadad 100644
--- a/ts/Dashboard/Interfaces/idrilldownfield.ts
+++ b/ts/Dashboard/Interfaces/idrilldownfield.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Interfaces {
     export interface IDrillDownField {
diff --git a/ts/Dashboard/Interfaces/idrilldownview.ts b/ts/Dashboard/Interfaces/idrilldownview.ts
index c36b742..57fd0f8 100644
--- a/ts/Dashboard/Interfaces/idrilldownview.ts
+++ b/ts/Dashboard/Interfaces/idrilldownview.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Interfaces {
     export interface IDrillDownView {
diff --git a/ts/Dashboard/Interfaces/itabactions.ts b/ts/Dashboard/Interfaces/itabactions.ts
index 42adf84..0a680ec 100644
--- a/ts/Dashboard/Interfaces/itabactions.ts
+++ b/ts/Dashboard/Interfaces/itabactions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces {
+namespace Brightmetrics.Dashboard.Interfaces {
     export interface ITabActionsBase {
         addState(pastStateReason: Enums.PastStateReason, pastStateInfo?: string): void;
         beginChartOptions(): void;
diff --git a/ts/Dashboard/Interfaces/itabsettings.ts b/ts/Dashboard/Interfaces/itabsettings.ts
index 3498d8c..f2b4837 100644
--- a/ts/Dashboard/Interfaces/itabsettings.ts
+++ b/ts/Dashboard/Interfaces/itabsettings.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="itickersettings.ts" />
diff --git a/ts/Dashboard/Interfaces/itickeroptions.ts b/ts/Dashboard/Interfaces/itickeroptions.ts
index 397d172..335de66 100644
--- a/ts/Dashboard/Interfaces/itickeroptions.ts
+++ b/ts/Dashboard/Interfaces/itickeroptions.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../interfaces/idialogviewmodeloptions.ts" />
+/// <reference path="../../interfaces/idialogviewmodeloptions.ts" />
 
 namespace Brightmetrics.Dashboard.Interfaces {
     export interface ITickerOptions extends Brightmetrics.Interfaces.IDialogViewModelOptions {
diff --git a/ts/Dashboard/Interfaces/itickersettings.ts b/ts/Dashboard/Interfaces/itickersettings.ts
index eb3e353..1116afe 100644
--- a/ts/Dashboard/Interfaces/itickersettings.ts
+++ b/ts/Dashboard/Interfaces/itickersettings.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Interfaces {
+namespace Brightmetrics.Dashboard.Interfaces {
     export interface ITickerSettings {
         enabled: boolean;
         text: string;
diff --git a/ts/Dashboard/Interfaces/ivaluefacts.ts b/ts/Dashboard/Interfaces/ivaluefacts.ts
index c617807..2d5b503 100644
--- a/ts/Dashboard/Interfaces/ivaluefacts.ts
+++ b/ts/Dashboard/Interfaces/ivaluefacts.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Dashboard.Interfaces {
 
diff --git a/ts/Dashboard/Realtime/agentinfo.ts b/ts/Dashboard/Realtime/agentinfo.ts
index ec6a631..86a3dba 100644
--- a/ts/Dashboard/Realtime/agentinfo.ts
+++ b/ts/Dashboard/Realtime/agentinfo.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Realtime {
+namespace Brightmetrics.Dashboard.Realtime {
 
     export class AgentInfo {
         public lastSeen: number;
diff --git a/ts/Dashboard/Realtime/ccgs.ts b/ts/Dashboard/Realtime/ccgs.ts
index 883ce4a..bdcb8d7 100644
--- a/ts/Dashboard/Realtime/ccgs.ts
+++ b/ts/Dashboard/Realtime/ccgs.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:max-classes-per-file */
+/* tslint:disable:max-classes-per-file */
 /* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../utils.ts"/>
 /// <reference path="../../basicdialog2.ts"/>
diff --git a/ts/Dashboard/Realtime/micc-realtime-demo-proxy.ts b/ts/Dashboard/Realtime/micc-realtime-demo-proxy.ts
index d6b556c..f5dfa33 100644
--- a/ts/Dashboard/Realtime/micc-realtime-demo-proxy.ts
+++ b/ts/Dashboard/Realtime/micc-realtime-demo-proxy.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-console */
+/* tslint:disable:no-console */
 /* tslint:disable:max-classes-per-file */
 
 namespace Brightmetrics.Dashboard.Realtime {
diff --git a/ts/Dashboard/Realtime/purecloud-realtime-demo-proxy.ts b/ts/Dashboard/Realtime/purecloud-realtime-demo-proxy.ts
index cfc11ac..61f7e61 100644
--- a/ts/Dashboard/Realtime/purecloud-realtime-demo-proxy.ts
+++ b/ts/Dashboard/Realtime/purecloud-realtime-demo-proxy.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-console */
+/* tslint:disable:no-console */
 /* tslint:disable:max-classes-per-file */
 /* tslint:disable:object-literal-sort-keys */
 
diff --git a/ts/Dashboard/Realtime/realtime-demo-hub.ts b/ts/Dashboard/Realtime/realtime-demo-hub.ts
index f80242c..3da8ce9 100644
--- a/ts/Dashboard/Realtime/realtime-demo-hub.ts
+++ b/ts/Dashboard/Realtime/realtime-demo-hub.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.Realtime {
+namespace Brightmetrics.Dashboard.Realtime {
     export class DemoConnection implements SignalR.Hub.Connection {
         private stateChangedCallback: Array<(change: SignalR.StateChanged) => void> = [];
 
diff --git a/ts/Dashboard/Realtime/realtime-demo-proxy.ts b/ts/Dashboard/Realtime/realtime-demo-proxy.ts
index ba40928..8f1039e 100644
--- a/ts/Dashboard/Realtime/realtime-demo-proxy.ts
+++ b/ts/Dashboard/Realtime/realtime-demo-proxy.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-console */
+/* tslint:disable:no-console */
 /* tslint:disable:max-classes-per-file */
 
 namespace Brightmetrics.Dashboard.Realtime {
diff --git a/ts/Dashboard/Realtime/realtimechartdata.ts b/ts/Dashboard/Realtime/realtimechartdata.ts
index 7139b59..50aabd1 100644
--- a/ts/Dashboard/Realtime/realtimechartdata.ts
+++ b/ts/Dashboard/Realtime/realtimechartdata.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-console */
+/* tslint:disable:no-console */
 /// <reference path="realtimehub.ts" />
 /// <reference path="../../Interfaces/idatasourceinstance.ts" />
 
diff --git a/ts/Dashboard/Realtime/realtimehub.ts b/ts/Dashboard/Realtime/realtimehub.ts
index 81973e0..dc0fc61 100644
--- a/ts/Dashboard/Realtime/realtimehub.ts
+++ b/ts/Dashboard/Realtime/realtimehub.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../Interfaces/idatasourceinstance.ts" />
+/// <reference path="../../Interfaces/idatasourceinstance.ts" />
 /// <reference path="subscription.ts" />
 
 // tslint:disable:max-classes-per-file
diff --git a/ts/Dashboard/Realtime/subscription.ts b/ts/Dashboard/Realtime/subscription.ts
index 5111e29..6c68519 100644
--- a/ts/Dashboard/Realtime/subscription.ts
+++ b/ts/Dashboard/Realtime/subscription.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../Interfaces/idatasourceinstance.ts" />
+/// <reference path="../../Interfaces/idatasourceinstance.ts" />
 
 namespace Brightmetrics.Dashboard.Realtime {
 
diff --git a/ts/Dashboard/SmartStartWizard/ViewModels/dashboardsetupinfodialog.ts b/ts/Dashboard/SmartStartWizard/ViewModels/dashboardsetupinfodialog.ts
index d2dcf0f..3c10218 100644
--- a/ts/Dashboard/SmartStartWizard/ViewModels/dashboardsetupinfodialog.ts
+++ b/ts/Dashboard/SmartStartWizard/ViewModels/dashboardsetupinfodialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../ViewModels/dialog.ts" />
+/// <reference path="../../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Dashboard.SmartStartWizard.ViewModels {
     interface IDashboardSetupInfoDialogProps {
diff --git a/ts/Dashboard/SmartStartWizard/ViewModels/dialog.ts b/ts/Dashboard/SmartStartWizard/ViewModels/dialog.ts
index 52969ce..e21505f 100644
--- a/ts/Dashboard/SmartStartWizard/ViewModels/dialog.ts
+++ b/ts/Dashboard/SmartStartWizard/ViewModels/dialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../ViewModels/dialog.ts" />
+/// <reference path="../../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Dashboard.SmartStartWizard.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Dashboard/ViewModels/alert.ts b/ts/Dashboard/ViewModels/alert.ts
index 337667c..e95ba43 100644
--- a/ts/Dashboard/ViewModels/alert.ts
+++ b/ts/Dashboard/ViewModels/alert.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../utils.ts" />
+/// <reference path="../../utils.ts" />
 /// <reference path="../../constants.ts" />
 /// <reference path="../../viewmodel.ts" />
 
diff --git a/ts/Dashboard/ViewModels/alertsettingsdialog.ts b/ts/Dashboard/ViewModels/alertsettingsdialog.ts
index 8e23f75..86a036f 100644
--- a/ts/Dashboard/ViewModels/alertsettingsdialog.ts
+++ b/ts/Dashboard/ViewModels/alertsettingsdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../utils.ts" />
+/// <reference path="../../utils.ts" />
 /// <reference path="../../viewmodel.ts" />
 /// <reference path="../../viewmodels/dialog.ts" />
 
diff --git a/ts/Dashboard/ViewModels/chartoptionsdialog.ts b/ts/Dashboard/ViewModels/chartoptionsdialog.ts
index cc93f24..f6338b7 100644
--- a/ts/Dashboard/ViewModels/chartoptionsdialog.ts
+++ b/ts/Dashboard/ViewModels/chartoptionsdialog.ts
@@ -1,4 +1,4 @@
-﻿// tslint:disable:no-reference
+// tslint:disable:no-reference
 /// <reference path="../../ViewModels/dialog.ts" />
 /// <reference path="../../enums/valuescale.ts" />
 
diff --git a/ts/Dashboard/ViewModels/copychartdialog.ts b/ts/Dashboard/ViewModels/copychartdialog.ts
index 1b36d88..91a0a15 100644
--- a/ts/Dashboard/ViewModels/copychartdialog.ts
+++ b/ts/Dashboard/ViewModels/copychartdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/dialog.ts" />
+/// <reference path="../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Dashboard.ViewModels {
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Dashboard/ViewModels/customcolumngroupsdialog.ts b/ts/Dashboard/ViewModels/customcolumngroupsdialog.ts
index ee93da8..e0f8269 100644
--- a/ts/Dashboard/ViewModels/customcolumngroupsdialog.ts
+++ b/ts/Dashboard/ViewModels/customcolumngroupsdialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Dashboard.ViewModels {
diff --git a/ts/Dashboard/ViewModels/dashboard.ts b/ts/Dashboard/ViewModels/dashboard.ts
index 8ec3611..e43596e 100644
--- a/ts/Dashboard/ViewModels/dashboard.ts
+++ b/ts/Dashboard/ViewModels/dashboard.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.ViewModels {
+namespace Brightmetrics.Dashboard.ViewModels {
     import BVs = Brightmetrics.ViewModels;
     import BIs = Brightmetrics.Interfaces;
     import BEs = Brightmetrics.Enums;
diff --git a/ts/Dashboard/ViewModels/editvaluefilterdialog.ts b/ts/Dashboard/ViewModels/editvaluefilterdialog.ts
index a3ba793..48970cc 100644
--- a/ts/Dashboard/ViewModels/editvaluefilterdialog.ts
+++ b/ts/Dashboard/ViewModels/editvaluefilterdialog.ts
@@ -1,4 +1,4 @@
-﻿// tslint:disable:no-reference
+// tslint:disable:no-reference
 /// <reference path="../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Dashboard.ViewModels {
diff --git a/ts/Dashboard/ViewModels/item.ts b/ts/Dashboard/ViewModels/item.ts
index 719f741..af1fa15 100644
--- a/ts/Dashboard/ViewModels/item.ts
+++ b/ts/Dashboard/ViewModels/item.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../enums/datatype.ts" />
+/// <reference path="../../enums/datatype.ts" />
 namespace Brightmetrics.Dashboard.ViewModels {
     import BEs = Brightmetrics.Enums;
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Dashboard/ViewModels/page.ts b/ts/Dashboard/ViewModels/page.ts
index 8754b5e..83b7701 100644
--- a/ts/Dashboard/ViewModels/page.ts
+++ b/ts/Dashboard/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard.ViewModels {
+namespace Brightmetrics.Dashboard.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BVs = Brightmetrics.ViewModels;
     import BEs = Brightmetrics.Enums;
diff --git a/ts/Dashboard/ViewModels/replaceallfiltersdialog.ts b/ts/Dashboard/ViewModels/replaceallfiltersdialog.ts
index e3c3ea9..99ff136 100644
--- a/ts/Dashboard/ViewModels/replaceallfiltersdialog.ts
+++ b/ts/Dashboard/ViewModels/replaceallfiltersdialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../MultipleSelect/ViewModels/multipleselectdialog.ts" />
 
 namespace Brightmetrics.Dashboard.ViewModels {
diff --git a/ts/Dashboard/ViewModels/settingsdialog.ts b/ts/Dashboard/ViewModels/settingsdialog.ts
index c3d40a5..d3bb07e 100644
--- a/ts/Dashboard/ViewModels/settingsdialog.ts
+++ b/ts/Dashboard/ViewModels/settingsdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../utils.ts" />
+/// <reference path="../../utils.ts" />
 /// <reference path="../../viewmodels/dialog.ts" />
 
 namespace Brightmetrics.Dashboard.ViewModels {
diff --git a/ts/Dashboard/ViewModels/tabsmgmtdialog.ts b/ts/Dashboard/ViewModels/tabsmgmtdialog.ts
index 503f71b..8fb7cf7 100644
--- a/ts/Dashboard/ViewModels/tabsmgmtdialog.ts
+++ b/ts/Dashboard/ViewModels/tabsmgmtdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodels/dialog.ts" />
+/// <reference path="../../viewmodels/dialog.ts" />
 
 namespace Brightmetrics.Dashboard.ViewModels {
 
diff --git a/ts/Dashboard/ViewModels/ticker.ts b/ts/Dashboard/ViewModels/ticker.ts
index 64f1a18..813a7a1 100644
--- a/ts/Dashboard/ViewModels/ticker.ts
+++ b/ts/Dashboard/ViewModels/ticker.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../constants.ts" />
+/// <reference path="../../constants.ts" />
 /// <reference path="../../Interfaces/idialogviewmodeloptions.ts" />
 /// <reference path="../../viewmodel.ts" />
 /// <reference path="../../Interfaces/ikotemplatebinding.ts" />
diff --git a/ts/Dashboard/ViewModels/tickersettings.ts b/ts/Dashboard/ViewModels/tickersettings.ts
index 4c55896..1d6748d 100644
--- a/ts/Dashboard/ViewModels/tickersettings.ts
+++ b/ts/Dashboard/ViewModels/tickersettings.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../utils.ts" />
+/// <reference path="../../utils.ts" />
 /// <reference path="../interfaces/itickersettings.ts" />
 /// <reference path="../../interfaces/ikooption.ts" />
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/Dashboard/hcbarchartrenderer.ts b/ts/Dashboard/hcbarchartrenderer.ts
index 2e33f8c..30eed36 100644
--- a/ts/Dashboard/hcbarchartrenderer.ts
+++ b/ts/Dashboard/hcbarchartrenderer.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="hcchartrenderer.ts" />
+/// <reference path="hcchartrenderer.ts" />
 /// <reference path="../Enums/valuescale.ts" />
 /// <reference path="../Exceptions/notimplementederror.ts" />
 /// <reference path="../Exceptions/argumentexception.ts" />
diff --git a/ts/Dashboard/hcchartrenderer.ts b/ts/Dashboard/hcchartrenderer.ts
index 2776744..6b92f86 100644
--- a/ts/Dashboard/hcchartrenderer.ts
+++ b/ts/Dashboard/hcchartrenderer.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Dashboard {
+namespace Brightmetrics.Dashboard {
     export abstract class HCChartRenderer implements Interfaces.IChartRenderer {
         public tooltipFormatterProvider(...args: any[]): () => string {
             throw new Brightmetrics.Exceptions.NotImplementedError();
diff --git a/ts/Dashboard/hcpiechartrenderer.ts b/ts/Dashboard/hcpiechartrenderer.ts
index e91e7ef..7ce2a88 100644
--- a/ts/Dashboard/hcpiechartrenderer.ts
+++ b/ts/Dashboard/hcpiechartrenderer.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="hcchartrenderer.ts" />
+/// <reference path="hcchartrenderer.ts" />
 /// <reference path="../Enums/valuescale.ts" />
 /// <reference path="../Exceptions/notimplementederror.ts" />
 /// <reference path="../Exceptions/argumentexception.ts" />
diff --git a/ts/Dashboard/hctimeserieschartrenderer.ts b/ts/Dashboard/hctimeserieschartrenderer.ts
index 515e6c2..bc213ee 100644
--- a/ts/Dashboard/hctimeserieschartrenderer.ts
+++ b/ts/Dashboard/hctimeserieschartrenderer.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="hcchartrenderer.ts" />
+/// <reference path="hcchartrenderer.ts" />
 /// <reference path="../Enums/valuescale.ts" />
 /// <reference path="../Exceptions/notimplementederror.ts" />
 /// <reference path="../Exceptions/argumentexception.ts" />
diff --git a/ts/Dashboard/textchartrenderer.ts b/ts/Dashboard/textchartrenderer.ts
index 72f43e8..e77c6a9 100644
--- a/ts/Dashboard/textchartrenderer.ts
+++ b/ts/Dashboard/textchartrenderer.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:max-classes-per-file */
+/* tslint:disable:max-classes-per-file */
 
 /// <reference path="hcchartrenderer.ts" />
 /// <reference path="Interfaces/ichartrenderer.ts" />
diff --git a/ts/Dashboard/timelinechartrenderer.ts b/ts/Dashboard/timelinechartrenderer.ts
index fb67a45..0800fa4 100644
--- a/ts/Dashboard/timelinechartrenderer.ts
+++ b/ts/Dashboard/timelinechartrenderer.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:max-classes-per-file */
+/* tslint:disable:max-classes-per-file */
 /// <reference path="Realtime/realtimechartdata.ts" />
 /// <reference path="hcchartrenderer.ts" />
 /// <reference path="Interfaces/ichartrenderer.ts" />
diff --git a/ts/DashboardDetail/Enums/timerange.ts b/ts/DashboardDetail/Enums/timerange.ts
index cf18ca3..6468dda 100644
--- a/ts/DashboardDetail/Enums/timerange.ts
+++ b/ts/DashboardDetail/Enums/timerange.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DashboardDetail.Enums {
+namespace Brightmetrics.DashboardDetail.Enums {
     /**
      * Identical to `Brightmetrics.Enums.TimeRange` except for:
      *  Specified    -> Custom
diff --git a/ts/DashboardDetail/ViewModels/dashboarddetail.ts b/ts/DashboardDetail/ViewModels/dashboarddetail.ts
index a49a6a4..015de32 100644
--- a/ts/DashboardDetail/ViewModels/dashboarddetail.ts
+++ b/ts/DashboardDetail/ViewModels/dashboarddetail.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 // tslint:disable:no-console
 namespace Brightmetrics.DashboardDetail.ViewModels {
diff --git a/ts/DashboardDetail/ViewModels/exportdialog.ts b/ts/DashboardDetail/ViewModels/exportdialog.ts
index 701ee72..3acc088 100644
--- a/ts/DashboardDetail/ViewModels/exportdialog.ts
+++ b/ts/DashboardDetail/ViewModels/exportdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/dialog.ts" />
+/// <reference path="../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.DashboardDetail.ViewModels {
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/DashboardDetail/ViewModels/layout-timerange-editor.ts b/ts/DashboardDetail/ViewModels/layout-timerange-editor.ts
index 24854a6..c244017 100644
--- a/ts/DashboardDetail/ViewModels/layout-timerange-editor.ts
+++ b/ts/DashboardDetail/ViewModels/layout-timerange-editor.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.DashboardDetail.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/DashboardDetail/ViewModels/page.ts b/ts/DashboardDetail/ViewModels/page.ts
index 6c978c9..9b077f3 100644
--- a/ts/DashboardDetail/ViewModels/page.ts
+++ b/ts/DashboardDetail/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.DashboardDetail.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/DashboardDetail/ViewModels/topbar.ts b/ts/DashboardDetail/ViewModels/topbar.ts
index 3233dfa..138a17f 100644
--- a/ts/DashboardDetail/ViewModels/topbar.ts
+++ b/ts/DashboardDetail/ViewModels/topbar.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.DashboardDetail.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/DataSources/Interfaces/idataconnectiongroupbilling.ts b/ts/DataSources/Interfaces/idataconnectiongroupbilling.ts
index a4bf6b2..5be3660 100644
--- a/ts/DataSources/Interfaces/idataconnectiongroupbilling.ts
+++ b/ts/DataSources/Interfaces/idataconnectiongroupbilling.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.Interfaces {
+namespace Brightmetrics.DataSources.Interfaces {
     export interface IDataConnectionGroupBilling {
         associatedCompany: number;
         amount: number;
diff --git a/ts/DataSources/Interfaces/idataconnectiongroupteir.ts b/ts/DataSources/Interfaces/idataconnectiongroupteir.ts
index c8076c1..32a2094 100644
--- a/ts/DataSources/Interfaces/idataconnectiongroupteir.ts
+++ b/ts/DataSources/Interfaces/idataconnectiongroupteir.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.Interfaces {
+namespace Brightmetrics.DataSources.Interfaces {
     export interface IDataConnectionGroupTeir {
         Amount: number | null;
         AmountYearly: number | null;
diff --git a/ts/DataSources/Interfaces/idsidata.ts b/ts/DataSources/Interfaces/idsidata.ts
index 02a0afc..2fa401c 100644
--- a/ts/DataSources/Interfaces/idsidata.ts
+++ b/ts/DataSources/Interfaces/idsidata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.Interfaces {
+namespace Brightmetrics.DataSources.Interfaces {
     export interface IDSIData {
         name: string;
         lastUpdate: string;
diff --git a/ts/DataSources/Interfaces/isubscriptionitem.ts b/ts/DataSources/Interfaces/isubscriptionitem.ts
index e845d90..6bc4783 100644
--- a/ts/DataSources/Interfaces/isubscriptionitem.ts
+++ b/ts/DataSources/Interfaces/isubscriptionitem.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.Interfaces {
+namespace Brightmetrics.DataSources.Interfaces {
     export interface ISubscriptionItem {
         /** Example: '+ $55/month at current usage' */
         additionalCharges?: string;
diff --git a/ts/DataSources/ViewModels/agentsview.ts b/ts/DataSources/ViewModels/agentsview.ts
index 4ab6545..0e37dae 100644
--- a/ts/DataSources/ViewModels/agentsview.ts
+++ b/ts/DataSources/ViewModels/agentsview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.DataSources.ViewModels {
     interface IAgentsView {
diff --git a/ts/DataSources/ViewModels/datasourcecard.ts b/ts/DataSources/ViewModels/datasourcecard.ts
index 6d1fe4b..708497f 100644
--- a/ts/DataSources/ViewModels/datasourcecard.ts
+++ b/ts/DataSources/ViewModels/datasourcecard.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../viewmodel.ts" />
 /// <reference path="datasourceconfigdialog.ts" />
 
diff --git a/ts/DataSources/ViewModels/datasourcesview.ts b/ts/DataSources/ViewModels/datasourcesview.ts
index 3130b02..04ef269 100644
--- a/ts/DataSources/ViewModels/datasourcesview.ts
+++ b/ts/DataSources/ViewModels/datasourcesview.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.DataSources.ViewModels {
diff --git a/ts/DataSources/ViewModels/diagnosticsdialog.ts b/ts/DataSources/ViewModels/diagnosticsdialog.ts
index 6488d14..e0ffec5 100644
--- a/ts/DataSources/ViewModels/diagnosticsdialog.ts
+++ b/ts/DataSources/ViewModels/diagnosticsdialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../viewmodels/dialog.ts" />
 /// <reference path="../../utils.ts" />
 
diff --git a/ts/DataSources/ViewModels/editsubscriptiondialog.ts b/ts/DataSources/ViewModels/editsubscriptiondialog.ts
index c1e27c0..b8437fd 100644
--- a/ts/DataSources/ViewModels/editsubscriptiondialog.ts
+++ b/ts/DataSources/ViewModels/editsubscriptiondialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.ViewModels {
+namespace Brightmetrics.DataSources.ViewModels {
     enum SubscriptionType {
         AnnualMonthly = "annual-monthly",
         AnnualYearly = "annual-yearly",
diff --git a/ts/DataSources/ViewModels/enterpriseexpirationdialog.ts b/ts/DataSources/ViewModels/enterpriseexpirationdialog.ts
index bc2896f..807b52e 100644
--- a/ts/DataSources/ViewModels/enterpriseexpirationdialog.ts
+++ b/ts/DataSources/ViewModels/enterpriseexpirationdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodels/dialog.ts" />
+/// <reference path="../../viewmodels/dialog.ts" />
 /// <reference path="../../utils.ts" />
 
 namespace Brightmetrics.DataSources.ViewModels {
diff --git a/ts/DataSources/ViewModels/page.ts b/ts/DataSources/ViewModels/page.ts
index 59f37a1..40c818b 100644
--- a/ts/DataSources/ViewModels/page.ts
+++ b/ts/DataSources/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/pagebase.ts" />
+/// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.DataSources.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/DataSources/ViewModels/promocard.ts b/ts/DataSources/ViewModels/promocard.ts
index 444808c..0d96217 100644
--- a/ts/DataSources/ViewModels/promocard.ts
+++ b/ts/DataSources/ViewModels/promocard.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.DataSources.ViewModels {
     interface IPromoCardProps {
diff --git a/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialog.ts b/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialog.ts
index 04119a7..5b9a33c 100644
--- a/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialog.ts
+++ b/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.ViewModels {
+namespace Brightmetrics.DataSources.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BEs = Brightmetrics.Enums;
 
diff --git a/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialognext.ts b/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialognext.ts
index d9b20c0..49f9641 100644
--- a/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialognext.ts
+++ b/ts/DataSources/ViewModels/purecloudsubscriptioncheckoutdialognext.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.ViewModels {
+namespace Brightmetrics.DataSources.ViewModels {
     import BIs = Brightmetrics.Interfaces;
 
     interface IPureCloudSubscriptionCheckoutDialogProps {
diff --git a/ts/DataSources/ViewModels/setupprogramdialog.ts b/ts/DataSources/ViewModels/setupprogramdialog.ts
index edd0182..5091b31 100644
--- a/ts/DataSources/ViewModels/setupprogramdialog.ts
+++ b/ts/DataSources/ViewModels/setupprogramdialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../viewmodels/dialog.ts" />
 
 namespace Brightmetrics.DataSources.ViewModels {
diff --git a/ts/DataSources/ViewModels/subscriptioncheckoutdialog.ts b/ts/DataSources/ViewModels/subscriptioncheckoutdialog.ts
index 366ae72..d8176c8 100644
--- a/ts/DataSources/ViewModels/subscriptioncheckoutdialog.ts
+++ b/ts/DataSources/ViewModels/subscriptioncheckoutdialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.DataSources.ViewModels {
+namespace Brightmetrics.DataSources.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BEs = Brightmetrics.Enums;
 
diff --git a/ts/Enums/accesslevel.ts b/ts/Enums/accesslevel.ts
index 3ad58ef..43cf189 100644
--- a/ts/Enums/accesslevel.ts
+++ b/ts/Enums/accesslevel.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum AccessLevel {
         None = 0,
         View = 1,
diff --git a/ts/Enums/billingstatus.ts b/ts/Enums/billingstatus.ts
index 6b43696..960d516 100644
--- a/ts/Enums/billingstatus.ts
+++ b/ts/Enums/billingstatus.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum BillingStatus {
         /**
          * A data source is active and billed
diff --git a/ts/Enums/brightfeature.ts b/ts/Enums/brightfeature.ts
index 6f313e6..b71b53a 100644
--- a/ts/Enums/brightfeature.ts
+++ b/ts/Enums/brightfeature.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum BrightFeatureType {
         ClassicAccess = "classic_access",
         Radiance = "radiance",
diff --git a/ts/Enums/brightpermissionkey.ts b/ts/Enums/brightpermissionkey.ts
index f1b6410..9e5e5d2 100644
--- a/ts/Enums/brightpermissionkey.ts
+++ b/ts/Enums/brightpermissionkey.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum BrightPermissionKey {
         CanViewCompanyData = "Admin.CanViewCompany",
         CanAdministerCompany = "Admin.CanAdministerCompany",
diff --git a/ts/Enums/dataperspective.ts b/ts/Enums/dataperspective.ts
index 4b37705..f3e999d 100644
--- a/ts/Enums/dataperspective.ts
+++ b/ts/Enums/dataperspective.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     /**
      * Helpful flags for obtaining context, esp. w/in agnostic components
      * (components that handle reports and dashboards).
diff --git a/ts/Enums/exportformat.ts b/ts/Enums/exportformat.ts
index b5207ea..471f32c 100644
--- a/ts/Enums/exportformat.ts
+++ b/ts/Enums/exportformat.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum ExportFormat {
         /** Reports only. */
         CSV = "csv",
diff --git a/ts/Enums/featuretreatment.ts b/ts/Enums/featuretreatment.ts
index 0a79bc1..daac480 100644
--- a/ts/Enums/featuretreatment.ts
+++ b/ts/Enums/featuretreatment.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum FeatureTreatment {
         /** Deprecated */
         RadianceDashboardVersion = "radiance-dashboard-version",
diff --git a/ts/Enums/formatorientation.ts b/ts/Enums/formatorientation.ts
index b67410c..6a9d799 100644
--- a/ts/Enums/formatorientation.ts
+++ b/ts/Enums/formatorientation.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum FormatOrientation {
         Portrait = "portrait",
         Landscape = "landscape",
diff --git a/ts/Enums/localstoragekey.ts b/ts/Enums/localstoragekey.ts
index 78868b4..087c1c7 100644
--- a/ts/Enums/localstoragekey.ts
+++ b/ts/Enums/localstoragekey.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum LocalStorageKey {
         HasPermanentlyDismissedSmartStartWizard = "db_cre8_sswzd_dis:prm",
     }
diff --git a/ts/Enums/newschedulefrequencytype.ts b/ts/Enums/newschedulefrequencytype.ts
index 7ac9279..b5feff4 100644
--- a/ts/Enums/newschedulefrequencytype.ts
+++ b/ts/Enums/newschedulefrequencytype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum NewScheduleFrequencyType {
         EveryDay = "EveryDay",
         /** new */
diff --git a/ts/Enums/page.ts b/ts/Enums/page.ts
index 1ec1083..904bf4c 100644
--- a/ts/Enums/page.ts
+++ b/ts/Enums/page.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum Page {
         Dashboard = "Dashboard",
         Admin = "Admin",
diff --git a/ts/Enums/schedulefrequencytype.ts b/ts/Enums/schedulefrequencytype.ts
index 2e84b9b..e9360ab 100644
--- a/ts/Enums/schedulefrequencytype.ts
+++ b/ts/Enums/schedulefrequencytype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum ScheduleFrequencyType {
         EveryDay = "EveryDay",
         DaysOfTheWeek = "DaysOfTheWeek",
diff --git a/ts/Enums/theme.ts b/ts/Enums/theme.ts
index c5960dd..0547c58 100644
--- a/ts/Enums/theme.ts
+++ b/ts/Enums/theme.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum Theme {
         Default = "Default",
         Dark = "Dark",
diff --git a/ts/Enums/timerange.ts b/ts/Enums/timerange.ts
index aff6c51..89b663b 100644
--- a/ts/Enums/timerange.ts
+++ b/ts/Enums/timerange.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     // NOTE: Deprecated: These were the integral values for the classic
     // chart options relative time range dropdown.
 
diff --git a/ts/Enums/valuescale.ts b/ts/Enums/valuescale.ts
index fefb294..fe6994c 100644
--- a/ts/Enums/valuescale.ts
+++ b/ts/Enums/valuescale.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Enums {
+namespace Brightmetrics.Enums {
     export enum ValueScale {
         Minutes = "Minutes",
         Seconds = "Seconds",
diff --git a/ts/Exceptions/argumentexception.ts b/ts/Exceptions/argumentexception.ts
index c22d240..83c6d20 100644
--- a/ts/Exceptions/argumentexception.ts
+++ b/ts/Exceptions/argumentexception.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Exceptions {
+namespace Brightmetrics.Exceptions {
     export class ArgumentError extends Error {
         public name = "ArgumentError";
     }
diff --git a/ts/Exceptions/notimplementederror.ts b/ts/Exceptions/notimplementederror.ts
index bd33e23..69cbaba 100644
--- a/ts/Exceptions/notimplementederror.ts
+++ b/ts/Exceptions/notimplementederror.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Exceptions {
+namespace Brightmetrics.Exceptions {
     export class NotImplementedError extends Error {
         public name = "NotImplementedError";
     }
diff --git a/ts/ExportReport/ViewModels/exportview.ts b/ts/ExportReport/ViewModels/exportview.ts
index 0852120..455ab6e 100644
--- a/ts/ExportReport/ViewModels/exportview.ts
+++ b/ts/ExportReport/ViewModels/exportview.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 /// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.ExportReport.ViewModels {
diff --git a/ts/ExportReport/ViewModels/page.ts b/ts/ExportReport/ViewModels/page.ts
index 083f5bf..5d22fe6 100644
--- a/ts/ExportReport/ViewModels/page.ts
+++ b/ts/ExportReport/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/pagebase.ts" />
+/// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.ExportReport.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/IFrameBase/ViewModels/page.ts b/ts/IFrameBase/ViewModels/page.ts
index 4dde1ad..c58ea64 100644
--- a/ts/IFrameBase/ViewModels/page.ts
+++ b/ts/IFrameBase/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/pagebase.ts" />
+/// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.FrameBase.ViewModels {
     import BEs = Brightmetrics.Enums;
diff --git a/ts/Insights/Enums/route.ts b/ts/Insights/Enums/route.ts
index 16e6dab..6864944 100644
--- a/ts/Insights/Enums/route.ts
+++ b/ts/Insights/Enums/route.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Enums {
+namespace Brightmetrics.Insights.Enums {
     export enum Route {
         StaffForecasting = "forecasting",
         Scorecards = "scorecards",
diff --git a/ts/Insights/Interfaces/iexportableforecastschedule.ts b/ts/Insights/Interfaces/iexportableforecastschedule.ts
index 11733ef..4f5f153 100644
--- a/ts/Insights/Interfaces/iexportableforecastschedule.ts
+++ b/ts/Insights/Interfaces/iexportableforecastschedule.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Interfaces {
+namespace Brightmetrics.Insights.Interfaces {
     export interface IExportableForecastSchedule {
         companyId: number;
         destinations: string;
diff --git a/ts/Insights/Interfaces/igroupsbydsgid.ts b/ts/Insights/Interfaces/igroupsbydsgid.ts
index 2fcdb18..4b0d72f 100644
--- a/ts/Insights/Interfaces/igroupsbydsgid.ts
+++ b/ts/Insights/Interfaces/igroupsbydsgid.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Interfaces {
+namespace Brightmetrics.Insights.Interfaces {
     /** Key=DSGID, Value=Array of group names. */
     // tslint:disable-next-line
     export interface IGroupsByDSGID<T = KnockoutObservableArray<string>> extends JQuery.PlainObject<T> { }
diff --git a/ts/Insights/Scorecards/Classes/cellobservablemap.ts b/ts/Insights/Scorecards/Classes/cellobservablemap.ts
index 26dd0bf..a87c42b 100644
--- a/ts/Insights/Scorecards/Classes/cellobservablemap.ts
+++ b/ts/Insights/Scorecards/Classes/cellobservablemap.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Classes {
+namespace Brightmetrics.Insights.Scorecards.Classes {
     /**
      * Keeps a map of key -> observable (representing a cell's value).
      *
diff --git a/ts/Insights/Scorecards/Classes/formattinghelper.ts b/ts/Insights/Scorecards/Classes/formattinghelper.ts
index cf83d89..25135c3 100644
--- a/ts/Insights/Scorecards/Classes/formattinghelper.ts
+++ b/ts/Insights/Scorecards/Classes/formattinghelper.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Classes {
+namespace Brightmetrics.Insights.Scorecards.Classes {
     interface ICellHelper {
         label: string;
         tooltip: string;
diff --git a/ts/Insights/Scorecards/Enums/bestinclasstype.ts b/ts/Insights/Scorecards/Enums/bestinclasstype.ts
index 50480e3..f710043 100644
--- a/ts/Insights/Scorecards/Enums/bestinclasstype.ts
+++ b/ts/Insights/Scorecards/Enums/bestinclasstype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Enums {
+namespace Brightmetrics.Insights.Scorecards.Enums {
     export enum BestInClassType {
         Highest = "Highest",
         Lowest = "Lowest",
diff --git a/ts/Insights/Scorecards/Enums/targettype.ts b/ts/Insights/Scorecards/Enums/targettype.ts
index 9f36a01..2e03541 100644
--- a/ts/Insights/Scorecards/Enums/targettype.ts
+++ b/ts/Insights/Scorecards/Enums/targettype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Enums {
+namespace Brightmetrics.Insights.Scorecards.Enums {
     export enum TargetType {
         Average = 0,
         Custom = 1,
diff --git a/ts/Insights/Scorecards/Enums/thresholdrelativeto.ts b/ts/Insights/Scorecards/Enums/thresholdrelativeto.ts
index 3772475..f0b4757 100644
--- a/ts/Insights/Scorecards/Enums/thresholdrelativeto.ts
+++ b/ts/Insights/Scorecards/Enums/thresholdrelativeto.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Enums {
+namespace Brightmetrics.Insights.Scorecards.Enums {
     export enum ThresholdRelativeTo {
         ColumnMax = "max",
         ColumnMedian = "median",
diff --git a/ts/Insights/Scorecards/Enums/thresholdstyle.ts b/ts/Insights/Scorecards/Enums/thresholdstyle.ts
index 717fc28..f050f38 100644
--- a/ts/Insights/Scorecards/Enums/thresholdstyle.ts
+++ b/ts/Insights/Scorecards/Enums/thresholdstyle.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Enums {
+namespace Brightmetrics.Insights.Scorecards.Enums {
     export enum ThresholdStyle {
         Bar = "bar",
         FillGradient = "fill-gradient",
diff --git a/ts/Insights/Scorecards/Enums/totaltype.ts b/ts/Insights/Scorecards/Enums/totaltype.ts
index 271f62c..7dac0b9 100644
--- a/ts/Insights/Scorecards/Enums/totaltype.ts
+++ b/ts/Insights/Scorecards/Enums/totaltype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Enums {
+namespace Brightmetrics.Insights.Scorecards.Enums {
     export enum TotalType {
         Total = "Total",
         Average = "Average",
diff --git a/ts/Insights/Scorecards/Interfaces/icolumn.ts b/ts/Insights/Scorecards/Interfaces/icolumn.ts
index 6d43d7b..e8d774b 100644
--- a/ts/Insights/Scorecards/Interfaces/icolumn.ts
+++ b/ts/Insights/Scorecards/Interfaces/icolumn.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IColumn extends IColumnBase {
         data?: IColumnData & IDSIRefs;
     }
diff --git a/ts/Insights/Scorecards/Interfaces/icolumnbase.ts b/ts/Insights/Scorecards/Interfaces/icolumnbase.ts
index f6c5dd8..df1b3a3 100644
--- a/ts/Insights/Scorecards/Interfaces/icolumnbase.ts
+++ b/ts/Insights/Scorecards/Interfaces/icolumnbase.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IColumnBase {
         id: string;
         name: string;
diff --git a/ts/Insights/Scorecards/Interfaces/icolumncalculation.ts b/ts/Insights/Scorecards/Interfaces/icolumncalculation.ts
index 6a92523..93d6e1e 100644
--- a/ts/Insights/Scorecards/Interfaces/icolumncalculation.ts
+++ b/ts/Insights/Scorecards/Interfaces/icolumncalculation.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IColumnCalculation {
         expression: string;
         scale: Brightmetrics.Enums.ValueScale;
diff --git a/ts/Insights/Scorecards/Interfaces/icolumndata.ts b/ts/Insights/Scorecards/Interfaces/icolumndata.ts
index ae6ee2b..9389ebc 100644
--- a/ts/Insights/Scorecards/Interfaces/icolumndata.ts
+++ b/ts/Insights/Scorecards/Interfaces/icolumndata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IColumnData {
         dimensionIndex: number;
         factIndex: number;
diff --git a/ts/Insights/Scorecards/Interfaces/icolumntemplate.ts b/ts/Insights/Scorecards/Interfaces/icolumntemplate.ts
index 6aa661c..9684ac6 100644
--- a/ts/Insights/Scorecards/Interfaces/icolumntemplate.ts
+++ b/ts/Insights/Scorecards/Interfaces/icolumntemplate.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IColumnTemplate extends IColumnBase {
         data?: IColumnData & IDSTypeRef;
     }
diff --git a/ts/Insights/Scorecards/Interfaces/icustomvalue.ts b/ts/Insights/Scorecards/Interfaces/icustomvalue.ts
index 1edb5e8..a23a331 100644
--- a/ts/Insights/Scorecards/Interfaces/icustomvalue.ts
+++ b/ts/Insights/Scorecards/Interfaces/icustomvalue.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface ICustomValue {
         colId: string;
         id: string;
diff --git a/ts/Insights/Scorecards/Interfaces/idsrefs.ts b/ts/Insights/Scorecards/Interfaces/idsrefs.ts
index 69aabac..7e61803 100644
--- a/ts/Insights/Scorecards/Interfaces/idsrefs.ts
+++ b/ts/Insights/Scorecards/Interfaces/idsrefs.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IDSIRefs {
         dcgId?: number;
         dsiId: number;
diff --git a/ts/Insights/Scorecards/Interfaces/idstyperef.ts b/ts/Insights/Scorecards/Interfaces/idstyperef.ts
index 8a6c2e9..75f7532 100644
--- a/ts/Insights/Scorecards/Interfaces/idstyperef.ts
+++ b/ts/Insights/Scorecards/Interfaces/idstyperef.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IDSTypeRef {
         dataSourceType: number;
     }
diff --git a/ts/Insights/Scorecards/Interfaces/igroup.ts b/ts/Insights/Scorecards/Interfaces/igroup.ts
index fbde606..e3015d8 100644
--- a/ts/Insights/Scorecards/Interfaces/igroup.ts
+++ b/ts/Insights/Scorecards/Interfaces/igroup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IGroup<T> {
         name: string;
         tooltip?: string;
diff --git a/ts/Insights/Scorecards/Interfaces/ipresetdata.ts b/ts/Insights/Scorecards/Interfaces/ipresetdata.ts
index cb0f495..07e9183 100644
--- a/ts/Insights/Scorecards/Interfaces/ipresetdata.ts
+++ b/ts/Insights/Scorecards/Interfaces/ipresetdata.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IPresetData {
         defaultValue: number;
         userDefinedValues: Array<{ value: number; rowLabel: string; }>;
diff --git a/ts/Insights/Scorecards/Interfaces/iscorecard.ts b/ts/Insights/Scorecards/Interfaces/iscorecard.ts
index e6255f3..a62b6fe 100644
--- a/ts/Insights/Scorecards/Interfaces/iscorecard.ts
+++ b/ts/Insights/Scorecards/Interfaces/iscorecard.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IScorecard extends IScorecardBase, IDSIRefs {
         columns: Array<IColumn | IGroup<IColumn>>;
     }
diff --git a/ts/Insights/Scorecards/Interfaces/iscorecardbase.ts b/ts/Insights/Scorecards/Interfaces/iscorecardbase.ts
index fe69f93..3fadcde 100644
--- a/ts/Insights/Scorecards/Interfaces/iscorecardbase.ts
+++ b/ts/Insights/Scorecards/Interfaces/iscorecardbase.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IScorecardBase {
         id: string;
         customValueRows?: Array<IGroup<ICustomValue>>;
diff --git a/ts/Insights/Scorecards/Interfaces/iscorecardsaved.ts b/ts/Insights/Scorecards/Interfaces/iscorecardsaved.ts
index f436f85..8d59c2f 100644
--- a/ts/Insights/Scorecards/Interfaces/iscorecardsaved.ts
+++ b/ts/Insights/Scorecards/Interfaces/iscorecardsaved.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IScorecardSaved {
         accessLevel: number;
         dcgId: number;
diff --git a/ts/Insights/Scorecards/Interfaces/iscorecardschedule.ts b/ts/Insights/Scorecards/Interfaces/iscorecardschedule.ts
index 0c77a1f..ff2f881 100644
--- a/ts/Insights/Scorecards/Interfaces/iscorecardschedule.ts
+++ b/ts/Insights/Scorecards/Interfaces/iscorecardschedule.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IScorecardSchedule {
         destinations: string;
         emailMessage: string;
diff --git a/ts/Insights/Scorecards/Interfaces/iscorecardtemplate.ts b/ts/Insights/Scorecards/Interfaces/iscorecardtemplate.ts
index 71e8bed..7387b80 100644
--- a/ts/Insights/Scorecards/Interfaces/iscorecardtemplate.ts
+++ b/ts/Insights/Scorecards/Interfaces/iscorecardtemplate.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IScorecardTemplate extends IScorecardBase, IDSTypeRef {
         columns: Array<IColumnTemplate | IGroup<IColumnTemplate>>;
     }
diff --git a/ts/Insights/Scorecards/Interfaces/ithreshold.ts b/ts/Insights/Scorecards/Interfaces/ithreshold.ts
index 7cbe397..e356c0c 100644
--- a/ts/Insights/Scorecards/Interfaces/ithreshold.ts
+++ b/ts/Insights/Scorecards/Interfaces/ithreshold.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IThreshold extends Partial<IThresholdColors> {
         relativeTo: Enums.ThresholdRelativeTo;
         style: Enums.ThresholdStyle;
diff --git a/ts/Insights/Scorecards/Interfaces/ithresholdcolors.ts b/ts/Insights/Scorecards/Interfaces/ithresholdcolors.ts
index 335a360..61b190f 100644
--- a/ts/Insights/Scorecards/Interfaces/ithresholdcolors.ts
+++ b/ts/Insights/Scorecards/Interfaces/ithresholdcolors.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.Interfaces {
+namespace Brightmetrics.Insights.Scorecards.Interfaces {
     export interface IThresholdColors {
         highColor: string;
         lowColor: string;
diff --git a/ts/Insights/Scorecards/ViewModels/allscorecards.ts b/ts/Insights/Scorecards/ViewModels/allscorecards.ts
index 094ceba..9182d4a 100644
--- a/ts/Insights/Scorecards/ViewModels/allscorecards.ts
+++ b/ts/Insights/Scorecards/ViewModels/allscorecards.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../Reports/Enums/reportlayouttype.ts" />
+/// <reference path="../../../Reports/Enums/reportlayouttype.ts" />
 
 namespace Brightmetrics.Insights.Scorecards.ViewModels {
     import BRDTOs = Brightmetrics.Reports.Interfaces.DTOs;
diff --git a/ts/Insights/Scorecards/ViewModels/bestinclasscell.ts b/ts/Insights/Scorecards/ViewModels/bestinclasscell.ts
index ce6fa3e..bdd438a 100644
--- a/ts/Insights/Scorecards/ViewModels/bestinclasscell.ts
+++ b/ts/Insights/Scorecards/ViewModels/bestinclasscell.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.ViewModels {
+namespace Brightmetrics.Insights.Scorecards.ViewModels {
 
     const bicTypeToIconCodeMap = {
         [Enums.BestInClassType.ClosestToTarget]: "adjust",
diff --git a/ts/Insights/Scorecards/ViewModels/cell.ts b/ts/Insights/Scorecards/ViewModels/cell.ts
index 8c9eaef..caa7284 100644
--- a/ts/Insights/Scorecards/ViewModels/cell.ts
+++ b/ts/Insights/Scorecards/ViewModels/cell.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.ViewModels {
+namespace Brightmetrics.Insights.Scorecards.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BEs = Brightmetrics.Enums;
     import BRIs = Brightmetrics.Reports.Interfaces;
diff --git a/ts/Insights/Scorecards/ViewModels/createscorecard.ts b/ts/Insights/Scorecards/ViewModels/createscorecard.ts
index 30b46b3..25ef389 100644
--- a/ts/Insights/Scorecards/ViewModels/createscorecard.ts
+++ b/ts/Insights/Scorecards/ViewModels/createscorecard.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../ViewModels/dialog.ts" />
+/// <reference path="../../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Insights.Scorecards.ViewModels {
     import BRDTOs = Brightmetrics.Reports.Interfaces.DTOs;
diff --git a/ts/Insights/Scorecards/ViewModels/individualemaildialog.ts b/ts/Insights/Scorecards/ViewModels/individualemaildialog.ts
index 2ee3613..5c1519e 100644
--- a/ts/Insights/Scorecards/ViewModels/individualemaildialog.ts
+++ b/ts/Insights/Scorecards/ViewModels/individualemaildialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.ViewModels {
+namespace Brightmetrics.Insights.Scorecards.ViewModels {
     import BIs = Brightmetrics.Interfaces;
 
     interface IIndividualEmailDialogProps {
diff --git a/ts/Insights/Scorecards/ViewModels/row.ts b/ts/Insights/Scorecards/ViewModels/row.ts
index 3f58da4..634965c 100644
--- a/ts/Insights/Scorecards/ViewModels/row.ts
+++ b/ts/Insights/Scorecards/ViewModels/row.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.ViewModels {
+namespace Brightmetrics.Insights.Scorecards.ViewModels {
     interface IRowProps {
         categoryDimensionValue: string;
         columns: Interfaces.IColumn[];
diff --git a/ts/Insights/Scorecards/ViewModels/saveasdialog.ts b/ts/Insights/Scorecards/ViewModels/saveasdialog.ts
index 0d7b1c2..3977093 100644
--- a/ts/Insights/Scorecards/ViewModels/saveasdialog.ts
+++ b/ts/Insights/Scorecards/ViewModels/saveasdialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.ViewModels {
+namespace Brightmetrics.Insights.Scorecards.ViewModels {
     interface ISaveAsDialogProps {
         scorecard: Interfaces.IScorecard;
         doSaveAs: (sc: Interfaces.IScorecard) => Promise<unknown>;
diff --git a/ts/Insights/Scorecards/ViewModels/scorecardtopbar.ts b/ts/Insights/Scorecards/ViewModels/scorecardtopbar.ts
index ed64974..1884bb2 100644
--- a/ts/Insights/Scorecards/ViewModels/scorecardtopbar.ts
+++ b/ts/Insights/Scorecards/ViewModels/scorecardtopbar.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.ViewModels {
+namespace Brightmetrics.Insights.Scorecards.ViewModels {
     import BVs = Brightmetrics.ViewModels;
     import BIs = Brightmetrics.Interfaces;
 
diff --git a/ts/Insights/Scorecards/ViewModels/scorecardview.ts b/ts/Insights/Scorecards/ViewModels/scorecardview.ts
index a68e8e2..1a64aa6 100644
--- a/ts/Insights/Scorecards/ViewModels/scorecardview.ts
+++ b/ts/Insights/Scorecards/ViewModels/scorecardview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../Reports/ViewModels/filterwidgets.ts" />
+/// <reference path="../../../Reports/ViewModels/filterwidgets.ts" />
 
 namespace Brightmetrics.Insights.Scorecards.ViewModels {
     import BRDTOs = Brightmetrics.Reports.Interfaces.DTOs;
diff --git a/ts/Insights/Scorecards/ViewModels/totalcell.ts b/ts/Insights/Scorecards/ViewModels/totalcell.ts
index 9347d7b..aa06e04 100644
--- a/ts/Insights/Scorecards/ViewModels/totalcell.ts
+++ b/ts/Insights/Scorecards/ViewModels/totalcell.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Insights.Scorecards.ViewModels {
+namespace Brightmetrics.Insights.Scorecards.ViewModels {
     interface ITotalCellProps {
         totalType: Enums.TotalType;
         columnId: string;
diff --git a/ts/Insights/ViewModels/innergroup.ts b/ts/Insights/ViewModels/innergroup.ts
index 5d67102..ba59686 100644
--- a/ts/Insights/ViewModels/innergroup.ts
+++ b/ts/Insights/ViewModels/innergroup.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.Insights.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Insights/ViewModels/outergroup.ts b/ts/Insights/ViewModels/outergroup.ts
index eb313cf..21c24b6 100644
--- a/ts/Insights/ViewModels/outergroup.ts
+++ b/ts/Insights/ViewModels/outergroup.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.Insights.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Insights/ViewModels/page.ts b/ts/Insights/ViewModels/page.ts
index a1917c7..001a111 100644
--- a/ts/Insights/ViewModels/page.ts
+++ b/ts/Insights/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/pagebase.ts" />
+/// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.Insights.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Insights/ViewModels/schedule.ts b/ts/Insights/ViewModels/schedule.ts
index 856ba0a..97c29a9 100644
--- a/ts/Insights/ViewModels/schedule.ts
+++ b/ts/Insights/ViewModels/schedule.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.Insights.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Insights/ViewModels/scheduledialog.ts b/ts/Insights/ViewModels/scheduledialog.ts
index 6b93c9a..fdbdde0 100644
--- a/ts/Insights/ViewModels/scheduledialog.ts
+++ b/ts/Insights/ViewModels/scheduledialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.Insights.ViewModels {
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Insights/ViewModels/sendnowdialog.ts b/ts/Insights/ViewModels/sendnowdialog.ts
index 0eb4902..96827a2 100644
--- a/ts/Insights/ViewModels/sendnowdialog.ts
+++ b/ts/Insights/ViewModels/sendnowdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/dialog.ts" />
+/// <reference path="../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.Insights.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Insights/ViewModels/staffforecastingview.ts b/ts/Insights/ViewModels/staffforecastingview.ts
index f864682..5f3ee41 100644
--- a/ts/Insights/ViewModels/staffforecastingview.ts
+++ b/ts/Insights/ViewModels/staffforecastingview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.Insights.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/Interfaces/iaccountactionsdialogopts.ts b/ts/Interfaces/iaccountactionsdialogopts.ts
index 7c278fd..3072a3f 100644
--- a/ts/Interfaces/iaccountactionsdialogopts.ts
+++ b/ts/Interfaces/iaccountactionsdialogopts.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IAccountActionsDialogOpts {
         firstName: string;
         lastName: string;
diff --git a/ts/Interfaces/iagent.ts b/ts/Interfaces/iagent.ts
index 42767ec..ed04b0c 100644
--- a/ts/Interfaces/iagent.ts
+++ b/ts/Interfaces/iagent.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IAgent {
         AgentGuid: string;
         AgentVersion: string;
diff --git a/ts/Interfaces/iajaxoptions.ts b/ts/Interfaces/iajaxoptions.ts
index d551a47..513ed8c 100644
--- a/ts/Interfaces/iajaxoptions.ts
+++ b/ts/Interfaces/iajaxoptions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IAjaxOptions {
         cacheFor?: number;
         credentials?: string;
diff --git a/ts/Interfaces/iappinfo.ts b/ts/Interfaces/iappinfo.ts
index 965ba86..c7b9f2e 100644
--- a/ts/Interfaces/iappinfo.ts
+++ b/ts/Interfaces/iappinfo.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IAppInfo {
         hasMessaging: boolean;
         logoIconURL: string;
diff --git a/ts/Interfaces/iaudioplayerbindingoptions.ts b/ts/Interfaces/iaudioplayerbindingoptions.ts
index 0b699a9..fd3e961 100644
--- a/ts/Interfaces/iaudioplayerbindingoptions.ts
+++ b/ts/Interfaces/iaudioplayerbindingoptions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IAudioPlayerBindingOptions {
         maxDuration: KnockoutObservable<number>;
         currentTime: KnockoutComputed<number>;
diff --git a/ts/Interfaces/ibasicdialog2props.ts b/ts/Interfaces/ibasicdialog2props.ts
index 5423b6f..b8ce24e 100644
--- a/ts/Interfaces/ibasicdialog2props.ts
+++ b/ts/Interfaces/ibasicdialog2props.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBasicDialog2Props {
         title: string;
         content: string;
diff --git a/ts/Interfaces/ibrightcompany.ts b/ts/Interfaces/ibrightcompany.ts
index acf4995..34d838c 100644
--- a/ts/Interfaces/ibrightcompany.ts
+++ b/ts/Interfaces/ibrightcompany.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="ibrightgroup.ts" />
 
 namespace Brightmetrics.Interfaces {
diff --git a/ts/Interfaces/ibrightcompanyfeature.ts b/ts/Interfaces/ibrightcompanyfeature.ts
index 9f5e812..d9eeb06 100644
--- a/ts/Interfaces/ibrightcompanyfeature.ts
+++ b/ts/Interfaces/ibrightcompanyfeature.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBrightCompanyFeature {
         Feature: IBrightFeature;
         CreatedDate: Date;
diff --git a/ts/Interfaces/ibrightfeature.ts b/ts/Interfaces/ibrightfeature.ts
index 404f699..97c5dc2 100644
--- a/ts/Interfaces/ibrightfeature.ts
+++ b/ts/Interfaces/ibrightfeature.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBrightFeature {
         Id: string;
         Name: string;
diff --git a/ts/Interfaces/ibrightgroup.ts b/ts/Interfaces/ibrightgroup.ts
index c9fceca..4cca54a 100644
--- a/ts/Interfaces/ibrightgroup.ts
+++ b/ts/Interfaces/ibrightgroup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBrightGroup {
         CaputedNotifications: boolean;
         CobrandingEnabled: boolean;
diff --git a/ts/Interfaces/ibrightpermission.ts b/ts/Interfaces/ibrightpermission.ts
index d06d5c1..a203f7e 100644
--- a/ts/Interfaces/ibrightpermission.ts
+++ b/ts/Interfaces/ibrightpermission.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBrightPermission {
         PermissionId: number;
         PermissionKey: Enums.BrightPermissionKey;
diff --git a/ts/Interfaces/ibrightrole.ts b/ts/Interfaces/ibrightrole.ts
index aaa13b9..dfffe22 100644
--- a/ts/Interfaces/ibrightrole.ts
+++ b/ts/Interfaces/ibrightrole.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBrightRole {
         CreatedDate: string;
         CreatorUser: string;
diff --git a/ts/Interfaces/ibrightuser.ts b/ts/Interfaces/ibrightuser.ts
index b5af3fc..bdc252d 100644
--- a/ts/Interfaces/ibrightuser.ts
+++ b/ts/Interfaces/ibrightuser.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBrightUser {
         CompanySpecific: any;
         EmailAddress: string;
diff --git a/ts/Interfaces/ibrightuserfeature.ts b/ts/Interfaces/ibrightuserfeature.ts
index e7f00ca..a0c1610 100644
--- a/ts/Interfaces/ibrightuserfeature.ts
+++ b/ts/Interfaces/ibrightuserfeature.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IBrightUserFeature {
         Feature: IBrightFeature;
         CreatedDate: Date;
diff --git a/ts/Interfaces/ibuttonwithloading.ts b/ts/Interfaces/ibuttonwithloading.ts
index 95883fc..238f137 100644
--- a/ts/Interfaces/ibuttonwithloading.ts
+++ b/ts/Interfaces/ibuttonwithloading.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IButtonWithLoading {
         baseCss: string;
         isLoading: boolean | KnockoutObservable<boolean>;
diff --git a/ts/Interfaces/icalculateddimension.ts b/ts/Interfaces/icalculateddimension.ts
index 06d0603..aa7504a 100644
--- a/ts/Interfaces/icalculateddimension.ts
+++ b/ts/Interfaces/icalculateddimension.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface ICalculatedDimension extends IField {
         Expression: string;
         AllowFilter: boolean;
diff --git a/ts/Interfaces/icalculatedfield.ts b/ts/Interfaces/icalculatedfield.ts
index 7eeb20e..683acfd 100644
--- a/ts/Interfaces/icalculatedfield.ts
+++ b/ts/Interfaces/icalculatedfield.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface ICalculatedField extends IField {
diff --git a/ts/Interfaces/icompanyandaccesslevel.ts b/ts/Interfaces/icompanyandaccesslevel.ts
index e7aa7ce..9a54616 100644
--- a/ts/Interfaces/icompanyandaccesslevel.ts
+++ b/ts/Interfaces/icompanyandaccesslevel.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="ibrightcompany.ts" />
 /// <reference path="icompanyuser.ts" />
 
diff --git a/ts/Interfaces/icompanynotice.ts b/ts/Interfaces/icompanynotice.ts
index 879da0b..5bc2c2d 100644
--- a/ts/Interfaces/icompanynotice.ts
+++ b/ts/Interfaces/icompanynotice.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="inotice.ts" />
 
 namespace Brightmetrics.Interfaces {
diff --git a/ts/Interfaces/icompanyuser.ts b/ts/Interfaces/icompanyuser.ts
index 5abf3fa..89d16b3 100644
--- a/ts/Interfaces/icompanyuser.ts
+++ b/ts/Interfaces/icompanyuser.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface ICompanyUser {
         AccessLevel: string;
         ChangePending: boolean;
diff --git a/ts/Interfaces/icustomcalculatedfield.ts b/ts/Interfaces/icustomcalculatedfield.ts
index a706a4d..f6e00d9 100644
--- a/ts/Interfaces/icustomcalculatedfield.ts
+++ b/ts/Interfaces/icustomcalculatedfield.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface ICustomCalculatedField extends IField {
diff --git a/ts/Interfaces/icustomdetaildimension.ts b/ts/Interfaces/icustomdetaildimension.ts
index 875793b..23cdf65 100644
--- a/ts/Interfaces/icustomdetaildimension.ts
+++ b/ts/Interfaces/icustomdetaildimension.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface ICustomDetailDimension extends IField {
         /**
          * An string identifier, written like '<Data Source ID>|<Dimension Index>'
diff --git a/ts/Interfaces/idashboardschedule.ts b/ts/Interfaces/idashboardschedule.ts
index f17862a..545e6b0 100644
--- a/ts/Interfaces/idashboardschedule.ts
+++ b/ts/Interfaces/idashboardschedule.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDashboardSchedule {
diff --git a/ts/Interfaces/idataconnection.ts b/ts/Interfaces/idataconnection.ts
index 72ba598..19038c2 100644
--- a/ts/Interfaces/idataconnection.ts
+++ b/ts/Interfaces/idataconnection.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataConnection {
diff --git a/ts/Interfaces/idatamapping.ts b/ts/Interfaces/idatamapping.ts
index f916166..34f7853 100644
--- a/ts/Interfaces/idatamapping.ts
+++ b/ts/Interfaces/idatamapping.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataMapping extends IField {
diff --git a/ts/Interfaces/idatasource.ts b/ts/Interfaces/idatasource.ts
index 494322a..274a485 100644
--- a/ts/Interfaces/idatasource.ts
+++ b/ts/Interfaces/idatasource.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataSource {
diff --git a/ts/Interfaces/idatasourcegroup.ts b/ts/Interfaces/idatasourcegroup.ts
index 926f8e5..d02e507 100644
--- a/ts/Interfaces/idatasourcegroup.ts
+++ b/ts/Interfaces/idatasourcegroup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IDataSourceGroupBase {
         Created: string | null;
         DependentDataConnectionGroup: number | null;
diff --git a/ts/Interfaces/idatasourcegrouptype.ts b/ts/Interfaces/idatasourcegrouptype.ts
index 7cff99e..d6944c0 100644
--- a/ts/Interfaces/idatasourcegrouptype.ts
+++ b/ts/Interfaces/idatasourcegrouptype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataSourceGroupType {
diff --git a/ts/Interfaces/idatasourceinstance.ts b/ts/Interfaces/idatasourceinstance.ts
index 23f56ca..90c8e22 100644
--- a/ts/Interfaces/idatasourceinstance.ts
+++ b/ts/Interfaces/idatasourceinstance.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataSourceInstance {
diff --git a/ts/Interfaces/idatatooltip.ts b/ts/Interfaces/idatatooltip.ts
index 764b339..70540cc 100644
--- a/ts/Interfaces/idatatooltip.ts
+++ b/ts/Interfaces/idatatooltip.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataTooltip {
diff --git a/ts/Interfaces/idataview.ts b/ts/Interfaces/idataview.ts
index 86277f1..7b07f79 100644
--- a/ts/Interfaces/idataview.ts
+++ b/ts/Interfaces/idataview.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataView {
diff --git a/ts/Interfaces/idataviewtemplate.ts b/ts/Interfaces/idataviewtemplate.ts
index 4b50201..39ae385 100644
--- a/ts/Interfaces/idataviewtemplate.ts
+++ b/ts/Interfaces/idataviewtemplate.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IDataViewTemplate {
diff --git a/ts/Interfaces/idatepickeroptions.ts b/ts/Interfaces/idatepickeroptions.ts
index 1972b25..3e020d1 100644
--- a/ts/Interfaces/idatepickeroptions.ts
+++ b/ts/Interfaces/idatepickeroptions.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="idialogviewmodeloptions.ts" />
 
 namespace Brightmetrics.Interfaces {
diff --git a/ts/Interfaces/ideleteconfirmationdialogopts.ts b/ts/Interfaces/ideleteconfirmationdialogopts.ts
index c151cdf..24d8f66 100644
--- a/ts/Interfaces/ideleteconfirmationdialogopts.ts
+++ b/ts/Interfaces/ideleteconfirmationdialogopts.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IDeleteConfirmationDialogOpts extends IDialogViewModelOptions {
         companyId?: number;
         context: "dashboard" | "report" | "scorecard";
diff --git a/ts/Interfaces/idetaildimension.ts b/ts/Interfaces/idetaildimension.ts
index 1ec68b3..591b578 100644
--- a/ts/Interfaces/idetaildimension.ts
+++ b/ts/Interfaces/idetaildimension.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IDetailDimension extends IField {
         DataType: Enums.DataType;
         ColumnDefinition: string;
diff --git a/ts/Interfaces/idialogviewmodeloptions.ts b/ts/Interfaces/idialogviewmodeloptions.ts
index fbaebdb..da9f885 100644
--- a/ts/Interfaces/idialogviewmodeloptions.ts
+++ b/ts/Interfaces/idialogviewmodeloptions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IDialogViewModelOptions {
         appendTo?: string;
         autoOpen?: boolean;
diff --git a/ts/Interfaces/idimension.ts b/ts/Interfaces/idimension.ts
index 5543441..8018848 100644
--- a/ts/Interfaces/idimension.ts
+++ b/ts/Interfaces/idimension.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IDimension extends IField {
         DataType: Enums.DataType;
         ColumnDefinition: string;
diff --git a/ts/Interfaces/idimensionvaluesresponse.ts b/ts/Interfaces/idimensionvaluesresponse.ts
index e4d8a89..3588898 100644
--- a/ts/Interfaces/idimensionvaluesresponse.ts
+++ b/ts/Interfaces/idimensionvaluesresponse.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IDimensionValuesResponse {
         success: boolean;
         dimensionValues?: string[];
diff --git a/ts/Interfaces/idisposable.ts b/ts/Interfaces/idisposable.ts
index b5f7022..4040dff 100644
--- a/ts/Interfaces/idisposable.ts
+++ b/ts/Interfaces/idisposable.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IDisposable extends KnockoutSubscription {
         dispose(): void;
     }
diff --git a/ts/Interfaces/iemailreportprops.ts b/ts/Interfaces/iemailreportprops.ts
index 3784de5..1261877 100644
--- a/ts/Interfaces/iemailreportprops.ts
+++ b/ts/Interfaces/iemailreportprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     /**
      * Properties required for sending an exported report via email.
      */
diff --git a/ts/Interfaces/iexportdialogoptions.ts b/ts/Interfaces/iexportdialogoptions.ts
index 218b2bf..f59230e 100644
--- a/ts/Interfaces/iexportdialogoptions.ts
+++ b/ts/Interfaces/iexportdialogoptions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IExportDialogOptions {
         filename: string;
         exportType: string;
diff --git a/ts/Interfaces/ifact.ts b/ts/Interfaces/ifact.ts
index a1b2e7e..afd7b28 100644
--- a/ts/Interfaces/ifact.ts
+++ b/ts/Interfaces/ifact.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IFact extends IField {
diff --git a/ts/Interfaces/ifield.ts b/ts/Interfaces/ifield.ts
index bd577f3..15c3247 100644
--- a/ts/Interfaces/ifield.ts
+++ b/ts/Interfaces/ifield.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IField {
diff --git a/ts/Interfaces/ifieldproxy.ts b/ts/Interfaces/ifieldproxy.ts
index dac9098..0a288e9 100644
--- a/ts/Interfaces/ifieldproxy.ts
+++ b/ts/Interfaces/ifieldproxy.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IFieldProxy {
diff --git a/ts/Interfaces/iforecastschedule.ts b/ts/Interfaces/iforecastschedule.ts
index d9737cb..e7cf441 100644
--- a/ts/Interfaces/iforecastschedule.ts
+++ b/ts/Interfaces/iforecastschedule.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     interface IForecastScheduleOption {
         dataConnectionGroupId: number;
         deviationTime: number;
diff --git a/ts/Interfaces/ihelparticle.ts b/ts/Interfaces/ihelparticle.ts
index bcbeaf7..ca5092c 100644
--- a/ts/Interfaces/ihelparticle.ts
+++ b/ts/Interfaces/ihelparticle.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     /**
      * @see {@link https://developer.zendesk.com/rest_api/docs/help_center/articles.html}
      */
diff --git a/ts/Interfaces/ihelpvideo.ts b/ts/Interfaces/ihelpvideo.ts
index 80e8f69..4bd3b5e 100644
--- a/ts/Interfaces/ihelpvideo.ts
+++ b/ts/Interfaces/ihelpvideo.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IHelpVideo {
         content: string;
         group: string;
diff --git a/ts/Interfaces/iknockoutinput.ts b/ts/Interfaces/iknockoutinput.ts
index d31746f..9763a92 100644
--- a/ts/Interfaces/iknockoutinput.ts
+++ b/ts/Interfaces/iknockoutinput.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IKnockoutInput<T> extends KnockoutObservable<T> {
         hasFocus: KnockoutObservable<boolean>;
         canShowError: KnockoutComputed<boolean>;
diff --git a/ts/Interfaces/iknockoutvalidatable.ts b/ts/Interfaces/iknockoutvalidatable.ts
index bdbeec0..7cc153e 100644
--- a/ts/Interfaces/iknockoutvalidatable.ts
+++ b/ts/Interfaces/iknockoutvalidatable.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IKnockoutValidatable<T> extends KnockoutObservable<T> {
         isValid: KnockoutComputed<boolean>;
     }
diff --git a/ts/Interfaces/ikocheckboxitem.ts b/ts/Interfaces/ikocheckboxitem.ts
index 5df300e..e754be4 100644
--- a/ts/Interfaces/ikocheckboxitem.ts
+++ b/ts/Interfaces/ikocheckboxitem.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     /**
      * Useful for simple lists of one-or-two-way bound checkboxes.
      */
diff --git a/ts/Interfaces/ikooption.ts b/ts/Interfaces/ikooption.ts
index 3e106a5..83e1ed6 100644
--- a/ts/Interfaces/ikooption.ts
+++ b/ts/Interfaces/ikooption.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     /**
      * Standard property names to use for the
      * `optionsText: 'label', optionsValue: 'value'` KO bindings.
diff --git a/ts/Interfaces/ikotemplatebinding.ts b/ts/Interfaces/ikotemplatebinding.ts
index 681d610..2c0386f 100644
--- a/ts/Interfaces/ikotemplatebinding.ts
+++ b/ts/Interfaces/ikotemplatebinding.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IKoTemplateBinding {
         name: string;
         data: any;
diff --git a/ts/Interfaces/imorevertitem.ts b/ts/Interfaces/imorevertitem.ts
index 274f0f7..bd0af89 100644
--- a/ts/Interfaces/imorevertitem.ts
+++ b/ts/Interfaces/imorevertitem.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 
 namespace Brightmetrics.Interfaces {
     // TODO: Rename this to `IMoreVertItem` (singular).
diff --git a/ts/Interfaces/imorevertopts.ts b/ts/Interfaces/imorevertopts.ts
index cf6b79a..9887842 100644
--- a/ts/Interfaces/imorevertopts.ts
+++ b/ts/Interfaces/imorevertopts.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 
 namespace Brightmetrics.Interfaces {
     export interface IMoreVertOpts {
diff --git a/ts/Interfaces/inotice.ts b/ts/Interfaces/inotice.ts
index b9ca85c..8c04a6d 100644
--- a/ts/Interfaces/inotice.ts
+++ b/ts/Interfaces/inotice.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface INotice {
         Id: any;
         Type?: string;
diff --git a/ts/Interfaces/ipagedefinition.ts b/ts/Interfaces/ipagedefinition.ts
index 35273d4..494d7ef 100644
--- a/ts/Interfaces/ipagedefinition.ts
+++ b/ts/Interfaces/ipagedefinition.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IPageDefinition {
         type: Enums.Page;
         text: string;
diff --git a/ts/Interfaces/ipartnercustomcalculatedfield.ts b/ts/Interfaces/ipartnercustomcalculatedfield.ts
index ad6b10e..c012d1f 100644
--- a/ts/Interfaces/ipartnercustomcalculatedfield.ts
+++ b/ts/Interfaces/ipartnercustomcalculatedfield.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IPartnerCustomCalculatedField extends IField {
diff --git a/ts/Interfaces/ipermissiondialog.ts b/ts/Interfaces/ipermissiondialog.ts
index b2cb0cf..78b03bd 100644
--- a/ts/Interfaces/ipermissiondialog.ts
+++ b/ts/Interfaces/ipermissiondialog.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IPermissionDialog extends IDialogViewModelOptions {
         context: "dashboard" | "report" | "scorecard";
         id: string;
diff --git a/ts/Interfaces/ipillprops.ts b/ts/Interfaces/ipillprops.ts
index 633d185..3926025 100644
--- a/ts/Interfaces/ipillprops.ts
+++ b/ts/Interfaces/ipillprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IPillProps<T = string | number> {
         label: string | KnockoutComputed<string>;
         value: T;
diff --git a/ts/Interfaces/iplainobject.ts b/ts/Interfaces/iplainobject.ts
index f1e4b7d..3a2af23 100644
--- a/ts/Interfaces/iplainobject.ts
+++ b/ts/Interfaces/iplainobject.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IPlainObject<T = any> {
         [name: string]: T;
     }
diff --git a/ts/Interfaces/irect.ts b/ts/Interfaces/irect.ts
index c3610bc..3f43a87 100644
--- a/ts/Interfaces/irect.ts
+++ b/ts/Interfaces/irect.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="irectdimensions.ts" />
+/// <reference path="irectdimensions.ts" />
 
 namespace Brightmetrics.Interfaces {
     export interface IRect extends JQuery.Coordinates, IRectDimensions { }
diff --git a/ts/Interfaces/irect3d.ts b/ts/Interfaces/irect3d.ts
index c966fea..b6163cf 100644
--- a/ts/Interfaces/irect3d.ts
+++ b/ts/Interfaces/irect3d.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="irect.ts" />
 
 namespace Brightmetrics.Interfaces {
diff --git a/ts/Interfaces/irectdimensions.ts b/ts/Interfaces/irectdimensions.ts
index 2f49f4e..a5bbee4 100644
--- a/ts/Interfaces/irectdimensions.ts
+++ b/ts/Interfaces/irectdimensions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IRectDimensions {
         width: number;
         height: number;
diff --git a/ts/Interfaces/ireportdetaildataresponse.ts b/ts/Interfaces/ireportdetaildataresponse.ts
index 2a7777c..00b8f48 100644
--- a/ts/Interfaces/ireportdetaildataresponse.ts
+++ b/ts/Interfaces/ireportdetaildataresponse.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IReportDetailDataResponse {
diff --git a/ts/Interfaces/ireportschedule.ts b/ts/Interfaces/ireportschedule.ts
index 125e79f..728a21e 100644
--- a/ts/Interfaces/ireportschedule.ts
+++ b/ts/Interfaces/ireportschedule.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IReportSchedule {
diff --git a/ts/Interfaces/ireportsummarydataresponse.ts b/ts/Interfaces/ireportsummarydataresponse.ts
index 40e7143..1adaddd 100644
--- a/ts/Interfaces/ireportsummarydataresponse.ts
+++ b/ts/Interfaces/ireportsummarydataresponse.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface IReportSummaryData {
diff --git a/ts/Interfaces/ischedule.ts b/ts/Interfaces/ischedule.ts
index 7c9272b..10f918f 100644
--- a/ts/Interfaces/ischedule.ts
+++ b/ts/Interfaces/ischedule.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface ISchedule {
diff --git a/ts/Interfaces/isearchresulttag.ts b/ts/Interfaces/isearchresulttag.ts
index 123de12..78cd439 100644
--- a/ts/Interfaces/isearchresulttag.ts
+++ b/ts/Interfaces/isearchresulttag.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface ISearchResultTag {
         Label: string;
         Color: string;
diff --git a/ts/Interfaces/isliderbindingoptions.ts b/ts/Interfaces/isliderbindingoptions.ts
index faa3485..c07c472 100644
--- a/ts/Interfaces/isliderbindingoptions.ts
+++ b/ts/Interfaces/isliderbindingoptions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface ISliderBindingOptions {
         disabled?: KnockoutComputed<boolean>;
         steps: KnockoutComputed<number>;
diff --git a/ts/Interfaces/isteppedsliderbindingoptions.ts b/ts/Interfaces/isteppedsliderbindingoptions.ts
index d5b0195..f8cda87 100644
--- a/ts/Interfaces/isteppedsliderbindingoptions.ts
+++ b/ts/Interfaces/isteppedsliderbindingoptions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface ISteppedSliderBindingOptions {
         disabled: KnockoutComputed<boolean>;
         steps: KnockoutComputed<number>;
diff --git a/ts/Interfaces/isystemreviewschedule.ts b/ts/Interfaces/isystemreviewschedule.ts
index 1d68493..eb7f11d 100644
--- a/ts/Interfaces/isystemreviewschedule.ts
+++ b/ts/Interfaces/isystemreviewschedule.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface ISystemReviewSchedule {
diff --git a/ts/Interfaces/itabtemplate.ts b/ts/Interfaces/itabtemplate.ts
index aa748d6..9649496 100644
--- a/ts/Interfaces/itabtemplate.ts
+++ b/ts/Interfaces/itabtemplate.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Interfaces {
     export interface ITabTemplate {
diff --git a/ts/Interfaces/itooltipbindingoptions.ts b/ts/Interfaces/itooltipbindingoptions.ts
index 3ce6bf8..1d69c85 100644
--- a/ts/Interfaces/itooltipbindingoptions.ts
+++ b/ts/Interfaces/itooltipbindingoptions.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface ITooltipBindingOptions {
         delay?: boolean | number;
         direction?: Brightmetrics.ViewModels.Tooltip.Direction | "n" | "e" | "s" | "w";
diff --git a/ts/Interfaces/iuri.ts b/ts/Interfaces/iuri.ts
index 0fa3eaf..4916536 100644
--- a/ts/Interfaces/iuri.ts
+++ b/ts/Interfaces/iuri.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="iplainobject.ts" />
 
 namespace Brightmetrics.Interfaces {
diff --git a/ts/Interfaces/iuserdashboard.ts b/ts/Interfaces/iuserdashboard.ts
index 13a3317..a8170fe 100644
--- a/ts/Interfaces/iuserdashboard.ts
+++ b/ts/Interfaces/iuserdashboard.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IUserDashboard {
         PermissionLevel: number;
         TabOrder: number;
diff --git a/ts/Interfaces/iusermessage.ts b/ts/Interfaces/iusermessage.ts
index 479b77a..ba4b4db 100644
--- a/ts/Interfaces/iusermessage.ts
+++ b/ts/Interfaces/iusermessage.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="inotice.ts" />
 
 namespace Brightmetrics.Interfaces {
diff --git a/ts/Interfaces/iusernotificationopts.ts b/ts/Interfaces/iusernotificationopts.ts
index b330806..f5dc151 100644
--- a/ts/Interfaces/iusernotificationopts.ts
+++ b/ts/Interfaces/iusernotificationopts.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     import bmvm = Brightmetrics.ViewModels;
     export interface IUserNotificationOpts {
         parent: bmvm.UserNotificationsDialogVM;
diff --git a/ts/Interfaces/iusernotificationsdialogopts.ts b/ts/Interfaces/iusernotificationsdialogopts.ts
index 61efdf9..c502010 100644
--- a/ts/Interfaces/iusernotificationsdialogopts.ts
+++ b/ts/Interfaces/iusernotificationsdialogopts.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     import bmvm = Brightmetrics.ViewModels;
     export interface IUserNotificationsDialogOpts {
         notifications: bmvm.UserNotificationVM[];
diff --git a/ts/Interfaces/iuserpermission.ts b/ts/Interfaces/iuserpermission.ts
index 455de5a..1a71673 100644
--- a/ts/Interfaces/iuserpermission.ts
+++ b/ts/Interfaces/iuserpermission.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IUserPermission {
         id: string | number;
         name: string;
diff --git a/ts/Interfaces/iuserreport.ts b/ts/Interfaces/iuserreport.ts
index 70d173e..41fb00e 100644
--- a/ts/Interfaces/iuserreport.ts
+++ b/ts/Interfaces/iuserreport.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Interfaces {
+namespace Brightmetrics.Interfaces {
     export interface IUserReport {
         accessLevel: number;
         emailAddress: string;
diff --git a/ts/LiteAnalytics/Interfaces/iliteupgradedialogprops.ts b/ts/LiteAnalytics/Interfaces/iliteupgradedialogprops.ts
index 942f5ae..ad544fb 100644
--- a/ts/LiteAnalytics/Interfaces/iliteupgradedialogprops.ts
+++ b/ts/LiteAnalytics/Interfaces/iliteupgradedialogprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.LiteAnalytics.Interfaces {
+namespace Brightmetrics.LiteAnalytics.Interfaces {
     export interface ILiteUpgradeDialogProps {
         dialogName: string;
         fadeOutOnClose: boolean;
diff --git a/ts/LiteAnalytics/ViewModels/liteupgradedialog.ts b/ts/LiteAnalytics/ViewModels/liteupgradedialog.ts
index e4e774c..aa67917 100644
--- a/ts/LiteAnalytics/ViewModels/liteupgradedialog.ts
+++ b/ts/LiteAnalytics/ViewModels/liteupgradedialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../viewmodels/dialog.ts" />
 
 namespace Brightmetrics.LiteAnalytics.ViewModels {
diff --git a/ts/MediaPlayer/Interfaces/iaudioplayer.ts b/ts/MediaPlayer/Interfaces/iaudioplayer.ts
index 6b46ae2..2cae1e9 100644
--- a/ts/MediaPlayer/Interfaces/iaudioplayer.ts
+++ b/ts/MediaPlayer/Interfaces/iaudioplayer.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 
diff --git a/ts/MediaPlayer/ViewModels/audioplayer.ts b/ts/MediaPlayer/ViewModels/audioplayer.ts
index 7166a1c..6041382 100644
--- a/ts/MediaPlayer/ViewModels/audioplayer.ts
+++ b/ts/MediaPlayer/ViewModels/audioplayer.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/MultipleSelect/Interfaces/imultipleselectdialogprops.ts b/ts/MultipleSelect/Interfaces/imultipleselectdialogprops.ts
index 4b0d7c2..16f2e42 100644
--- a/ts/MultipleSelect/Interfaces/imultipleselectdialogprops.ts
+++ b/ts/MultipleSelect/Interfaces/imultipleselectdialogprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MultipleSelect.Interfaces {
+namespace Brightmetrics.MultipleSelect.Interfaces {
     export interface IMultipleSelectDialogProps<T = string | number> extends IMultipleSelectProps<T> {
         nameForItem: string;
         beforeDestroy?: () => Promise<void>;
diff --git a/ts/MultipleSelect/Interfaces/imultipleselectjson.ts b/ts/MultipleSelect/Interfaces/imultipleselectjson.ts
index 22bf377..ead570a 100644
--- a/ts/MultipleSelect/Interfaces/imultipleselectjson.ts
+++ b/ts/MultipleSelect/Interfaces/imultipleselectjson.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MultipleSelect.Interfaces {
+namespace Brightmetrics.MultipleSelect.Interfaces {
     export interface IMultipleSelectJSON<T = string | number> {
         filterType?: Brightmetrics.Reports.Enums.DimensionFilterType;
         groupOthers?: boolean;
diff --git a/ts/MultipleSelect/Interfaces/imultipleselectprops.ts b/ts/MultipleSelect/Interfaces/imultipleselectprops.ts
index e73de78..63aeed7 100644
--- a/ts/MultipleSelect/Interfaces/imultipleselectprops.ts
+++ b/ts/MultipleSelect/Interfaces/imultipleselectprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MultipleSelect.Interfaces {
+namespace Brightmetrics.MultipleSelect.Interfaces {
     export interface IMultipleSelectProps<T = string | number> {
         /**
          * The list fetcher should handle all of the following:
diff --git a/ts/MultipleSelect/ViewModels/list.ts b/ts/MultipleSelect/ViewModels/list.ts
index cdd32ca..d4ad585 100644
--- a/ts/MultipleSelect/ViewModels/list.ts
+++ b/ts/MultipleSelect/ViewModels/list.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/MultipleSelect/ViewModels/listitem.ts b/ts/MultipleSelect/ViewModels/listitem.ts
index 5395b8b..72bcc2f 100644
--- a/ts/MultipleSelect/ViewModels/listitem.ts
+++ b/ts/MultipleSelect/ViewModels/listitem.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/MultipleSelect/ViewModels/multipleselect.ts b/ts/MultipleSelect/ViewModels/multipleselect.ts
index 183318b..593056d 100644
--- a/ts/MultipleSelect/ViewModels/multipleselect.ts
+++ b/ts/MultipleSelect/ViewModels/multipleselect.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/MultipleSelect/ViewModels/multipleselectdialog.ts b/ts/MultipleSelect/ViewModels/multipleselectdialog.ts
index 7f1c8c7..c657521 100644
--- a/ts/MultipleSelect/ViewModels/multipleselectdialog.ts
+++ b/ts/MultipleSelect/ViewModels/multipleselectdialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodels/dialog.ts" />
diff --git a/ts/MyAccount/Interfaces/imyaccountchangeaccountinfoprops.ts b/ts/MyAccount/Interfaces/imyaccountchangeaccountinfoprops.ts
index 071838e..e1390c5 100644
--- a/ts/MyAccount/Interfaces/imyaccountchangeaccountinfoprops.ts
+++ b/ts/MyAccount/Interfaces/imyaccountchangeaccountinfoprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.Interfaces {
+namespace Brightmetrics.MyAccount.Interfaces {
     export interface IMyAccountChangeAccountInfoProps {
         firstName: KnockoutObservable<string>;
         lastName: KnockoutObservable<string>;
diff --git a/ts/MyAccount/Interfaces/imyaccountchangeemailprops.ts b/ts/MyAccount/Interfaces/imyaccountchangeemailprops.ts
index 01e6cf3..cee95b9 100644
--- a/ts/MyAccount/Interfaces/imyaccountchangeemailprops.ts
+++ b/ts/MyAccount/Interfaces/imyaccountchangeemailprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.Interfaces {
+namespace Brightmetrics.MyAccount.Interfaces {
     export interface IMyAccountChangeEmailProps {
         email: KnockoutObservable<string>;
     }
diff --git a/ts/MyAccount/Interfaces/imyaccountchangepictureprops.ts b/ts/MyAccount/Interfaces/imyaccountchangepictureprops.ts
index 5dadacb..eb35072 100644
--- a/ts/MyAccount/Interfaces/imyaccountchangepictureprops.ts
+++ b/ts/MyAccount/Interfaces/imyaccountchangepictureprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.Interfaces {
+namespace Brightmetrics.MyAccount.Interfaces {
     export interface IMyAccountChangePictureProps {
         firstName: KnockoutObservable<string>;
         lastName: KnockoutObservable<string>;
diff --git a/ts/MyAccount/Interfaces/imyaccountprops.ts b/ts/MyAccount/Interfaces/imyaccountprops.ts
index 402a234..1c01ae8 100644
--- a/ts/MyAccount/Interfaces/imyaccountprops.ts
+++ b/ts/MyAccount/Interfaces/imyaccountprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.Interfaces {
+namespace Brightmetrics.MyAccount.Interfaces {
     export interface IMyAccountProps {
         email: string;
     }
diff --git a/ts/MyAccount/Interfaces/imyaccountsettingfieldprops.ts b/ts/MyAccount/Interfaces/imyaccountsettingfieldprops.ts
index e7a52a6..4e0e716 100644
--- a/ts/MyAccount/Interfaces/imyaccountsettingfieldprops.ts
+++ b/ts/MyAccount/Interfaces/imyaccountsettingfieldprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.Interfaces {
+namespace Brightmetrics.MyAccount.Interfaces {
     export interface IMyAccountSettingFieldProps {
         id: string;
         name: string;
diff --git a/ts/MyAccount/Interfaces/imyaccountsettingprops.ts b/ts/MyAccount/Interfaces/imyaccountsettingprops.ts
index 2c11afa..f1f8a14 100644
--- a/ts/MyAccount/Interfaces/imyaccountsettingprops.ts
+++ b/ts/MyAccount/Interfaces/imyaccountsettingprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.Interfaces {
+namespace Brightmetrics.MyAccount.Interfaces {
     export interface IMyAccountSettingProps {
         id: string;
         name: string;
diff --git a/ts/MyAccount/Interfaces/imyaccountsettingsprops.ts b/ts/MyAccount/Interfaces/imyaccountsettingsprops.ts
index 5709373..1a5cd6a 100644
--- a/ts/MyAccount/Interfaces/imyaccountsettingsprops.ts
+++ b/ts/MyAccount/Interfaces/imyaccountsettingsprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.Interfaces {
+namespace Brightmetrics.MyAccount.Interfaces {
     import BMVs = Brightmetrics.MyAccount.ViewModels;
 
     export interface IMyAccountSettingsProps {
diff --git a/ts/MyAccount/ViewModels/apiaccess.ts b/ts/MyAccount/ViewModels/apiaccess.ts
index e5e8b19..20f08c5 100644
--- a/ts/MyAccount/ViewModels/apiaccess.ts
+++ b/ts/MyAccount/ViewModels/apiaccess.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.MyAccount.ViewModels {
+namespace Brightmetrics.MyAccount.ViewModels {
     declare const grecaptchaV3SiteKey: string;
     declare const grecaptchaV2SiteKey: string;
     const recaptchaContainerId = "recaptcha-container";
diff --git a/ts/MyAccount/ViewModels/myaccount.ts b/ts/MyAccount/ViewModels/myaccount.ts
index 19b3ae3..c5cead6 100644
--- a/ts/MyAccount/ViewModels/myaccount.ts
+++ b/ts/MyAccount/ViewModels/myaccount.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import bmvs = Brightmetrics.ViewModels;
diff --git a/ts/MyAccount/ViewModels/myaccountchangeaccountinfo.ts b/ts/MyAccount/ViewModels/myaccountchangeaccountinfo.ts
index e25e32a..f05f545 100644
--- a/ts/MyAccount/ViewModels/myaccountchangeaccountinfo.ts
+++ b/ts/MyAccount/ViewModels/myaccountchangeaccountinfo.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import BIIs = Brightmetrics.MyAccount.Interfaces;
diff --git a/ts/MyAccount/ViewModels/myaccountchangeemail.ts b/ts/MyAccount/ViewModels/myaccountchangeemail.ts
index 1349cf0..be1fe6f 100644
--- a/ts/MyAccount/ViewModels/myaccountchangeemail.ts
+++ b/ts/MyAccount/ViewModels/myaccountchangeemail.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import BIIs = Brightmetrics.MyAccount.Interfaces;
diff --git a/ts/MyAccount/ViewModels/myaccountchangepassword.ts b/ts/MyAccount/ViewModels/myaccountchangepassword.ts
index 38c1888..493512b 100644
--- a/ts/MyAccount/ViewModels/myaccountchangepassword.ts
+++ b/ts/MyAccount/ViewModels/myaccountchangepassword.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 declare const MIN_PASSWORD_LENGTH: number;
 
diff --git a/ts/MyAccount/ViewModels/myaccountchangepicture.ts b/ts/MyAccount/ViewModels/myaccountchangepicture.ts
index 4d75db2..81319d7 100644
--- a/ts/MyAccount/ViewModels/myaccountchangepicture.ts
+++ b/ts/MyAccount/ViewModels/myaccountchangepicture.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import BIIs = Brightmetrics.MyAccount.Interfaces;
diff --git a/ts/MyAccount/ViewModels/myaccountchangesetting.ts b/ts/MyAccount/ViewModels/myaccountchangesetting.ts
index 0554483..6ef5390 100644
--- a/ts/MyAccount/ViewModels/myaccountchangesetting.ts
+++ b/ts/MyAccount/ViewModels/myaccountchangesetting.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import BIIs = Brightmetrics.MyAccount.Interfaces;
diff --git a/ts/MyAccount/ViewModels/myaccountchangesettingfield.ts b/ts/MyAccount/ViewModels/myaccountchangesettingfield.ts
index d5a84b0..c80c4ba 100644
--- a/ts/MyAccount/ViewModels/myaccountchangesettingfield.ts
+++ b/ts/MyAccount/ViewModels/myaccountchangesettingfield.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import BIIs = Brightmetrics.MyAccount.Interfaces;
diff --git a/ts/MyAccount/ViewModels/myaccountchangesettings.ts b/ts/MyAccount/ViewModels/myaccountchangesettings.ts
index 3eb06db..4aa9d0c 100644
--- a/ts/MyAccount/ViewModels/myaccountchangesettings.ts
+++ b/ts/MyAccount/ViewModels/myaccountchangesettings.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import BIIs = Brightmetrics.MyAccount.Interfaces;
diff --git a/ts/MyAccount/ViewModels/page.ts b/ts/MyAccount/ViewModels/page.ts
index a8e8e63..8408511 100644
--- a/ts/MyAccount/ViewModels/page.ts
+++ b/ts/MyAccount/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/pagebase.ts" />
+/// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.MyAccount.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/NoAccess/Interfaces/inoaccessprops.ts b/ts/NoAccess/Interfaces/inoaccessprops.ts
index 95fe7ae..cbb30c5 100644
--- a/ts/NoAccess/Interfaces/inoaccessprops.ts
+++ b/ts/NoAccess/Interfaces/inoaccessprops.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.NoAccess.Interfaces {
     export interface INoAccessProps {
diff --git a/ts/NoAccess/ViewModels/noaccess.ts b/ts/NoAccess/ViewModels/noaccess.ts
index 970ac7f..452a864 100644
--- a/ts/NoAccess/ViewModels/noaccess.ts
+++ b/ts/NoAccess/ViewModels/noaccess.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.NoAccess.ViewModels {
+namespace Brightmetrics.NoAccess.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BNIs = Brightmetrics.NoAccess.Interfaces;
 
diff --git a/ts/NoAccess/ViewModels/page.ts b/ts/NoAccess/ViewModels/page.ts
index ff6b45b..c9367cf 100644
--- a/ts/NoAccess/ViewModels/page.ts
+++ b/ts/NoAccess/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.NoAccess.ViewModels {
diff --git a/ts/NoCompanyAccess/Interfaces/inocompanyaccessprops.ts b/ts/NoCompanyAccess/Interfaces/inocompanyaccessprops.ts
index 05da892..2544a57 100644
--- a/ts/NoCompanyAccess/Interfaces/inocompanyaccessprops.ts
+++ b/ts/NoCompanyAccess/Interfaces/inocompanyaccessprops.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.NoCompanyAccess.Interfaces {
     export interface INoCompanyAccessProps {
diff --git a/ts/NoCompanyAccess/ViewModels/nocompanyaccess.ts b/ts/NoCompanyAccess/ViewModels/nocompanyaccess.ts
index eaf9061..f720738 100644
--- a/ts/NoCompanyAccess/ViewModels/nocompanyaccess.ts
+++ b/ts/NoCompanyAccess/ViewModels/nocompanyaccess.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.NoCompanyAccess.ViewModels {
+namespace Brightmetrics.NoCompanyAccess.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BNIs = Brightmetrics.NoCompanyAccess.Interfaces;
 
diff --git a/ts/NoCompanyAccess/ViewModels/page.ts b/ts/NoCompanyAccess/ViewModels/page.ts
index 5c6cb8b..d9d8749 100644
--- a/ts/NoCompanyAccess/ViewModels/page.ts
+++ b/ts/NoCompanyAccess/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.NoCompanyAccess.ViewModels {
diff --git a/ts/PendingAccess/ViewModels/page.ts b/ts/PendingAccess/ViewModels/page.ts
index 9d8fdf1..6b98a6f 100644
--- a/ts/PendingAccess/ViewModels/page.ts
+++ b/ts/PendingAccess/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.PendingAccess.ViewModels {
diff --git a/ts/PrintPreview/Interfaces/iprintpreviewdata.ts b/ts/PrintPreview/Interfaces/iprintpreviewdata.ts
index 024a240..338dd46 100644
--- a/ts/PrintPreview/Interfaces/iprintpreviewdata.ts
+++ b/ts/PrintPreview/Interfaces/iprintpreviewdata.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 
diff --git a/ts/PrintPreview/Interfaces/iprintpreviewinfo.ts b/ts/PrintPreview/Interfaces/iprintpreviewinfo.ts
index d315346..db9e17f 100644
--- a/ts/PrintPreview/Interfaces/iprintpreviewinfo.ts
+++ b/ts/PrintPreview/Interfaces/iprintpreviewinfo.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 
diff --git a/ts/PrintPreview/Interfaces/iprintpreviewtable.ts b/ts/PrintPreview/Interfaces/iprintpreviewtable.ts
index 5c1b086..cecb522 100644
--- a/ts/PrintPreview/Interfaces/iprintpreviewtable.ts
+++ b/ts/PrintPreview/Interfaces/iprintpreviewtable.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 
diff --git a/ts/PrintPreview/ViewModels/page.ts b/ts/PrintPreview/ViewModels/page.ts
index e54c396..a3ec309 100644
--- a/ts/PrintPreview/ViewModels/page.ts
+++ b/ts/PrintPreview/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.PrintPreview.ViewModels {
+namespace Brightmetrics.PrintPreview.ViewModels {
     import BMIs = Brightmetrics.Interfaces;
     import BRIs = Brightmetrics.Reports.Interfaces;
     import BRIDs = Brightmetrics.Reports.Interfaces.DTOs;
diff --git a/ts/PrintPreview/ViewModels/titleinformation.ts b/ts/PrintPreview/ViewModels/titleinformation.ts
index 386f38a..58168c2 100644
--- a/ts/PrintPreview/ViewModels/titleinformation.ts
+++ b/ts/PrintPreview/ViewModels/titleinformation.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../enums/datatype.ts" />
+/// <reference path="../../enums/datatype.ts" />
 namespace Brightmetrics.PrintPreview.ViewModels {
     import bppi = Brightmetrics.PrintPreview.Interfaces;
     import BRIs = Brightmetrics.Reports.Interfaces;
diff --git a/ts/Registration/Interfaces/IAssociationGroup.ts b/ts/Registration/Interfaces/IAssociationGroup.ts
index d269915..000cde2 100644
--- a/ts/Registration/Interfaces/IAssociationGroup.ts
+++ b/ts/Registration/Interfaces/IAssociationGroup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Registration.Interfaces {
+namespace Brightmetrics.Registration.Interfaces {
     export interface IAssociationGroup {
         CaptureNotifications: boolean;
         CobrandingEnabled: boolean;
diff --git a/ts/Registration/Interfaces/ipreloadassociation.ts b/ts/Registration/Interfaces/ipreloadassociation.ts
index 1c7d626..c872eaa 100644
--- a/ts/Registration/Interfaces/ipreloadassociation.ts
+++ b/ts/Registration/Interfaces/ipreloadassociation.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Registration.Interfaces {
+namespace Brightmetrics.Registration.Interfaces {
     export interface IPreloadAssociation {
         success: boolean;
         group: IAssociationGroup;
diff --git a/ts/Registration/Interfaces/iregisterprops.ts b/ts/Registration/Interfaces/iregisterprops.ts
index 8a310d0..f3f057d 100644
--- a/ts/Registration/Interfaces/iregisterprops.ts
+++ b/ts/Registration/Interfaces/iregisterprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Registration.Interfaces {
+namespace Brightmetrics.Registration.Interfaces {
     export interface IRegisterProps {
         email: KnockoutObservable<string>;
         firstName: KnockoutObservable<string>;
diff --git a/ts/Registration/Interfaces/iregistrationviewprops.ts b/ts/Registration/Interfaces/iregistrationviewprops.ts
index f81cf3f..92d340f 100644
--- a/ts/Registration/Interfaces/iregistrationviewprops.ts
+++ b/ts/Registration/Interfaces/iregistrationviewprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Registration.Interfaces {
+namespace Brightmetrics.Registration.Interfaces {
     export interface IRegistrationViewProps {
         isWhiteLabel: KnockoutObservable<boolean>;
         logoFile: KnockoutObservable<string>;
diff --git a/ts/Registration/ViewModels/page.ts b/ts/Registration/ViewModels/page.ts
index 3733aa2..adf6b89 100644
--- a/ts/Registration/ViewModels/page.ts
+++ b/ts/Registration/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../ViewModels/pagebase.ts" />
 
 namespace Brightmetrics.Registration.ViewModels {
diff --git a/ts/Registration/ViewModels/register.ts b/ts/Registration/ViewModels/register.ts
index 8b1742b..3221c1f 100644
--- a/ts/Registration/ViewModels/register.ts
+++ b/ts/Registration/ViewModels/register.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/Registration/ViewModels/registerdialog.ts b/ts/Registration/ViewModels/registerdialog.ts
index 38a95b6..808aea6 100644
--- a/ts/Registration/ViewModels/registerdialog.ts
+++ b/ts/Registration/ViewModels/registerdialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Registration.ViewModels {
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Registration/ViewModels/registration.ts b/ts/Registration/ViewModels/registration.ts
index 6954512..3142c79 100644
--- a/ts/Registration/ViewModels/registration.ts
+++ b/ts/Registration/ViewModels/registration.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Registration.ViewModels {
+namespace Brightmetrics.Registration.ViewModels {
     import BVs = Brightmetrics.ViewModels;
     import BIs = Brightmetrics.Interfaces;
     import BEs = Brightmetrics.Enums;
diff --git a/ts/Reports/Classes/report.ts b/ts/Reports/Classes/report.ts
index 9c7c7f4..0a51ba5 100644
--- a/ts/Reports/Classes/report.ts
+++ b/ts/Reports/Classes/report.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../enums/datatype.ts" />
+/// <reference path="../../enums/datatype.ts" />
 namespace Brightmetrics.Reports.Classes {
     export class Report implements BRIDs.IReportSaved {
         public accessLevel: BREs.AccessLevel;
diff --git a/ts/Reports/Enums/accesslevel.ts b/ts/Reports/Enums/accesslevel.ts
index d5394a1..95967e9 100644
--- a/ts/Reports/Enums/accesslevel.ts
+++ b/ts/Reports/Enums/accesslevel.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Enums {
+namespace Brightmetrics.Reports.Enums {
     export enum AccessLevel {
         None,
         Read,
diff --git a/ts/Reports/Enums/dimensionfiltertype.ts b/ts/Reports/Enums/dimensionfiltertype.ts
index f6b5af8..1b5b67f 100644
--- a/ts/Reports/Enums/dimensionfiltertype.ts
+++ b/ts/Reports/Enums/dimensionfiltertype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.Enums {
     export enum DimensionFilterType {
diff --git a/ts/Reports/Enums/filteroption.ts b/ts/Reports/Enums/filteroption.ts
index 51005ac..4bb6a29 100644
--- a/ts/Reports/Enums/filteroption.ts
+++ b/ts/Reports/Enums/filteroption.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Enums {
+namespace Brightmetrics.Reports.Enums {
     export enum FilterOption {
         All = "All",
         /** New UI only */
diff --git a/ts/Reports/Enums/multivaluedimensionconditiontype.ts b/ts/Reports/Enums/multivaluedimensionconditiontype.ts
index f5e7e5c..2729dea 100644
--- a/ts/Reports/Enums/multivaluedimensionconditiontype.ts
+++ b/ts/Reports/Enums/multivaluedimensionconditiontype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Enums {
+namespace Brightmetrics.Reports.Enums {
     export enum MultiValueDimensionConditionType {
         Any = 0,
         All = 1,
diff --git a/ts/Reports/Enums/pagecontentview.ts b/ts/Reports/Enums/pagecontentview.ts
index b5971c5..bdef7c0 100644
--- a/ts/Reports/Enums/pagecontentview.ts
+++ b/ts/Reports/Enums/pagecontentview.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.Enums {
     export enum PageContentView {
diff --git a/ts/Reports/Enums/pillmodifiercssclass.ts b/ts/Reports/Enums/pillmodifiercssclass.ts
index 18387f2..69e6494 100644
--- a/ts/Reports/Enums/pillmodifiercssclass.ts
+++ b/ts/Reports/Enums/pillmodifiercssclass.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.Enums {
     export enum PillModifierCSSClass {
diff --git a/ts/Reports/Enums/reportfieldtype.ts b/ts/Reports/Enums/reportfieldtype.ts
index d9ee73d..c918558 100644
--- a/ts/Reports/Enums/reportfieldtype.ts
+++ b/ts/Reports/Enums/reportfieldtype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.Enums {
     export enum ReportFieldType {
diff --git a/ts/Reports/Enums/reportlayouttype.ts b/ts/Reports/Enums/reportlayouttype.ts
index 20978a5..113ae14 100644
--- a/ts/Reports/Enums/reportlayouttype.ts
+++ b/ts/Reports/Enums/reportlayouttype.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Enums {
+namespace Brightmetrics.Reports.Enums {
     export enum ReportLayoutType {
         Card = "card",
         List = "list",
diff --git a/ts/Reports/Enums/reportobjecttype.ts b/ts/Reports/Enums/reportobjecttype.ts
index 0811e0c..8ae34f7 100644
--- a/ts/Reports/Enums/reportobjecttype.ts
+++ b/ts/Reports/Enums/reportobjecttype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.Enums {
     export enum ReportObjectType {
diff --git a/ts/Reports/Enums/reporttype.ts b/ts/Reports/Enums/reporttype.ts
index ec9fe0d..3dca4fb 100644
--- a/ts/Reports/Enums/reporttype.ts
+++ b/ts/Reports/Enums/reporttype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 namespace Brightmetrics.Reports.Enums {
     export enum ReportType {
         Detail = "Detail",
diff --git a/ts/Reports/Enums/valuefiltertype.ts b/ts/Reports/Enums/valuefiltertype.ts
index 65695ad..ea636c6 100644
--- a/ts/Reports/Enums/valuefiltertype.ts
+++ b/ts/Reports/Enums/valuefiltertype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.Enums {
     export enum ValueFilterType {
diff --git a/ts/Reports/Interfaces/DTOs/ifilter.ts b/ts/Reports/Interfaces/DTOs/ifilter.ts
index 15da918..da65dc2 100644
--- a/ts/Reports/Interfaces/DTOs/ifilter.ts
+++ b/ts/Reports/Interfaces/DTOs/ifilter.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     /**
      * This represents a `IParameterFilter` that has been processed (removed of
      * it's presentational properties) and is ready for the backend to read it,
diff --git a/ts/Reports/Interfaces/DTOs/ifilterdaterange.ts b/ts/Reports/Interfaces/DTOs/ifilterdaterange.ts
index 8e01f09..22cb85f 100644
--- a/ts/Reports/Interfaces/DTOs/ifilterdaterange.ts
+++ b/ts/Reports/Interfaces/DTOs/ifilterdaterange.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     /**
      *
      */
diff --git a/ts/Reports/Interfaces/DTOs/ifilterdetail.ts b/ts/Reports/Interfaces/DTOs/ifilterdetail.ts
index c8433c4..a2bf17c 100644
--- a/ts/Reports/Interfaces/DTOs/ifilterdetail.ts
+++ b/ts/Reports/Interfaces/DTOs/ifilterdetail.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IFilterDetail extends IDataSourceInfo {
         description: string;
         factIndex: number;
diff --git a/ts/Reports/Interfaces/DTOs/ifilterselected.ts b/ts/Reports/Interfaces/DTOs/ifilterselected.ts
index f402fd1..8913dc8 100644
--- a/ts/Reports/Interfaces/DTOs/ifilterselected.ts
+++ b/ts/Reports/Interfaces/DTOs/ifilterselected.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IFilterSelected extends IFilter {
         groupOthers: boolean;
         proxyIndex: number;
diff --git a/ts/Reports/Interfaces/DTOs/iparameter.ts b/ts/Reports/Interfaces/DTOs/iparameter.ts
index 9a60423..bc99a85 100644
--- a/ts/Reports/Interfaces/DTOs/iparameter.ts
+++ b/ts/Reports/Interfaces/DTOs/iparameter.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IParameter extends IDataSourceInfo {
         label: string;
         fixed: boolean;
diff --git a/ts/Reports/Interfaces/DTOs/iparameterchoice.ts b/ts/Reports/Interfaces/DTOs/iparameterchoice.ts
index 3478429..9bdd219 100644
--- a/ts/Reports/Interfaces/DTOs/iparameterchoice.ts
+++ b/ts/Reports/Interfaces/DTOs/iparameterchoice.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     /** NOTE: We are no longer honoring this in the new UI. */
     export interface IParameterChoice {
         id: string;
diff --git a/ts/Reports/Interfaces/DTOs/iparameterdimension.ts b/ts/Reports/Interfaces/DTOs/iparameterdimension.ts
index 8e8541d..0cbc962 100644
--- a/ts/Reports/Interfaces/DTOs/iparameterdimension.ts
+++ b/ts/Reports/Interfaces/DTOs/iparameterdimension.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IParameterDimension extends IParameter {
         defaultFilters: _.Dictionary<IParameterFilter>;
         defaultType: Enums.FilterOption;
diff --git a/ts/Reports/Interfaces/DTOs/iparameterfilter.ts b/ts/Reports/Interfaces/DTOs/iparameterfilter.ts
index ca85797..9a5ede7 100644
--- a/ts/Reports/Interfaces/DTOs/iparameterfilter.ts
+++ b/ts/Reports/Interfaces/DTOs/iparameterfilter.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IParameterFilter extends IDataSourceInfo {
         description: string;
         dimensionIndex: number;
diff --git a/ts/Reports/Interfaces/DTOs/iparameterfilterrelative.ts b/ts/Reports/Interfaces/DTOs/iparameterfilterrelative.ts
index 6a14483..d745dad 100644
--- a/ts/Reports/Interfaces/DTOs/iparameterfilterrelative.ts
+++ b/ts/Reports/Interfaces/DTOs/iparameterfilterrelative.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IParameterFilterRelative extends IParameterFilter {
         includeToday: boolean;
     }
diff --git a/ts/Reports/Interfaces/DTOs/iparameterfilterselected.ts b/ts/Reports/Interfaces/DTOs/iparameterfilterselected.ts
index 539cd23..e6cd429 100644
--- a/ts/Reports/Interfaces/DTOs/iparameterfilterselected.ts
+++ b/ts/Reports/Interfaces/DTOs/iparameterfilterselected.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IParameterFilterSelected extends IParameterFilter {
         groupOthers: boolean;
         proxyIndex: number;
diff --git a/ts/Reports/Interfaces/DTOs/iparametervalue.ts b/ts/Reports/Interfaces/DTOs/iparametervalue.ts
index 4864c0d..8f86858 100644
--- a/ts/Reports/Interfaces/DTOs/iparametervalue.ts
+++ b/ts/Reports/Interfaces/DTOs/iparametervalue.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IParameterValue extends IParameter {
         factIndex: number;
         filterHiValue: number;
diff --git a/ts/Reports/Interfaces/DTOs/irecenttimewindow.ts b/ts/Reports/Interfaces/DTOs/irecenttimewindow.ts
index adc3dec..4fa2cb8 100644
--- a/ts/Reports/Interfaces/DTOs/irecenttimewindow.ts
+++ b/ts/Reports/Interfaces/DTOs/irecenttimewindow.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IRecentTimeWindow {
         fromDaysAgo: number;
         fromTime: number;
diff --git a/ts/Reports/Interfaces/DTOs/ireportfield.ts b/ts/Reports/Interfaces/DTOs/ireportfield.ts
index 60daa34..88caa25 100644
--- a/ts/Reports/Interfaces/DTOs/ireportfield.ts
+++ b/ts/Reports/Interfaces/DTOs/ireportfield.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IReportField extends IDataSourceInfo {
         dimensionIndex?: number;
         valueIndex?: number;
diff --git a/ts/Reports/Interfaces/DTOs/ireportownerinfo.ts b/ts/Reports/Interfaces/DTOs/ireportownerinfo.ts
index f075d3f..9866b9f 100644
--- a/ts/Reports/Interfaces/DTOs/ireportownerinfo.ts
+++ b/ts/Reports/Interfaces/DTOs/ireportownerinfo.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IReportOwnerInfo {
         /** Date in ISO formatted string. */
         createdAt: string;
diff --git a/ts/Reports/Interfaces/DTOs/ireportsaved.ts b/ts/Reports/Interfaces/DTOs/ireportsaved.ts
index 53f4fe2..021884f 100644
--- a/ts/Reports/Interfaces/DTOs/ireportsaved.ts
+++ b/ts/Reports/Interfaces/DTOs/ireportsaved.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IReportSaved<T = IReportTemplate> {
         accessLevel: number;
         id: string;
diff --git a/ts/Reports/Interfaces/DTOs/ireporttemplate.ts b/ts/Reports/Interfaces/DTOs/ireporttemplate.ts
index 54c8592..12bfa1f 100644
--- a/ts/Reports/Interfaces/DTOs/ireporttemplate.ts
+++ b/ts/Reports/Interfaces/DTOs/ireporttemplate.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IReportTemplate extends IDataSourceInfo {
         cols: IReportField[];
         /** Grouping defined by user - takes precedence over `reportGroup` */
diff --git a/ts/Reports/Interfaces/DTOs/ireporttemplateunsafe.ts b/ts/Reports/Interfaces/DTOs/ireporttemplateunsafe.ts
index 09a3a38..b7dba93 100644
--- a/ts/Reports/Interfaces/DTOs/ireporttemplateunsafe.ts
+++ b/ts/Reports/Interfaces/DTOs/ireporttemplateunsafe.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     /**
      * This represents the loose, abused template data model from our old UI.
      * This is the data model that we need to read/write to/from the server in
diff --git a/ts/Reports/Interfaces/DTOs/ireportthreshold.ts b/ts/Reports/Interfaces/DTOs/ireportthreshold.ts
index 45806b4..4dc4bb8 100644
--- a/ts/Reports/Interfaces/DTOs/ireportthreshold.ts
+++ b/ts/Reports/Interfaces/DTOs/ireportthreshold.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces.DTOs {
+namespace Brightmetrics.Reports.Interfaces.DTOs {
     export interface IReportThreshold {
         id: string;
         dsiid: number;
diff --git a/ts/Reports/Interfaces/iexportreport.ts b/ts/Reports/Interfaces/iexportreport.ts
index f29eeb4..b5fe47e 100644
--- a/ts/Reports/Interfaces/iexportreport.ts
+++ b/ts/Reports/Interfaces/iexportreport.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces {
+namespace Brightmetrics.Reports.Interfaces {
     export interface IExportReport extends Brightmetrics.Interfaces.IExportDialogOptions {
         dsiId: string | number;
         id: string;
diff --git a/ts/Reports/Interfaces/ifilterexport.ts b/ts/Reports/Interfaces/ifilterexport.ts
index 15cdb97..039af08 100644
--- a/ts/Reports/Interfaces/ifilterexport.ts
+++ b/ts/Reports/Interfaces/ifilterexport.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces {
+namespace Brightmetrics.Reports.Interfaces {
     // TODO: Documentation.
     /**
      * Represents a report filter (not a parameterfilter).
diff --git a/ts/Reports/Interfaces/ifilterpillprops.ts b/ts/Reports/Interfaces/ifilterpillprops.ts
index 26869e2..1aff47b 100644
--- a/ts/Reports/Interfaces/ifilterpillprops.ts
+++ b/ts/Reports/Interfaces/ifilterpillprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces {
+namespace Brightmetrics.Reports.Interfaces {
     export interface IFilterPillProps
         extends Brightmetrics.Interfaces.IPillProps<string> {
 
diff --git a/ts/Reports/Interfaces/ifixedcellcontentoptions.ts b/ts/Reports/Interfaces/ifixedcellcontentoptions.ts
index 290d40b..7b72522 100644
--- a/ts/Reports/Interfaces/ifixedcellcontentoptions.ts
+++ b/ts/Reports/Interfaces/ifixedcellcontentoptions.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../Interfaces/irect.ts" />
 
 namespace Brightmetrics.Reports.Interfaces {
diff --git a/ts/Reports/Interfaces/ipillmodifier.ts b/ts/Reports/Interfaces/ipillmodifier.ts
index 468f34d..c24a9ee 100644
--- a/ts/Reports/Interfaces/ipillmodifier.ts
+++ b/ts/Reports/Interfaces/ipillmodifier.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces {
+namespace Brightmetrics.Reports.Interfaces {
     export interface IPillModifier {
         cssClass: string;
         tooltip: string;
diff --git a/ts/Reports/Interfaces/ireportfieldhelper.ts b/ts/Reports/Interfaces/ireportfieldhelper.ts
index 234898f..e45fad6 100644
--- a/ts/Reports/Interfaces/ireportfieldhelper.ts
+++ b/ts/Reports/Interfaces/ireportfieldhelper.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../Enums/reportfieldtype.ts" />
 
 namespace Brightmetrics.Reports.Interfaces {
diff --git a/ts/Reports/Interfaces/ireporttemplateexport.ts b/ts/Reports/Interfaces/ireporttemplateexport.ts
index 4d21ded..71430d3 100644
--- a/ts/Reports/Interfaces/ireporttemplateexport.ts
+++ b/ts/Reports/Interfaces/ireporttemplateexport.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.Reports.Interfaces {
+namespace Brightmetrics.Reports.Interfaces {
     // TODO: Documentation:
     /**
      * Sort of like the output of `toStandardTable` in the legacy UI:
diff --git a/ts/Reports/ViewModels/allreports.ts b/ts/Reports/ViewModels/allreports.ts
index 1ef3c08..4be437b 100644
--- a/ts/Reports/ViewModels/allreports.ts
+++ b/ts/Reports/ViewModels/allreports.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/Reports/ViewModels/createreport.ts b/ts/Reports/ViewModels/createreport.ts
index 4ba6f79..c0207fb 100644
--- a/ts/Reports/ViewModels/createreport.ts
+++ b/ts/Reports/ViewModels/createreport.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../ViewModels/dialog.ts" />
 /// <reference path="../Enums/reporttype.ts" />
 
diff --git a/ts/Reports/ViewModels/detailquery.ts b/ts/Reports/ViewModels/detailquery.ts
index 6d415f5..b801c18 100644
--- a/ts/Reports/ViewModels/detailquery.ts
+++ b/ts/Reports/ViewModels/detailquery.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/Reports/ViewModels/detailquerydialog.ts b/ts/Reports/ViewModels/detailquerydialog.ts
index 2141634..9e7b4dd 100644
--- a/ts/Reports/ViewModels/detailquerydialog.ts
+++ b/ts/Reports/ViewModels/detailquerydialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.ViewModels {
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Reports/ViewModels/editdimensionthresholddialog.ts b/ts/Reports/ViewModels/editdimensionthresholddialog.ts
index 05cc0e0..ea8359b 100644
--- a/ts/Reports/ViewModels/editdimensionthresholddialog.ts
+++ b/ts/Reports/ViewModels/editdimensionthresholddialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /*tslint:disable:no-reference*/
 /// <reference path="../../ViewModels/dialog.ts" />
diff --git a/ts/Reports/ViewModels/editor.ts b/ts/Reports/ViewModels/editor.ts
index f808d83..25644f8 100644
--- a/ts/Reports/ViewModels/editor.ts
+++ b/ts/Reports/ViewModels/editor.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 /// <reference path="filterwidgets.ts" />
 /// <reference path="report.ts" />
 
diff --git a/ts/Reports/ViewModels/editthresholddialog.ts b/ts/Reports/ViewModels/editthresholddialog.ts
index cc8e1f4..166fb76 100644
--- a/ts/Reports/ViewModels/editthresholddialog.ts
+++ b/ts/Reports/ViewModels/editthresholddialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /*tslint:disable:no-reference*/
 /// <reference path="../../ViewModels/dialog.ts" />
diff --git a/ts/Reports/ViewModels/filter.ts b/ts/Reports/ViewModels/filter.ts
index 852addd..97d00d7 100644
--- a/ts/Reports/ViewModels/filter.ts
+++ b/ts/Reports/ViewModels/filter.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 /// <reference path="../../enums/datatype.ts" />
 /// <reference path="../../TextFilter/ViewModels/textfilterdialog.ts" />
 
diff --git a/ts/Reports/ViewModels/filterpill.ts b/ts/Reports/ViewModels/filterpill.ts
index b519bf2..ccd9c8c 100644
--- a/ts/Reports/ViewModels/filterpill.ts
+++ b/ts/Reports/ViewModels/filterpill.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/Reports/ViewModels/filterwidget.ts b/ts/Reports/ViewModels/filterwidget.ts
index e7b6659..aaf5ec2 100644
--- a/ts/Reports/ViewModels/filterwidget.ts
+++ b/ts/Reports/ViewModels/filterwidget.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/Reports/ViewModels/filterwidgets.ts b/ts/Reports/ViewModels/filterwidgets.ts
index ba1a381..1e2db8c 100644
--- a/ts/Reports/ViewModels/filterwidgets.ts
+++ b/ts/Reports/ViewModels/filterwidgets.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../enums/datatype.ts" />
+/// <reference path="../../enums/datatype.ts" />
 /// <reference path="../../viewmodel.ts" />
 /// <reference path="parameterpopover.ts" />
 /// <reference path="filterwidget.ts" />
diff --git a/ts/Reports/ViewModels/fixedcellcontent.ts b/ts/Reports/ViewModels/fixedcellcontent.ts
index 5872d58..57c45cf 100644
--- a/ts/Reports/ViewModels/fixedcellcontent.ts
+++ b/ts/Reports/ViewModels/fixedcellcontent.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.ViewModels {
     import BRIs = Brightmetrics.Reports.Interfaces;
diff --git a/ts/Reports/ViewModels/parameter.ts b/ts/Reports/ViewModels/parameter.ts
index 2304d00..276cf6d 100644
--- a/ts/Reports/ViewModels/parameter.ts
+++ b/ts/Reports/ViewModels/parameter.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 /// <reference path="../../enums/datatype.ts" />
 
 namespace Brightmetrics.Reports.ViewModels {
diff --git a/ts/Reports/ViewModels/parameterdialog.ts b/ts/Reports/ViewModels/parameterdialog.ts
index 41268a7..72bd0c7 100644
--- a/ts/Reports/ViewModels/parameterdialog.ts
+++ b/ts/Reports/ViewModels/parameterdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodels/dialog.ts" />
+/// <reference path="../../viewmodels/dialog.ts" />
 
 namespace Brightmetrics.Reports.ViewModels {
     interface IParamaterDialogProps {
diff --git a/ts/Reports/ViewModels/parameterpopover.ts b/ts/Reports/ViewModels/parameterpopover.ts
index 5c68757..15b0481 100644
--- a/ts/Reports/ViewModels/parameterpopover.ts
+++ b/ts/Reports/ViewModels/parameterpopover.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 /// <reference path="../../enums/datatype.ts" />
 /// <reference path="filter.ts" />
 
diff --git a/ts/Reports/ViewModels/report-field-editor.ts b/ts/Reports/ViewModels/report-field-editor.ts
index 8b97297..4fed9ec 100644
--- a/ts/Reports/ViewModels/report-field-editor.ts
+++ b/ts/Reports/ViewModels/report-field-editor.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 /// <reference path="../../enums/datatype.ts" />
 
 namespace Brightmetrics.Reports.ViewModels {
diff --git a/ts/Reports/ViewModels/report.ts b/ts/Reports/ViewModels/report.ts
index baec711..4aab0e7 100644
--- a/ts/Reports/ViewModels/report.ts
+++ b/ts/Reports/ViewModels/report.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.Reports.ViewModels {
     import BCs = Brightmetrics.Constants;
diff --git a/ts/Reports/ViewModels/reporteditortopbar.ts b/ts/Reports/ViewModels/reporteditortopbar.ts
index 3028f9a..3b55323 100644
--- a/ts/Reports/ViewModels/reporteditortopbar.ts
+++ b/ts/Reports/ViewModels/reporteditortopbar.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.Reports.ViewModels {
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/Reports/ViewModels/saveasdialog.ts b/ts/Reports/ViewModels/saveasdialog.ts
index a72d153..70d3b96 100644
--- a/ts/Reports/ViewModels/saveasdialog.ts
+++ b/ts/Reports/ViewModels/saveasdialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../ViewModels/dialog.ts" />
diff --git a/ts/Testing/commands.ts b/ts/Testing/commands.ts
index d9d7afe..0b1d73b 100644
--- a/ts/Testing/commands.ts
+++ b/ts/Testing/commands.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 /* tslint:disable:only-arrow-functions */
 
 namespace Brightmetrics.Testing {
diff --git a/ts/Testing/companies.ts b/ts/Testing/companies.ts
index 60a049a..90b2dcd 100644
--- a/ts/Testing/companies.ts
+++ b/ts/Testing/companies.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 
 namespace Brightmetrics.Testing {
     import IAjaxCreateCompanySuccessResponse =
diff --git a/ts/Testing/dataconnectiongroups.ts b/ts/Testing/dataconnectiongroups.ts
index c7d25fd..bf37130 100644
--- a/ts/Testing/dataconnectiongroups.ts
+++ b/ts/Testing/dataconnectiongroups.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 
 namespace Brightmetrics.Testing {
     export class DiagnosticResult {
diff --git a/ts/Testing/datasources.ts b/ts/Testing/datasources.ts
index cec96ca..9097a3f 100644
--- a/ts/Testing/datasources.ts
+++ b/ts/Testing/datasources.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 
 namespace Brightmetrics.Testing {
     export const fixedConfigProperties = ["agentId", "connectionName", "dcgDependency", "dsgroupType"];
diff --git a/ts/Testing/intercept.ts b/ts/Testing/intercept.ts
index 7e58330..14775dc 100644
--- a/ts/Testing/intercept.ts
+++ b/ts/Testing/intercept.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../utils.ts" />
+/// <reference path="../utils.ts" />
 
 /* tslint:disable:no-console only-arrow-functions */
 
diff --git a/ts/Testing/userActivity.ts b/ts/Testing/userActivity.ts
index 1ec039a..0400f19 100644
--- a/ts/Testing/userActivity.ts
+++ b/ts/Testing/userActivity.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 
 /* tslint:disable:no-console */
 
diff --git a/ts/Testing/users.ts b/ts/Testing/users.ts
index 7de9f63..f34d2cd 100644
--- a/ts/Testing/users.ts
+++ b/ts/Testing/users.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 
 namespace Brightmetrics.Testing {
     addInterceptor("companyUsers", /^\/Companies\/(\d+)\/Users$/, (m, data) => {
diff --git a/ts/Testing/varportal.ts b/ts/Testing/varportal.ts
index 0522d3d..95af404 100644
--- a/ts/Testing/varportal.ts
+++ b/ts/Testing/varportal.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 
 namespace Brightmetrics.Testing {
     import IDataConnectionGroupBilling =
diff --git a/ts/Testing/voiceanalytics.ts b/ts/Testing/voiceanalytics.ts
index a56f715..c8d6d1d 100644
--- a/ts/Testing/voiceanalytics.ts
+++ b/ts/Testing/voiceanalytics.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="intercept.ts" />
+/// <reference path="intercept.ts" />
 
 namespace Brightmetrics.Testing {
     const matchGuid = "[a-fA-F0-9]{8}-" +
diff --git a/ts/TextFilter/Enums/filtertype.ts b/ts/TextFilter/Enums/filtertype.ts
index b7e5d5f..17a375b 100644
--- a/ts/TextFilter/Enums/filtertype.ts
+++ b/ts/TextFilter/Enums/filtertype.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.TextFilter.Enums {
     export enum FilterType {
diff --git a/ts/TextFilter/ViewModels/List.ts b/ts/TextFilter/ViewModels/List.ts
index a0ca7ae..1fa74ac 100644
--- a/ts/TextFilter/ViewModels/List.ts
+++ b/ts/TextFilter/ViewModels/List.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/TextFilter/ViewModels/Value.ts b/ts/TextFilter/ViewModels/Value.ts
index b7497c8..0299c36 100644
--- a/ts/TextFilter/ViewModels/Value.ts
+++ b/ts/TextFilter/ViewModels/Value.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/TextFilter/ViewModels/textfilterdialog.ts b/ts/TextFilter/ViewModels/textfilterdialog.ts
index 56be725..176ee15 100644
--- a/ts/TextFilter/ViewModels/textfilterdialog.ts
+++ b/ts/TextFilter/ViewModels/textfilterdialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="../../viewmodel.ts" />
diff --git a/ts/VARPortal/CustomerSetup/Classes/agentinstallstephandler.ts b/ts/VARPortal/CustomerSetup/Classes/agentinstallstephandler.ts
index 3abc492..a8e8ecf 100644
--- a/ts/VARPortal/CustomerSetup/Classes/agentinstallstephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/agentinstallstephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 /* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/chooseplatformstephandler.ts b/ts/VARPortal/CustomerSetup/Classes/chooseplatformstephandler.ts
index a7faefd..e8c9d28 100644
--- a/ts/VARPortal/CustomerSetup/Classes/chooseplatformstephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/chooseplatformstephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 /* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     import BVVs = Brightmetrics.VARPortal.ViewModels;
diff --git a/ts/VARPortal/CustomerSetup/Classes/commitmentstephandler.ts b/ts/VARPortal/CustomerSetup/Classes/commitmentstephandler.ts
index 4367cfa..484ec2d 100644
--- a/ts/VARPortal/CustomerSetup/Classes/commitmentstephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/commitmentstephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     export class CommitmentStepHandler extends StepHandlerBase implements Interfaces.IStepHandler {
         public getNextStep(): Brightmetrics.ViewModels.DialogViewModel | null {
diff --git a/ts/VARPortal/CustomerSetup/Classes/customerdetailsstephandler.ts b/ts/VARPortal/CustomerSetup/Classes/customerdetailsstephandler.ts
index 1059f86..b318049 100644
--- a/ts/VARPortal/CustomerSetup/Classes/customerdetailsstephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/customerdetailsstephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/dashboardtemplatestephandler.ts b/ts/VARPortal/CustomerSetup/Classes/dashboardtemplatestephandler.ts
index 3eacca4..660bc3c 100644
--- a/ts/VARPortal/CustomerSetup/Classes/dashboardtemplatestephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/dashboardtemplatestephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 /* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/datasourcestephandler.ts b/ts/VARPortal/CustomerSetup/Classes/datasourcestephandler.ts
index 8ad2f54..455f0bb 100644
--- a/ts/VARPortal/CustomerSetup/Classes/datasourcestephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/datasourcestephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 /* tslint:disable:object-literal-sort-keys */
 /* tslint:disable:max-line-length */
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
diff --git a/ts/VARPortal/CustomerSetup/Classes/diagnosticsstephandler.ts b/ts/VARPortal/CustomerSetup/Classes/diagnosticsstephandler.ts
index fbfda39..cab78a6 100644
--- a/ts/VARPortal/CustomerSetup/Classes/diagnosticsstephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/diagnosticsstephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 /* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/errordialogstephandler.ts b/ts/VARPortal/CustomerSetup/Classes/errordialogstephandler.ts
index fea2fae..34715d4 100644
--- a/ts/VARPortal/CustomerSetup/Classes/errordialogstephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/errordialogstephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 /* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/examplestephandler1.ts b/ts/VARPortal/CustomerSetup/Classes/examplestephandler1.ts
index 0d2dc4f..5b63d02 100644
--- a/ts/VARPortal/CustomerSetup/Classes/examplestephandler1.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/examplestephandler1.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/examplestephandler2.ts b/ts/VARPortal/CustomerSetup/Classes/examplestephandler2.ts
index 91d5e25..6c63241 100644
--- a/ts/VARPortal/CustomerSetup/Classes/examplestephandler2.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/examplestephandler2.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/productsubscriptionstephandler.ts b/ts/VARPortal/CustomerSetup/Classes/productsubscriptionstephandler.ts
index 29d3642..826e6c1 100644
--- a/ts/VARPortal/CustomerSetup/Classes/productsubscriptionstephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/productsubscriptionstephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     interface IStepData { [name: string]: any; }
diff --git a/ts/VARPortal/CustomerSetup/Classes/reporttemplatestephandler.ts b/ts/VARPortal/CustomerSetup/Classes/reporttemplatestephandler.ts
index a13edbe..d28aa2d 100644
--- a/ts/VARPortal/CustomerSetup/Classes/reporttemplatestephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/reporttemplatestephandler.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="stephandlerbase.ts" />
+/// <reference path="stephandlerbase.ts" />
 /* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     export class ReportTemplateStepHandler extends StepHandlerBase implements Interfaces.IStepHandler {
diff --git a/ts/VARPortal/CustomerSetup/Classes/stephandlerbase.ts b/ts/VARPortal/CustomerSetup/Classes/stephandlerbase.ts
index 53304b4..2fb6f8e 100644
--- a/ts/VARPortal/CustomerSetup/Classes/stephandlerbase.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/stephandlerbase.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
+namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     import BEDSGTs = Brightmetrics.Enums.DataSourceGroupType;
     import BVBs = Brightmetrics.VARPortal.ViewModels;
 
diff --git a/ts/VARPortal/CustomerSetup/Classes/wizard.ts b/ts/VARPortal/CustomerSetup/Classes/wizard.ts
index 80349d8..70d623d 100644
--- a/ts/VARPortal/CustomerSetup/Classes/wizard.ts
+++ b/ts/VARPortal/CustomerSetup/Classes/wizard.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../ViewModels/dialog.ts" />
+/// <reference path="../../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.VARPortal.CustomerSetup.Classes {
     /** Data that the wizard aggregates during its lifetime. */
diff --git a/ts/VARPortal/CustomerSetup/Interfaces/iplatform.ts b/ts/VARPortal/CustomerSetup/Interfaces/iplatform.ts
index c54a003..5dd0c73 100644
--- a/ts/VARPortal/CustomerSetup/Interfaces/iplatform.ts
+++ b/ts/VARPortal/CustomerSetup/Interfaces/iplatform.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.Interfaces {
+namespace Brightmetrics.VARPortal.CustomerSetup.Interfaces {
     export interface IPlatform {
         checked: KnockoutObservable<boolean>;
         dataSources: Brightmetrics.VARPortal.Interfaces.IDataSourceModel[];
diff --git a/ts/VARPortal/CustomerSetup/Interfaces/istephandler.ts b/ts/VARPortal/CustomerSetup/Interfaces/istephandler.ts
index d9b7add..c404fd8 100644
--- a/ts/VARPortal/CustomerSetup/Interfaces/istephandler.ts
+++ b/ts/VARPortal/CustomerSetup/Interfaces/istephandler.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.Interfaces {
+namespace Brightmetrics.VARPortal.CustomerSetup.Interfaces {
     interface IStepData { [name: string]: any; }
 
     /**
diff --git a/ts/VARPortal/CustomerSetup/Interfaces/istepprops.ts b/ts/VARPortal/CustomerSetup/Interfaces/istepprops.ts
index 405b212..851d58d 100644
--- a/ts/VARPortal/CustomerSetup/Interfaces/istepprops.ts
+++ b/ts/VARPortal/CustomerSetup/Interfaces/istepprops.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.Interfaces {
+namespace Brightmetrics.VARPortal.CustomerSetup.Interfaces {
     interface IStepData { [name: string]: any; }
 
     export interface IStepProps {
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/agentinstall.ts b/ts/VARPortal/CustomerSetup/ViewModels/agentinstall.ts
index aad0ee7..d452592 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/agentinstall.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/agentinstall.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../../viewmodels/dialog.ts" />
 /// <reference path="../../../utils.ts" />
 
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/chooseplatformstep.ts b/ts/VARPortal/CustomerSetup/ViewModels/chooseplatformstep.ts
index b65f0d6..8226776 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/chooseplatformstep.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/chooseplatformstep.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
+namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     import BVIs = Brightmetrics.VARPortal.Interfaces;
     import BVVs = Brightmetrics.VARPortal.ViewModels;
     import BEs = Brightmetrics.Enums;
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/commitmentstep.ts b/ts/VARPortal/CustomerSetup/ViewModels/commitmentstep.ts
index bd3dc00..1cdc35e 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/commitmentstep.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/commitmentstep.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
+namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     const tooltips = {
         invalidAgentQuantity: "Commitment quantity must be a valid number",
         whatIsAgentCommitment: Utils.stringUnraw(`
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/customerdetailsstep.ts b/ts/VARPortal/CustomerSetup/ViewModels/customerdetailsstep.ts
index b9652ef..cd64fa7 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/customerdetailsstep.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/customerdetailsstep.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../Enums/resellertype.ts" />
+/// <reference path="../../../Enums/resellertype.ts" />
 /* tslint:disable:max-line-length */
 namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/dashboardtemplatesetup.ts b/ts/VARPortal/CustomerSetup/ViewModels/dashboardtemplatesetup.ts
index 822b187..f86353e 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/dashboardtemplatesetup.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/dashboardtemplatesetup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
+namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     declare const tabTemplates: Brightmetrics.Interfaces.ITabTemplate[];
     declare const dataConnectionGroups: Brightmetrics.Interfaces.IDataSourceGroup[];
 
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/datasourcesetup.ts b/ts/VARPortal/CustomerSetup/ViewModels/datasourcesetup.ts
index 3ce4a79..e4d4aa8 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/datasourcesetup.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/datasourcesetup.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../ViewModels/datasourcedialog.ts" />
 namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     import BVPIs = Brightmetrics.VARPortal.Interfaces;
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/diagnostics.ts b/ts/VARPortal/CustomerSetup/ViewModels/diagnostics.ts
index 0b498f5..edf40a9 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/diagnostics.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/diagnostics.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../../viewmodels/dialog.ts" />
 /// <reference path="../../../utils.ts" />
 
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/errordialog.ts b/ts/VARPortal/CustomerSetup/ViewModels/errordialog.ts
index 5374180..7c133dc 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/errordialog.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/errordialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../../viewmodels/dialog.ts" />
 /// <reference path="../../../utils.ts" />
 
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/examplestep1.ts b/ts/VARPortal/CustomerSetup/ViewModels/examplestep1.ts
index 75ae3e9..277b1ec 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/examplestep1.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/examplestep1.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
+namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     interface IStepData { [name: string]: any; }
 
     export class ExampleStep1 extends Brightmetrics.ViewModels.DialogViewModel {
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/examplestep2.ts b/ts/VARPortal/CustomerSetup/ViewModels/examplestep2.ts
index 5c0a112..c37e441 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/examplestep2.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/examplestep2.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
+namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     interface IStepData { [name: string]: any; }
 
     export class ExampleStep2 extends Brightmetrics.ViewModels.DialogViewModel {
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/productsubscriptionstep.ts b/ts/VARPortal/CustomerSetup/ViewModels/productsubscriptionstep.ts
index c329283..88f421a 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/productsubscriptionstep.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/productsubscriptionstep.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../Enums/resellertype.ts" />
+/// <reference path="../../../Enums/resellertype.ts" />
 namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BVIs = Brightmetrics.VARPortal.Interfaces;
diff --git a/ts/VARPortal/CustomerSetup/ViewModels/reporttemplatesetup.ts b/ts/VARPortal/CustomerSetup/ViewModels/reporttemplatesetup.ts
index e956f50..61e31cd 100644
--- a/ts/VARPortal/CustomerSetup/ViewModels/reporttemplatesetup.ts
+++ b/ts/VARPortal/CustomerSetup/ViewModels/reporttemplatesetup.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
+namespace Brightmetrics.VARPortal.CustomerSetup.ViewModels {
     import BRIDs = Brightmetrics.Reports.Interfaces.DTOs;
 
     declare const templates: BRIDs.IReportTemplateUnsafe[];
diff --git a/ts/VARPortal/Interfaces/itabtemplates.ts b/ts/VARPortal/Interfaces/itabtemplates.ts
index 861ea2e..5229b1b 100644
--- a/ts/VARPortal/Interfaces/itabtemplates.ts
+++ b/ts/VARPortal/Interfaces/itabtemplates.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.Interfaces {
+namespace Brightmetrics.VARPortal.Interfaces {
     export interface ITabTemplates {
         AutoCreate: boolean;
         ConnectionGroupType: number;
diff --git a/ts/VARPortal/PartnerDashboard/Interfaces/ipartnerdashboard.ts b/ts/VARPortal/PartnerDashboard/Interfaces/ipartnerdashboard.ts
index 3c3d542..c877e47 100644
--- a/ts/VARPortal/PartnerDashboard/Interfaces/ipartnerdashboard.ts
+++ b/ts/VARPortal/PartnerDashboard/Interfaces/ipartnerdashboard.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.PartnerDashboard.Interfaces {
+namespace Brightmetrics.VARPortal.PartnerDashboard.Interfaces {
     interface IPartnerDashboardSettings {
         dcgId: number;
         description: string | undefined;
diff --git a/ts/VARPortal/PartnerDashboard/Interfaces/itab.ts b/ts/VARPortal/PartnerDashboard/Interfaces/itab.ts
index 2827ad2..041173a 100644
--- a/ts/VARPortal/PartnerDashboard/Interfaces/itab.ts
+++ b/ts/VARPortal/PartnerDashboard/Interfaces/itab.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.PartnerDashboard.Interfaces {
+namespace Brightmetrics.VARPortal.PartnerDashboard.Interfaces {
     export interface ITab {
         name: string;
         value: number;
diff --git a/ts/VARPortal/PartnerDashboard/ViewModels/alldashboard.ts b/ts/VARPortal/PartnerDashboard/ViewModels/alldashboard.ts
index 7a2bcd0..8499446 100644
--- a/ts/VARPortal/PartnerDashboard/ViewModels/alldashboard.ts
+++ b/ts/VARPortal/PartnerDashboard/ViewModels/alldashboard.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../viewmodel.ts" />
+/// <reference path="../../../viewmodel.ts" />
 
 namespace Brightmetrics.VARPortal.PartnerDashboard.ViewModels {
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/VARPortal/PartnerDashboard/ViewModels/dashboardpartnereditortopbar.ts b/ts/VARPortal/PartnerDashboard/ViewModels/dashboardpartnereditortopbar.ts
index 97984d7..446b644 100644
--- a/ts/VARPortal/PartnerDashboard/ViewModels/dashboardpartnereditortopbar.ts
+++ b/ts/VARPortal/PartnerDashboard/ViewModels/dashboardpartnereditortopbar.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.VARPortal.PartnerDashboard.ViewModels {
+namespace Brightmetrics.VARPortal.PartnerDashboard.ViewModels {
     const inlineEditorCSSSelector = ".js-inline-editor";
     const inlineTextCSSSelector = ".js-inline-text";
     const minInlineEditorWidth = 50;
diff --git a/ts/VARPortal/PartnerDashboard/ViewModels/dashboardtemplateview.ts b/ts/VARPortal/PartnerDashboard/ViewModels/dashboardtemplateview.ts
index d6b8a9b..a87def2 100644
--- a/ts/VARPortal/PartnerDashboard/ViewModels/dashboardtemplateview.ts
+++ b/ts/VARPortal/PartnerDashboard/ViewModels/dashboardtemplateview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../../viewmodel.ts" />
+/// <reference path="../../../viewmodel.ts" />
 
 namespace Brightmetrics.VARPortal.PartnerDashboard.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/VARPortal/PartnerDashboard/ViewModels/dashbooardpartnersaveasdialog.ts b/ts/VARPortal/PartnerDashboard/ViewModels/dashbooardpartnersaveasdialog.ts
index 62f3d8a..1762932 100644
--- a/ts/VARPortal/PartnerDashboard/ViewModels/dashbooardpartnersaveasdialog.ts
+++ b/ts/VARPortal/PartnerDashboard/ViewModels/dashbooardpartnersaveasdialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="../../../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.VARPortal.PartnerDashboard.ViewModels {
diff --git a/ts/VARPortal/ViewModels/ManageCompaniesView.ts b/ts/VARPortal/ViewModels/ManageCompaniesView.ts
index d7c1083..d8ab933 100644
--- a/ts/VARPortal/ViewModels/ManageCompaniesView.ts
+++ b/ts/VARPortal/ViewModels/ManageCompaniesView.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 /// <reference path="../../viewmodels/dialog.ts" />
 /// <reference path="../../utils.ts" />
 
diff --git a/ts/VARPortal/ViewModels/ReportTemplateView.ts b/ts/VARPortal/ViewModels/ReportTemplateView.ts
index ad38a43..1099948 100644
--- a/ts/VARPortal/ViewModels/ReportTemplateView.ts
+++ b/ts/VARPortal/ViewModels/ReportTemplateView.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.VARPortal.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/VARPortal/ViewModels/customerMoreInfoDialog.ts b/ts/VARPortal/ViewModels/customerMoreInfoDialog.ts
index bdb4098..00bd3c4 100644
--- a/ts/VARPortal/ViewModels/customerMoreInfoDialog.ts
+++ b/ts/VARPortal/ViewModels/customerMoreInfoDialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../viewmodels/dialog.ts" />
 /// <reference path="../../utils.ts" />
 /// <reference path="../../Enums/resellertype.ts" />
diff --git a/ts/VARPortal/ViewModels/customerreport.ts b/ts/VARPortal/ViewModels/customerreport.ts
index 3da6a7d..7099071 100644
--- a/ts/VARPortal/ViewModels/customerreport.ts
+++ b/ts/VARPortal/ViewModels/customerreport.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.VARPortal.ViewModels {
 
diff --git a/ts/VARPortal/ViewModels/datasourcedialog.ts b/ts/VARPortal/ViewModels/datasourcedialog.ts
index e351358..32807f4 100644
--- a/ts/VARPortal/ViewModels/datasourcedialog.ts
+++ b/ts/VARPortal/ViewModels/datasourcedialog.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 /// <reference path="../../viewmodels/dialog.ts" />
 /// <reference path="../../utils.ts" />
 
diff --git a/ts/VARPortal/ViewModels/editsubscriptiontemplate.ts b/ts/VARPortal/ViewModels/editsubscriptiontemplate.ts
index 473b7c8..0b73cfe 100644
--- a/ts/VARPortal/ViewModels/editsubscriptiontemplate.ts
+++ b/ts/VARPortal/ViewModels/editsubscriptiontemplate.ts
@@ -1,4 +1,4 @@
-﻿// tslint:disable:max-classes-per-file
+// tslint:disable:max-classes-per-file
 /// <reference path="../../viewmodels/dialog.ts" />
 /// <reference path="../../utils.ts" />
 
diff --git a/ts/VARPortal/ViewModels/page.ts b/ts/VARPortal/ViewModels/page.ts
index 69be8ca..2ac8d7f 100644
--- a/ts/VARPortal/ViewModels/page.ts
+++ b/ts/VARPortal/ViewModels/page.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../ViewModels/pagebase.ts" />
+/// <reference path="../../ViewModels/pagebase.ts" />
 namespace Brightmetrics.VARPortal.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BVs = Brightmetrics.ViewModels;
diff --git a/ts/VARPortal/ViewModels/partnerTemplateDialog.ts b/ts/VARPortal/ViewModels/partnerTemplateDialog.ts
index 2626b53..83b3ed4 100644
--- a/ts/VARPortal/ViewModels/partnerTemplateDialog.ts
+++ b/ts/VARPortal/ViewModels/partnerTemplateDialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 /* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.VARPortal.ViewModels {
     import BRIDs = Brightmetrics.Reports.Interfaces.DTOs;
diff --git a/ts/VARPortal/ViewModels/varsettingsview.ts b/ts/VARPortal/ViewModels/varsettingsview.ts
index 8385423..70080f3 100644
--- a/ts/VARPortal/ViewModels/varsettingsview.ts
+++ b/ts/VARPortal/ViewModels/varsettingsview.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../../viewmodel.ts" />
+/// <reference path="../../viewmodel.ts" />
 
 namespace Brightmetrics.VARPortal.ViewModels {
     import bmis = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/accountactionsdialog.ts b/ts/ViewModels/accountactionsdialog.ts
index 4718d14..883ee67 100644
--- a/ts/ViewModels/accountactionsdialog.ts
+++ b/ts/ViewModels/accountactionsdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../ViewModels/navdialogbase.ts" />
+/// <reference path="../ViewModels/navdialogbase.ts" />
 
 namespace Brightmetrics.ViewModels {
     import bmi = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/app.ts b/ts/ViewModels/app.ts
index d9b28cc..eaab497 100644
--- a/ts/ViewModels/app.ts
+++ b/ts/ViewModels/app.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 /// <reference path="../PrintPreview/ViewModels/page.ts" />
 /// <reference path="../Reports/ViewModels/page.ts" />
 /// <reference path="../Enums/DataHostRegion.ts" />
diff --git a/ts/ViewModels/appsearch.ts b/ts/ViewModels/appsearch.ts
index b8e6c00..6d2750a 100644
--- a/ts/ViewModels/appsearch.ts
+++ b/ts/ViewModels/appsearch.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import BEs = Brightmetrics.Enums;
diff --git a/ts/ViewModels/buttonwithloading.ts b/ts/ViewModels/buttonwithloading.ts
index 196ec9e..6a51c42 100644
--- a/ts/ViewModels/buttonwithloading.ts
+++ b/ts/ViewModels/buttonwithloading.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import bmi = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/companyname.ts b/ts/ViewModels/companyname.ts
index d785132..e0563c4 100644
--- a/ts/ViewModels/companyname.ts
+++ b/ts/ViewModels/companyname.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     // Serves as margin-left/right
     const CUSHION = 20;
 
diff --git a/ts/ViewModels/datepicker.ts b/ts/ViewModels/datepicker.ts
index 025dce1..29876ba 100644
--- a/ts/ViewModels/datepicker.ts
+++ b/ts/ViewModels/datepicker.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../interfaces/idatepickeroptions.ts" />
+/// <reference path="../interfaces/idatepickeroptions.ts" />
 /// <reference path="dialog.ts" />
 
 namespace Brightmetrics.ViewModels {
diff --git a/ts/ViewModels/deleteconfirmationdialog.ts b/ts/ViewModels/deleteconfirmationdialog.ts
index 9b774dd..deebb31 100644
--- a/ts/ViewModels/deleteconfirmationdialog.ts
+++ b/ts/ViewModels/deleteconfirmationdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="dialog.ts" />
+/// <reference path="dialog.ts" />
 
 namespace Brightmetrics.ViewModels {
     import bmi = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/dialog.ts b/ts/ViewModels/dialog.ts
index 1788052..568bd62 100644
--- a/ts/ViewModels/dialog.ts
+++ b/ts/ViewModels/dialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../interfaces/idialogviewmodeloptions.ts" />
+/// <reference path="../interfaces/idialogviewmodeloptions.ts" />
 /// <reference path="../utils.ts" />
 /// <reference path="../viewmodel.ts" />
 
diff --git a/ts/ViewModels/emaildialog.ts b/ts/ViewModels/emaildialog.ts
index 82c8970..9106819 100644
--- a/ts/ViewModels/emaildialog.ts
+++ b/ts/ViewModels/emaildialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import BEs = Brightmetrics.Enums;
diff --git a/ts/ViewModels/emailoptionsdialog.ts b/ts/ViewModels/emailoptionsdialog.ts
index eac9a05..5abddd3 100644
--- a/ts/ViewModels/emailoptionsdialog.ts
+++ b/ts/ViewModels/emailoptionsdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 /// <reference path="../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.ViewModels {
diff --git a/ts/ViewModels/help.ts b/ts/ViewModels/help.ts
index 4b361f1..1ef956d 100644
--- a/ts/ViewModels/help.ts
+++ b/ts/ViewModels/help.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../ViewModels/navdialogbase.ts" />
+/// <reference path="../ViewModels/navdialogbase.ts" />
 
 namespace Brightmetrics.ViewModels {
 
diff --git a/ts/ViewModels/inlinetexteditor.ts b/ts/ViewModels/inlinetexteditor.ts
index 2449495..e4e7edd 100644
--- a/ts/ViewModels/inlinetexteditor.ts
+++ b/ts/ViewModels/inlinetexteditor.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     interface IProps {
         koInputValue: KnockoutObservable<string>;
         minInputWidth?: number;
diff --git a/ts/ViewModels/navdialogbase.ts b/ts/ViewModels/navdialogbase.ts
index c702fd8..2f7e4c9 100644
--- a/ts/ViewModels/navdialogbase.ts
+++ b/ts/ViewModels/navdialogbase.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     const dialogCSSSelector = "#nav-dialog";
diff --git a/ts/ViewModels/pagebase.ts b/ts/ViewModels/pagebase.ts
index fdb5e70..6483446 100644
--- a/ts/ViewModels/pagebase.ts
+++ b/ts/ViewModels/pagebase.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/pageloader.ts b/ts/ViewModels/pageloader.ts
index ae0a9f8..07c28be 100644
--- a/ts/ViewModels/pageloader.ts
+++ b/ts/ViewModels/pageloader.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     export class PageLoader extends ViewModel {
         public isLoading: KnockoutObservable<boolean>;
 
diff --git a/ts/ViewModels/pageunderconstructiondialog.ts b/ts/ViewModels/pageunderconstructiondialog.ts
index 88b248f..cd1240a 100644
--- a/ts/ViewModels/pageunderconstructiondialog.ts
+++ b/ts/ViewModels/pageunderconstructiondialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../ViewModels/dialog.ts" />
+/// <reference path="../ViewModels/dialog.ts" />
 
 namespace Brightmetrics.ViewModels {
     interface IPageUnderConstructionDialogProps {
diff --git a/ts/ViewModels/permissionsdialog.ts b/ts/ViewModels/permissionsdialog.ts
index da4c26d..de72955 100644
--- a/ts/ViewModels/permissionsdialog.ts
+++ b/ts/ViewModels/permissionsdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import bmi = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/pill.ts b/ts/ViewModels/pill.ts
index b805766..644ce2a 100644
--- a/ts/ViewModels/pill.ts
+++ b/ts/ViewModels/pill.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import BIs = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/scheduleentry.ts b/ts/ViewModels/scheduleentry.ts
index 5e24952..0a3960c 100644
--- a/ts/ViewModels/scheduleentry.ts
+++ b/ts/ViewModels/scheduleentry.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import BCs = Brightmetrics.Classes;
diff --git a/ts/ViewModels/scrollbar.ts b/ts/ViewModels/scrollbar.ts
index 4b47e50..4a99368 100644
--- a/ts/ViewModels/scrollbar.ts
+++ b/ts/ViewModels/scrollbar.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
 
     export class Scrollbar {
         public isScrolling: KnockoutObservable<boolean>;
diff --git a/ts/ViewModels/sendnowdialog.ts b/ts/ViewModels/sendnowdialog.ts
index a2d9189..c29cac1 100644
--- a/ts/ViewModels/sendnowdialog.ts
+++ b/ts/ViewModels/sendnowdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../Enums/dataperspective.ts" />
+/// <reference path="../Enums/dataperspective.ts" />
 /// <reference path="dialog.ts" />
 /// <reference path="../utils.ts" />
 
diff --git a/ts/ViewModels/sidebar.ts b/ts/ViewModels/sidebar.ts
index d088732..d22d86d 100644
--- a/ts/ViewModels/sidebar.ts
+++ b/ts/ViewModels/sidebar.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics.ViewModels {
     import BEs = Brightmetrics.Enums;
diff --git a/ts/ViewModels/statemanager.ts b/ts/ViewModels/statemanager.ts
index 9a23032..9002723 100644
--- a/ts/ViewModels/statemanager.ts
+++ b/ts/ViewModels/statemanager.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     const getId = ((inctr: number = 0) => (ns: string): string => (++inctr + ns))();
 
     // tslint:disable max-classes-per-file
diff --git a/ts/ViewModels/tabs.ts b/ts/ViewModels/tabs.ts
index 4626959..f910427 100644
--- a/ts/ViewModels/tabs.ts
+++ b/ts/ViewModels/tabs.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     import BVs = Brightmetrics.ViewModels;
     import BIs = Brightmetrics.Interfaces;
 
diff --git a/ts/ViewModels/tooltip.ts b/ts/ViewModels/tooltip.ts
index 613a53d..55a9e01 100644
--- a/ts/ViewModels/tooltip.ts
+++ b/ts/ViewModels/tooltip.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     export class Tooltip extends ViewModel {
diff --git a/ts/ViewModels/topbar.ts b/ts/ViewModels/topbar.ts
index b85b199..14e020e 100644
--- a/ts/ViewModels/topbar.ts
+++ b/ts/ViewModels/topbar.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     import BIs = Brightmetrics.Interfaces;
     import BLVs = Brightmetrics.LiteAnalytics.ViewModels;
     import BLIs = Brightmetrics.LiteAnalytics.Interfaces;
diff --git a/ts/ViewModels/topbarbanner.ts b/ts/ViewModels/topbarbanner.ts
index 3730e26..a639633 100644
--- a/ts/ViewModels/topbarbanner.ts
+++ b/ts/ViewModels/topbarbanner.ts
@@ -1,4 +1,4 @@
-﻿namespace Brightmetrics.ViewModels {
+namespace Brightmetrics.ViewModels {
     interface ITopBarBannerProps {
         banner: Brightmetrics.Interfaces.ITopBarBanner;
         onClick?: () => void;
diff --git a/ts/ViewModels/transferownershipdialog.ts b/ts/ViewModels/transferownershipdialog.ts
index 249a8ef..6efc5aa 100644
--- a/ts/ViewModels/transferownershipdialog.ts
+++ b/ts/ViewModels/transferownershipdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../Enums/dataperspective.ts" />
+/// <reference path="../Enums/dataperspective.ts" />
 /// <reference path="dialog.ts" />
 /// <reference path="../utils.ts" />
 
diff --git a/ts/ViewModels/usernotification.ts b/ts/ViewModels/usernotification.ts
index de63760..3387d89 100644
--- a/ts/ViewModels/usernotification.ts
+++ b/ts/ViewModels/usernotification.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../ViewModels/navdialogbase.ts" />
+/// <reference path="../ViewModels/navdialogbase.ts" />
 
 namespace Brightmetrics.ViewModels {
     import bmi = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/usernotificationsdialog.ts b/ts/ViewModels/usernotificationsdialog.ts
index b414c87..0e7f6a5 100644
--- a/ts/ViewModels/usernotificationsdialog.ts
+++ b/ts/ViewModels/usernotificationsdialog.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../ViewModels/navdialogbase.ts" />
+/// <reference path="../ViewModels/navdialogbase.ts" />
 
 namespace Brightmetrics.ViewModels {
     import bmi = Brightmetrics.Interfaces;
diff --git a/ts/ViewModels/userpermission.ts b/ts/ViewModels/userpermission.ts
index f67eea8..bfa29cd 100644
--- a/ts/ViewModels/userpermission.ts
+++ b/ts/ViewModels/userpermission.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="../viewmodel.ts" />
+/// <reference path="../viewmodel.ts" />
 
 namespace Brightmetrics.ViewModels {
     import bmi = Brightmetrics.Interfaces;
diff --git a/ts/ajaxrequest.ts b/ts/ajaxrequest.ts
index 2990959..323544a 100644
--- a/ts/ajaxrequest.ts
+++ b/ts/ajaxrequest.ts
@@ -1,4 +1,4 @@
-﻿declare const RESTEndpoint: string;
+declare const RESTEndpoint: string;
 
 namespace Brightmetrics.Utils {
     function restEndpoint() { return typeof RESTEndpoint === "undefined" ? "/REST" : RESTEndpoint; }
diff --git a/ts/auditableuseractivity.ts b/ts/auditableuseractivity.ts
index 995506d..9789b2d 100644
--- a/ts/auditableuseractivity.ts
+++ b/ts/auditableuseractivity.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:object-literal-sort-keys */
+/* tslint:disable:object-literal-sort-keys */
 namespace Brightmetrics.AuditableUserActivity {
     export enum Category {
         DASHBOARD_TICKER = "ticker",
diff --git a/ts/basicdialog.ts b/ts/basicdialog.ts
index 64db523..7e58e23 100644
--- a/ts/basicdialog.ts
+++ b/ts/basicdialog.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 namespace Brightmetrics {
     export class BasicDialog {
diff --git a/ts/basicdialog2.ts b/ts/basicdialog2.ts
index 9ce580b..2dada50 100644
--- a/ts/basicdialog2.ts
+++ b/ts/basicdialog2.ts
@@ -1,4 +1,4 @@
-﻿/* tslint:disable:no-reference */
+/* tslint:disable:no-reference */
 /// <reference path="ViewModels/dialog.ts" />
 
 namespace Brightmetrics {
diff --git a/ts/constants.ts b/ts/constants.ts
index 68d4f14..d082b57 100644
--- a/ts/constants.ts
+++ b/ts/constants.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="Reports/Enums/valuefiltertype.ts" />
+/// <reference path="Reports/Enums/valuefiltertype.ts" />
 /// <reference path="Enums/valuescale.ts" />
 /// <reference path="Enums/theme.ts" />
 
diff --git a/ts/pubsub.ts b/ts/pubsub.ts
index 2b4d660..cc6221c 100644
--- a/ts/pubsub.ts
+++ b/ts/pubsub.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="interfaces/idisposable.ts" />
diff --git a/ts/theme.ts b/ts/theme.ts
index 3e4fae1..5dac27c 100644
--- a/ts/theme.ts
+++ b/ts/theme.ts
@@ -1,3 +1,3 @@
-﻿namespace Brightmetrics {
+namespace Brightmetrics {
     export const theme: KnockoutObservable<Enums.Theme> = ko.observable();
 }
diff --git a/ts/viewmodel.ts b/ts/viewmodel.ts
index 8b1a388..ed3340a 100644
--- a/ts/viewmodel.ts
+++ b/ts/viewmodel.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="interfaces/iplainobject.ts" />
+/// <reference path="interfaces/iplainobject.ts" />
 /// <reference path="interfaces/idisposable.ts" />
 
 namespace Brightmetrics {
diff --git a/ts/weakmap.ts b/ts/weakmap.ts
index 9823188..e394071 100644
--- a/ts/weakmap.ts
+++ b/ts/weakmap.ts
@@ -1,4 +1,4 @@
-﻿// jshint ignore: start
+// jshint ignore: start
 
 /* tslint:disable:no-reference */
 /// <reference path="interfaces/idisposable.ts" />
diff --git a/types/clusterize.d.ts b/types/clusterize.d.ts
index e42bad5..cf88874 100644
--- a/types/clusterize.d.ts
+++ b/types/clusterize.d.ts
@@ -1,4 +1,4 @@
-﻿/// <reference path="knockout-3.4.0.d.ts" />
+/// <reference path="knockout-3.4.0.d.ts" />
 
 // Extrapolated from: https://clusterize.js.org/
 interface IClusterizeOptions {
diff --git a/types/custom-router.d.ts b/types/custom-router.d.ts
index 9c4beaf..3524f59 100644
--- a/types/custom-router.d.ts
+++ b/types/custom-router.d.ts
@@ -1,4 +1,4 @@
-﻿interface IRouterOptions {
+interface IRouterOptions {
     trigger?: boolean;
     replace?: boolean;
 }
diff --git a/types/flowgrid.d.ts b/types/flowgrid.d.ts
index 7421575..4995532 100644
--- a/types/flowgrid.d.ts
+++ b/types/flowgrid.d.ts
@@ -1,4 +1,4 @@
-﻿interface IFlowgridCoordinates {
+interface IFlowgridCoordinates {
     x: number;
     y: number;
 }
diff --git a/types/underscore-1.9.0.d.ts b/types/underscore-1.9.0.d.ts
index 6f0254f..a106d71 100644
--- a/types/underscore-1.9.0.d.ts
+++ b/types/underscore-1.9.0.d.ts
@@ -1,4 +1,4 @@
-﻿// Type definitions for Underscore 1.9
+// Type definitions for Underscore 1.9
 // Project: http://underscorejs.org/
 // Definitions by: Boris Yankov <https://github.com/borisyankov>,
 //                 Josh Baldwin <https://github.com/jbaldwin>,
